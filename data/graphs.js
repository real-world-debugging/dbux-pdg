export default {
  "chapterGroups": [
    {
      "name": "cryptography",
      "chapters": [
        {
          "name": "caesar-cipher",
          "exercises": [
            {
              "id": "javascript-algorithms#1",
              "algo": "caesar-cipher_caesarCipher",
              "label": "caesarCipher should not change a string with zero shift",
              "name": "caesarCipher should not change a string with zero shift@caesarCipher.test.js",
              "pdgs": [
                {
                  "pdgTitle": "caesarCipherEncrypt(abcd, 0)",
                  "uniqueTitle": "caesarCipherEncrypt(abcd, 0)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 57,
                        "index": 1228
                      },
                      "end": {
                        "line": 45,
                        "column": 1,
                        "index": 1544
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 57,
                        "index": 170
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 292
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "caesarCipherDecrypt(abcd, 0)",
                  "uniqueTitle": "caesarCipherDecrypt(abcd, 0)",
                  "contextId": 37,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
                    "loc": {
                      "start": {
                        "line": 53,
                        "column": 57,
                        "index": 1718
                      },
                      "end": {
                        "line": 65,
                        "column": 1,
                        "index": 2035
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 57,
                        "index": 170
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 292
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#2",
              "algo": "caesar-cipher_caesarCipher",
              "label": "caesarCipher should cipher a string with different shifts",
              "name": "caesarCipher should cipher a string with different shifts@caesarCipher.test.js",
              "pdgs": [
                {
                  "pdgTitle": "caesarCipherEncrypt(abcde, 3)",
                  "uniqueTitle": "caesarCipherEncrypt(abcde, 3)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 57,
                        "index": 1228
                      },
                      "end": {
                        "line": 45,
                        "column": 1,
                        "index": 1544
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 59,
                        "index": 357
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 719
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "caesarCipherDecrypt(defgh, 3)",
                  "uniqueTitle": "caesarCipherDecrypt(defgh, 3)",
                  "contextId": 38,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
                    "loc": {
                      "start": {
                        "line": 53,
                        "column": 57,
                        "index": 1718
                      },
                      "end": {
                        "line": 65,
                        "column": 1,
                        "index": 2035
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 59,
                        "index": 357
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 719
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "caesarCipherEncrypt(abcde, 1)",
                  "uniqueTitle": "caesarCipherEncrypt(abcde, 1)",
                  "contextId": 71,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 57,
                        "index": 1228
                      },
                      "end": {
                        "line": 45,
                        "column": 1,
                        "index": 1544
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 59,
                        "index": 357
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 719
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "caesarCipherDecrypt(bcdef, 1)",
                  "uniqueTitle": "caesarCipherDecrypt(bcdef, 1)",
                  "contextId": 104,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
                    "loc": {
                      "start": {
                        "line": 53,
                        "column": 57,
                        "index": 1718
                      },
                      "end": {
                        "line": 65,
                        "column": 1,
                        "index": 2035
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 59,
                        "index": 357
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 719
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "caesarCipherEncrypt(xyz, 1)",
                  "uniqueTitle": "caesarCipherEncrypt(xyz, 1)",
                  "contextId": 137,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 57,
                        "index": 1228
                      },
                      "end": {
                        "line": 45,
                        "column": 1,
                        "index": 1544
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 59,
                        "index": 357
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 719
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "caesarCipherDecrypt(yza, 1)",
                  "uniqueTitle": "caesarCipherDecrypt(yza, 1)",
                  "contextId": 168,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
                    "loc": {
                      "start": {
                        "line": 53,
                        "column": 57,
                        "index": 1718
                      },
                      "end": {
                        "line": 65,
                        "column": 1,
                        "index": 2035
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 59,
                        "index": 357
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 719
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#3",
              "algo": "caesar-cipher_caesarCipher",
              "label": "caesarCipher should be case insensitive",
              "name": "caesarCipher should be case insensitive@caesarCipher.test.js",
              "pdgs": [
                {
                  "pdgTitle": "caesarCipherEncrypt(ABCDE, 3)",
                  "uniqueTitle": "caesarCipherEncrypt(ABCDE, 3)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 57,
                        "index": 1228
                      },
                      "end": {
                        "line": 45,
                        "column": 1,
                        "index": 1544
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 41,
                        "index": 766
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 832
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#4",
              "algo": "caesar-cipher_caesarCipher",
              "label": "caesarCipher should correctly handle an empty strings",
              "name": "caesarCipher should correctly handle an empty strings@caesarCipher.test.js",
              "pdgs": [
                {
                  "pdgTitle": "caesarCipherEncrypt(, 3)",
                  "uniqueTitle": "caesarCipherEncrypt(, 3)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 57,
                        "index": 1228
                      },
                      "end": {
                        "line": 45,
                        "column": 1,
                        "index": 1544
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 55,
                        "index": 893
                      },
                      "end": {
                        "line": 26,
                        "column": 3,
                        "index": 949
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#5",
              "algo": "caesar-cipher_caesarCipher",
              "label": "caesarCipher should not cipher unknown chars",
              "name": "caesarCipher should not cipher unknown chars@caesarCipher.test.js",
              "pdgs": [
                {
                  "pdgTitle": "caesarCipherEncrypt(ab2cde, 3)",
                  "uniqueTitle": "caesarCipherEncrypt(ab2cde, 3)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 57,
                        "index": 1228
                      },
                      "end": {
                        "line": 45,
                        "column": 1,
                        "index": 1544
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 28,
                        "column": 46,
                        "index": 1001
                      },
                      "end": {
                        "line": 31,
                        "column": 3,
                        "index": 1131
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "caesarCipherDecrypt(de2fgh, 3)",
                  "uniqueTitle": "caesarCipherDecrypt(de2fgh, 3)",
                  "contextId": 39,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
                    "loc": {
                      "start": {
                        "line": 53,
                        "column": 57,
                        "index": 1718
                      },
                      "end": {
                        "line": 65,
                        "column": 1,
                        "index": 2035
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 28,
                        "column": 46,
                        "index": 1001
                      },
                      "end": {
                        "line": 31,
                        "column": 3,
                        "index": 1131
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#6",
              "algo": "caesar-cipher_caesarCipher",
              "label": "caesarCipher should encrypt and decrypt full phrases",
              "name": "caesarCipher should encrypt and decrypt full phrases@caesarCipher.test.js",
              "pdgs": [
                {
                  "pdgTitle": "caesarCipherEncrypt(THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG, 23)",
                  "uniqueTitle": "caesarCipherEncrypt(THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG, 23)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 57,
                        "index": 1228
                      },
                      "end": {
                        "line": 45,
                        "column": 1,
                        "index": 1544
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 54,
                        "index": 1191
                      },
                      "end": {
                        "line": 41,
                        "column": 3,
                        "index": 1501
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "caesarCipherDecrypt(qeb nrfzh yoltk clu grjmp lsbo qeb ixwv ald, 23)",
                  "uniqueTitle": "caesarCipherDecrypt(qeb nrfzh yoltk clu grjmp lsbo qeb ixwv ald, 23)",
                  "contextId": 76,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
                    "loc": {
                      "start": {
                        "line": 53,
                        "column": 57,
                        "index": 1718
                      },
                      "end": {
                        "line": 65,
                        "column": 1,
                        "index": 2035
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 54,
                        "index": 1191
                      },
                      "end": {
                        "line": 41,
                        "column": 3,
                        "index": 1501
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "hill-cipher",
          "exercises": [
            {
              "id": "javascript-algorithms#10",
              "algo": "hill-cipher_hillCipher",
              "label": "hillCipher should throw an error when the length of the keyString does not equal to the power of length of the message",
              "name": "hillCipher should throw an error when the length of the keyString does not equal to the power of length of the message@hillCipher.test.js",
              "pdgs": [
                {
                  "pdgTitle": "hillCipherEncrypt(ab, aaabbbccc)",
                  "uniqueTitle": "hillCipherEncrypt(ab, aaabbbccc)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/hill-cipher/hillCipher.js",
                    "loc": {
                      "start": {
                        "line": 60,
                        "column": 54,
                        "index": 1871
                      },
                      "end": {
                        "line": 87,
                        "column": 1,
                        "index": 2803
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 43,
                        "index": 1370
                      },
                      "end": {
                        "line": 38,
                        "column": 5,
                        "index": 1423
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#11",
              "algo": "hill-cipher_hillCipher",
              "label": "hillCipher should encrypt passed message using Hill Cipher",
              "name": "hillCipher should encrypt passed message using Hill Cipher@hillCipher.test.js",
              "pdgs": [
                {
                  "pdgTitle": "hillCipherEncrypt(ACT, GYBNQKURP)",
                  "uniqueTitle": "hillCipherEncrypt(ACT, GYBNQKURP)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/hill-cipher/hillCipher.js",
                    "loc": {
                      "start": {
                        "line": 60,
                        "column": 54,
                        "index": 1871
                      },
                      "end": {
                        "line": 87,
                        "column": 1,
                        "index": 2803
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 44,
                        "column": 62,
                        "index": 1643
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 1841
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hillCipherEncrypt(CAT, GYBNQKURP)",
                  "uniqueTitle": "hillCipherEncrypt(CAT, GYBNQKURP)",
                  "contextId": 64,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/hill-cipher/hillCipher.js",
                    "loc": {
                      "start": {
                        "line": 60,
                        "column": 54,
                        "index": 1871
                      },
                      "end": {
                        "line": 87,
                        "column": 1,
                        "index": 2803
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 44,
                        "column": 62,
                        "index": 1643
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 1841
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hillCipherEncrypt(GFG, HILLMAGIC)",
                  "uniqueTitle": "hillCipherEncrypt(GFG, HILLMAGIC)",
                  "contextId": 122,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/hill-cipher/hillCipher.js",
                    "loc": {
                      "start": {
                        "line": 60,
                        "column": 54,
                        "index": 1871
                      },
                      "end": {
                        "line": 87,
                        "column": 1,
                        "index": 2803
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 44,
                        "column": 62,
                        "index": 1643
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 1841
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#7",
              "algo": "hill-cipher_hillCipher",
              "label": "hillCipher should throw an exception when trying to decipher",
              "name": "hillCipher should throw an exception when trying to decipher@hillCipher.test.js",
              "pdgs": [
                {
                  "pdgTitle": "hillCipherDecrypt(This method is not implemented yet)",
                  "uniqueTitle": "hillCipherDecrypt(This method is not implemented yet)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/hill-cipher/hillCipher.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 39,
                        "index": 2880
                      },
                      "end": {
                        "line": 92,
                        "column": 1,
                        "index": 2942
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 169
                      },
                      "end": {
                        "line": 8,
                        "column": 3,
                        "index": 272
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#8",
              "algo": "hill-cipher_hillCipher",
              "label": "hillCipher should throw an error when message or keyString contains none letter character",
              "name": "hillCipher should throw an error when message or keyString contains none letter character@hillCipher.test.js",
              "pdgs": [
                {
                  "pdgTitle": "hillCipherEncrypt(hell3, helloworld)",
                  "uniqueTitle": "hillCipherEncrypt(hell3, helloworld)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/hill-cipher/hillCipher.js",
                    "loc": {
                      "start": {
                        "line": 60,
                        "column": 54,
                        "index": 1871
                      },
                      "end": {
                        "line": 87,
                        "column": 1,
                        "index": 2803
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 44,
                        "index": 418
                      },
                      "end": {
                        "line": 13,
                        "column": 5,
                        "index": 475
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hillCipherEncrypt(hello, hel12world)",
                  "uniqueTitle": "hillCipherEncrypt(hello, hel12world)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/hill-cipher/hillCipher.js",
                    "loc": {
                      "start": {
                        "line": 60,
                        "column": 54,
                        "index": 1871
                      },
                      "end": {
                        "line": 87,
                        "column": 1,
                        "index": 2803
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 46,
                        "index": 524
                      },
                      "end": {
                        "line": 16,
                        "column": 5,
                        "index": 581
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#9",
              "algo": "hill-cipher_hillCipher",
              "label": "hillCipher should throw an error when the length of the keyString has a square root which is not integer",
              "name": "hillCipher should throw an error when the length of the keyString has a square root which is not integer@hillCipher.test.js",
              "pdgs": [
                {
                  "pdgTitle": "hillCipherEncrypt(ab, ab)",
                  "uniqueTitle": "hillCipherEncrypt(ab, ab)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/cryptography/hill-cipher/hillCipher.js",
                    "loc": {
                      "start": {
                        "line": 60,
                        "column": 54,
                        "index": 1871
                      },
                      "end": {
                        "line": 87,
                        "column": 1,
                        "index": 2803
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js",
                    "loc": {
                      "start": {
                        "line": 27,
                        "column": 43,
                        "index": 995
                      },
                      "end": {
                        "line": 29,
                        "column": 5,
                        "index": 1041
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "rail-fence-cipher",
          "exercises": [
            {
              "id": "javascript-algorithms#16",
              "algo": "rail-fence-cipher_railFenceCipher",
              "label": "railFenceCipher encodes a string correctly for base=3",
              "name": "railFenceCipher encodes a string correctly for base=3@railFenceCipher.test.js"
            },
            {
              "id": "javascript-algorithms#17",
              "algo": "rail-fence-cipher_railFenceCipher",
              "label": "railFenceCipher decodes a string correctly for base=3",
              "name": "railFenceCipher decodes a string correctly for base=3@railFenceCipher.test.js"
            },
            {
              "id": "javascript-algorithms#18",
              "algo": "rail-fence-cipher_railFenceCipher",
              "label": "railFenceCipher encodes a string correctly for base=4",
              "name": "railFenceCipher encodes a string correctly for base=4@railFenceCipher.test.js"
            },
            {
              "id": "javascript-algorithms#19",
              "algo": "rail-fence-cipher_railFenceCipher",
              "label": "railFenceCipher decodes a string correctly for base=4",
              "name": "railFenceCipher decodes a string correctly for base=4@railFenceCipher.test.js"
            }
          ]
        }
      ]
    },
    {
      "name": "graph",
      "chapters": [
        {
          "name": "articulation-points",
          "exercises": [
            {
              "id": "javascript-algorithms#20",
              "algo": "articulation-points_articulationPoints",
              "label": "articulationPoints should find articulation points in simple graph",
              "name": "articulationPoints should find articulation points in simple graph@articulationPoints.test.js",
              "pdgs": [
                {
                  "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
                  "uniqueTitle": "articulationPoints({vertices,edges,isDirected})",
                  "contextId": 95,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 50,
                        "index": 696
                      },
                      "end": {
                        "line": 124,
                        "column": 1,
                        "index": 4517
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 62,
                        "index": 367
                      },
                      "end": {
                        "line": 26,
                        "column": 3,
                        "index": 1076
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
                  "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#2",
                  "contextId": 308,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 50,
                        "index": 696
                      },
                      "end": {
                        "line": 124,
                        "column": 1,
                        "index": 4517
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
                    "loc": {
                      "start": {
                        "line": 28,
                        "column": 77,
                        "index": 1159
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1866
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
                  "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#3",
                  "contextId": 557,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 50,
                        "index": 696
                      },
                      "end": {
                        "line": 124,
                        "column": 1,
                        "index": 4517
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
                    "loc": {
                      "start": {
                        "line": 49,
                        "column": 80,
                        "index": 1952
                      },
                      "end": {
                        "line": 75,
                        "column": 3,
                        "index": 2811
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#21",
              "algo": "articulation-points_articulationPoints",
              "label": "articulationPoints should find articulation points in simple graph with back edge",
              "name": "articulationPoints should find articulation points in simple graph with back edge@articulationPoints.test.js",
              "pdgs": [
                {
                  "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
                  "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#4",
                  "contextId": 113,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 50,
                        "index": 696
                      },
                      "end": {
                        "line": 124,
                        "column": 1,
                        "index": 4517
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
                    "loc": {
                      "start": {
                        "line": 28,
                        "column": 77,
                        "index": 1159
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1866
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
                  "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#5",
                  "contextId": 362,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 50,
                        "index": 696
                      },
                      "end": {
                        "line": 124,
                        "column": 1,
                        "index": 4517
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
                    "loc": {
                      "start": {
                        "line": 49,
                        "column": 80,
                        "index": 1952
                      },
                      "end": {
                        "line": 75,
                        "column": 3,
                        "index": 2811
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#22",
              "algo": "articulation-points_articulationPoints",
              "label": "articulationPoints should find articulation points in simple graph with back edge #2",
              "name": "articulationPoints should find articulation points in simple graph with back edge #2@articulationPoints.test.js",
              "pdgs": [
                {
                  "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
                  "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#6",
                  "contextId": 138,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 50,
                        "index": 696
                      },
                      "end": {
                        "line": 124,
                        "column": 1,
                        "index": 4517
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
                    "loc": {
                      "start": {
                        "line": 49,
                        "column": 80,
                        "index": 1952
                      },
                      "end": {
                        "line": 75,
                        "column": 3,
                        "index": 2811
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#23",
              "algo": "articulation-points_articulationPoints",
              "label": "articulationPoints should find articulation points in graph",
              "name": "articulationPoints should find articulation points in graph@articulationPoints.test.js",
              "pdgs": [
                {
                  "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
                  "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#7",
                  "contextId": 231,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 50,
                        "index": 696
                      },
                      "end": {
                        "line": 124,
                        "column": 1,
                        "index": 4517
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
                    "loc": {
                      "start": {
                        "line": 77,
                        "column": 55,
                        "index": 2872
                      },
                      "end": {
                        "line": 117,
                        "column": 3,
                        "index": 4381
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
                  "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#8",
                  "contextId": 734,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 50,
                        "index": 696
                      },
                      "end": {
                        "line": 124,
                        "column": 1,
                        "index": 4517
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
                    "loc": {
                      "start": {
                        "line": 119,
                        "column": 94,
                        "index": 4481
                      },
                      "end": {
                        "line": 159,
                        "column": 3,
                        "index": 5990
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#24",
              "algo": "articulation-points_articulationPoints",
              "label": "articulationPoints should find articulation points in graph starting with articulation root vertex",
              "name": "articulationPoints should find articulation points in graph starting with articulation root vertex@articulationPoints.test.js",
              "pdgs": [
                {
                  "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
                  "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#9",
                  "contextId": 231,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 50,
                        "index": 696
                      },
                      "end": {
                        "line": 124,
                        "column": 1,
                        "index": 4517
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
                    "loc": {
                      "start": {
                        "line": 119,
                        "column": 94,
                        "index": 4481
                      },
                      "end": {
                        "line": 159,
                        "column": 3,
                        "index": 5990
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#25",
              "algo": "articulation-points_articulationPoints",
              "label": "articulationPoints should find articulation points in yet another graph #1",
              "name": "articulationPoints should find articulation points in yet another graph #1@articulationPoints.test.js",
              "pdgs": [
                {
                  "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
                  "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#10",
                  "contextId": 138,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 50,
                        "index": 696
                      },
                      "end": {
                        "line": 124,
                        "column": 1,
                        "index": 4517
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
                    "loc": {
                      "start": {
                        "line": 161,
                        "column": 70,
                        "index": 6066
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 6996
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#26",
              "algo": "articulation-points_articulationPoints",
              "label": "articulationPoints should find articulation points in yet another graph #2",
              "name": "articulationPoints should find articulation points in yet another graph #2@articulationPoints.test.js",
              "pdgs": [
                {
                  "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
                  "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#11",
                  "contextId": 206,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 50,
                        "index": 696
                      },
                      "end": {
                        "line": 124,
                        "column": 1,
                        "index": 4517
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
                    "loc": {
                      "start": {
                        "line": 190,
                        "column": 70,
                        "index": 7072
                      },
                      "end": {
                        "line": 224,
                        "column": 3,
                        "index": 8248
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "bellman-ford",
          "exercises": [
            {
              "id": "javascript-algorithms#27",
              "algo": "bellman-ford_bellmanFord",
              "label": "bellmanFord should find minimum paths to all vertices for undirected graph",
              "name": "bellmanFord should find minimum paths to all vertices for undirected graph@bellmanFord.test.js",
              "pdgs": [
                {
                  "pdgTitle": "bellmanFord({vertices,edges,isDirected}, {value,edges})",
                  "uniqueTitle": "bellmanFord({vertices,edges,isDirected}, {value,edges})",
                  "contextId": 282,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/bellman-ford/bellmanFord.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 56,
                        "index": 172
                      },
                      "end": {
                        "line": 49,
                        "column": 1,
                        "index": 1599
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/bellman-ford/__test__/bellmanFord.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 77,
                        "index": 361
                      },
                      "end": {
                        "line": 68,
                        "column": 3,
                        "index": 2412
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#28",
              "algo": "bellman-ford_bellmanFord",
              "label": "bellmanFord should find minimum paths to all vertices for directed graph with negative edge weights",
              "name": "bellmanFord should find minimum paths to all vertices for directed graph with negative edge weights@bellmanFord.test.js",
              "pdgs": [
                {
                  "pdgTitle": "bellmanFord({vertices,edges,isDirected}, {value,edges})",
                  "uniqueTitle": "bellmanFord({vertices,edges,isDirected}, {value,edges})#2",
                  "contextId": 179,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/bellman-ford/bellmanFord.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 56,
                        "index": 172
                      },
                      "end": {
                        "line": 49,
                        "column": 1,
                        "index": 1599
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/bellman-ford/__test__/bellmanFord.test.js",
                    "loc": {
                      "start": {
                        "line": 70,
                        "column": 102,
                        "index": 2520
                      },
                      "end": {
                        "line": 120,
                        "column": 3,
                        "index": 4150
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "breadth-first-search",
          "exercises": [
            {
              "id": "javascript-algorithms#29",
              "algo": "breadth-first-search_breadthFirstSearch",
              "label": "breadthFirstSearch should perform BFS operation on graph",
              "name": "breadthFirstSearch should perform BFS operation on graph@breadthFirstSearch.test.js",
              "pdgs": [
                {
                  "pdgTitle": "breadthFirstSearch({vertices,edges,isDirected}, {value,edges})",
                  "uniqueTitle": "breadthFirstSearch({vertices,edges,isDirected}, {value,edges})",
                  "contextId": 205,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/breadth-first-search/breadthFirstSearch.js",
                    "loc": {
                      "start": {
                        "line": 55,
                        "column": 2,
                        "index": 1575
                      },
                      "end": {
                        "line": 83,
                        "column": 1,
                        "index": 2418
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/breadth-first-search/__test__/breadthFirstSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 52,
                        "index": 357
                      },
                      "end": {
                        "line": 106,
                        "column": 3,
                        "index": 3895
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "breadthFirstSearch({vertices,edges,isDirected}, {value,edges}, {enterVertex,leaveVertex})",
                  "uniqueTitle": "breadthFirstSearch({vertices,edges,isDirected}, {value,edges}, {enterVertex,leaveVertex})",
                  "contextId": 343,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/breadth-first-search/breadthFirstSearch.js",
                    "loc": {
                      "start": {
                        "line": 55,
                        "column": 2,
                        "index": 1575
                      },
                      "end": {
                        "line": 83,
                        "column": 1,
                        "index": 2418
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/breadth-first-search/__test__/breadthFirstSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 52,
                        "index": 357
                      },
                      "end": {
                        "line": 106,
                        "column": 3,
                        "index": 3895
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#30",
              "algo": "breadth-first-search_breadthFirstSearch",
              "label": "breadthFirstSearch should allow to create custom vertex visiting logic",
              "name": "breadthFirstSearch should allow to create custom vertex visiting logic@breadthFirstSearch.test.js",
              "pdgs": [
                {
                  "pdgTitle": "breadthFirstSearch({vertices,edges,isDirected}, {value,edges}, {enterVertex,leaveVertex,allowTraversal})",
                  "uniqueTitle": "breadthFirstSearch({vertices,edges,isDirected}, {value,edges}, {enterVertex,leaveVertex,allowTraversal})",
                  "contextId": 205,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/breadth-first-search/breadthFirstSearch.js",
                    "loc": {
                      "start": {
                        "line": 55,
                        "column": 2,
                        "index": 1575
                      },
                      "end": {
                        "line": 83,
                        "column": 1,
                        "index": 2418
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/breadth-first-search/__test__/breadthFirstSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 108,
                        "column": 66,
                        "index": 3967
                      },
                      "end": {
                        "line": 199,
                        "column": 3,
                        "index": 7388
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "bridges",
          "exercises": [
            {
              "id": "javascript-algorithms#31",
              "algo": "bridges_graphBridges",
              "label": "graphBridges should find bridges in simple graph",
              "name": "graphBridges should find bridges in simple graph@graphBridges.test.js",
              "pdgs": [
                {
                  "pdgTitle": "graphBridges({vertices,edges,isDirected})",
                  "uniqueTitle": "graphBridges({vertices,edges,isDirected})",
                  "contextId": 95,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/bridges/graphBridges.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 44,
                        "index": 468
                      },
                      "end": {
                        "line": 111,
                        "column": 1,
                        "index": 3784
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/bridges/__test__/graphBridges.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 50,
                        "index": 337
                      },
                      "end": {
                        "line": 27,
                        "column": 3,
                        "index": 1038
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "graphBridges({vertices,edges,isDirected})",
                  "uniqueTitle": "graphBridges({vertices,edges,isDirected})#2",
                  "contextId": 350,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/bridges/graphBridges.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 44,
                        "index": 468
                      },
                      "end": {
                        "line": 111,
                        "column": 1,
                        "index": 3784
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/bridges/__test__/graphBridges.test.js",
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 65,
                        "index": 1109
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 1767
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#32",
              "algo": "bridges_graphBridges",
              "label": "graphBridges should find bridges in simple graph with back edge",
              "name": "graphBridges should find bridges in simple graph with back edge@graphBridges.test.js",
              "pdgs": [
                {
                  "pdgTitle": "graphBridges({vertices,edges,isDirected})",
                  "uniqueTitle": "graphBridges({vertices,edges,isDirected})#3",
                  "contextId": 113,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/bridges/graphBridges.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 44,
                        "index": 468
                      },
                      "end": {
                        "line": 111,
                        "column": 1,
                        "index": 3784
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/bridges/__test__/graphBridges.test.js",
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 65,
                        "index": 1109
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 1767
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#33",
              "algo": "bridges_graphBridges",
              "label": "graphBridges should find bridges in graph",
              "name": "graphBridges should find bridges in graph@graphBridges.test.js",
              "pdgs": [
                {
                  "pdgTitle": "graphBridges({vertices,edges,isDirected})",
                  "uniqueTitle": "graphBridges({vertices,edges,isDirected})#4",
                  "contextId": 231,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/bridges/graphBridges.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 44,
                        "index": 468
                      },
                      "end": {
                        "line": 111,
                        "column": 1,
                        "index": 3784
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/bridges/__test__/graphBridges.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 43,
                        "index": 1816
                      },
                      "end": {
                        "line": 89,
                        "column": 3,
                        "index": 3175
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "graphBridges({vertices,edges,isDirected})",
                  "uniqueTitle": "graphBridges({vertices,edges,isDirected})#5",
                  "contextId": 775,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/bridges/graphBridges.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 44,
                        "index": 468
                      },
                      "end": {
                        "line": 111,
                        "column": 1,
                        "index": 3784
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/bridges/__test__/graphBridges.test.js",
                    "loc": {
                      "start": {
                        "line": 91,
                        "column": 79,
                        "index": 3260
                      },
                      "end": {
                        "line": 130,
                        "column": 3,
                        "index": 4619
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#34",
              "algo": "bridges_graphBridges",
              "label": "graphBridges should find bridges in graph starting with different root vertex",
              "name": "graphBridges should find bridges in graph starting with different root vertex@graphBridges.test.js",
              "pdgs": [
                {
                  "pdgTitle": "graphBridges({vertices,edges,isDirected})",
                  "uniqueTitle": "graphBridges({vertices,edges,isDirected})#6",
                  "contextId": 231,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/bridges/graphBridges.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 44,
                        "index": 468
                      },
                      "end": {
                        "line": 111,
                        "column": 1,
                        "index": 3784
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/bridges/__test__/graphBridges.test.js",
                    "loc": {
                      "start": {
                        "line": 91,
                        "column": 79,
                        "index": 3260
                      },
                      "end": {
                        "line": 130,
                        "column": 3,
                        "index": 4619
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#35",
              "algo": "bridges_graphBridges",
              "label": "graphBridges should find bridges in yet another graph #1",
              "name": "graphBridges should find bridges in yet another graph #1@graphBridges.test.js",
              "pdgs": [
                {
                  "pdgTitle": "graphBridges({vertices,edges,isDirected})",
                  "uniqueTitle": "graphBridges({vertices,edges,isDirected})#7",
                  "contextId": 138,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/bridges/graphBridges.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 44,
                        "index": 468
                      },
                      "end": {
                        "line": 111,
                        "column": 1,
                        "index": 3784
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/bridges/__test__/graphBridges.test.js",
                    "loc": {
                      "start": {
                        "line": 132,
                        "column": 58,
                        "index": 4683
                      },
                      "end": {
                        "line": 159,
                        "column": 3,
                        "index": 5549
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#36",
              "algo": "bridges_graphBridges",
              "label": "graphBridges should find bridges in yet another graph #2",
              "name": "graphBridges should find bridges in yet another graph #2@graphBridges.test.js",
              "pdgs": [
                {
                  "pdgTitle": "graphBridges({vertices,edges,isDirected})",
                  "uniqueTitle": "graphBridges({vertices,edges,isDirected})#8",
                  "contextId": 206,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/bridges/graphBridges.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 44,
                        "index": 468
                      },
                      "end": {
                        "line": 111,
                        "column": 1,
                        "index": 3784
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/bridges/__test__/graphBridges.test.js",
                    "loc": {
                      "start": {
                        "line": 161,
                        "column": 58,
                        "index": 5613
                      },
                      "end": {
                        "line": 195,
                        "column": 3,
                        "index": 6740
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "depth-first-search",
          "exercises": [
            {
              "id": "javascript-algorithms#37",
              "algo": "depth-first-search_depthFirstSearch",
              "label": "depthFirstSearch should perform DFS operation on graph",
              "name": "depthFirstSearch should perform DFS operation on graph@depthFirstSearch.test.js",
              "pdgs": [
                {
                  "pdgTitle": "depthFirstSearch({vertices,edges,isDirected}, {value,edges})",
                  "uniqueTitle": "depthFirstSearch({vertices,edges,isDirected}, {value,edges})",
                  "contextId": 182,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/depth-first-search/depthFirstSearch.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 72,
                        "index": 2116
                      },
                      "end": {
                        "line": 82,
                        "column": 1,
                        "index": 2269
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/depth-first-search/__test__/depthFirstSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 52,
                        "index": 351
                      },
                      "end": {
                        "line": 105,
                        "column": 3,
                        "index": 3749
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "depthFirstSearch({vertices,edges,isDirected}, {value,edges}, {enterVertex,leaveVertex})",
                  "uniqueTitle": "depthFirstSearch({vertices,edges,isDirected}, {value,edges}, {enterVertex,leaveVertex})",
                  "contextId": 265,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/depth-first-search/depthFirstSearch.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 72,
                        "index": 2116
                      },
                      "end": {
                        "line": 82,
                        "column": 1,
                        "index": 2269
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/depth-first-search/__test__/depthFirstSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 52,
                        "index": 351
                      },
                      "end": {
                        "line": 105,
                        "column": 3,
                        "index": 3749
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#38",
              "algo": "depth-first-search_depthFirstSearch",
              "label": "depthFirstSearch allow users to redefine vertex visiting logic",
              "name": "depthFirstSearch allow users to redefine vertex visiting logic@depthFirstSearch.test.js",
              "pdgs": [
                {
                  "pdgTitle": "depthFirstSearch({vertices,edges,isDirected}, {value,edges}, {enterVertex,leaveVertex,allowTraversal})",
                  "uniqueTitle": "depthFirstSearch({vertices,edges,isDirected}, {value,edges}, {enterVertex,leaveVertex,allowTraversal})",
                  "contextId": 182,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/depth-first-search/depthFirstSearch.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 72,
                        "index": 2116
                      },
                      "end": {
                        "line": 82,
                        "column": 1,
                        "index": 2269
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/depth-first-search/__test__/depthFirstSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 107,
                        "column": 60,
                        "index": 3815
                      },
                      "end": {
                        "line": 202,
                        "column": 3,
                        "index": 7157
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "detect-cycle",
          "exercises": [
            {
              "id": "javascript-algorithms#39",
              "algo": "detect-cycle_detectDirectedCycle",
              "label": "detectDirectedCycle should detect directed cycle",
              "name": "detectDirectedCycle should detect directed cycle@detectDirectedCycle.test.js",
              "pdgs": [
                {
                  "pdgTitle": "detectDirectedCycle({vertices,edges,isDirected})",
                  "uniqueTitle": "detectDirectedCycle({vertices,edges,isDirected})",
                  "contextId": 146,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/detect-cycle/detectDirectedCycle.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 51,
                        "index": 225
                      },
                      "end": {
                        "line": 97,
                        "column": 1,
                        "index": 3532
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/detect-cycle/__test__/detectDirectedCycle.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 43,
                        "index": 351
                      },
                      "end": {
                        "line": 41,
                        "column": 3,
                        "index": 1384
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "detectDirectedCycle({vertices,edges,isDirected})",
                  "uniqueTitle": "detectDirectedCycle({vertices,edges,isDirected})#2",
                  "contextId": 276,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/detect-cycle/detectDirectedCycle.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 51,
                        "index": 225
                      },
                      "end": {
                        "line": 97,
                        "column": 1,
                        "index": 3532
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/detect-cycle/__test__/detectDirectedCycle.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 43,
                        "index": 351
                      },
                      "end": {
                        "line": 41,
                        "column": 3,
                        "index": 1384
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#40",
              "algo": "detect-cycle_detectUndirectedCycleUsingDisjointSet",
              "label": "detectUndirectedCycleUsingDisjointSet should detect undirected cycle",
              "name": "detectUndirectedCycleUsingDisjointSet should detect undirected cycle@detectUndirectedCycleUsingDisjointSet.test.js",
              "pdgs": [
                {
                  "pdgTitle": "detectUndirectedCycleUsingDisjointSet({vertices,edges,isDirected})",
                  "uniqueTitle": "detectUndirectedCycleUsingDisjointSet({vertices,edges,isDirected})",
                  "contextId": 147,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/detect-cycle/detectUndirectedCycleUsingDisjointSet.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 69,
                        "index": 246
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 1226
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/detect-cycle/__test__/detectUndirectedCycleUsingDisjointSet.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 45,
                        "index": 407
                      },
                      "end": {
                        "line": 35,
                        "column": 3,
                        "index": 1332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "detectUndirectedCycleUsingDisjointSet({vertices,edges,isDirected})",
                  "uniqueTitle": "detectUndirectedCycleUsingDisjointSet({vertices,edges,isDirected})#2",
                  "contextId": 528,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/detect-cycle/detectUndirectedCycleUsingDisjointSet.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 69,
                        "index": 246
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 1226
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/detect-cycle/__test__/detectUndirectedCycleUsingDisjointSet.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 45,
                        "index": 407
                      },
                      "end": {
                        "line": 35,
                        "column": 3,
                        "index": 1332
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#41",
              "algo": "detect-cycle_detectUndirectedCycle",
              "label": "detectUndirectedCycle should detect undirected cycle",
              "name": "detectUndirectedCycle should detect undirected cycle@detectUndirectedCycle.test.js",
              "pdgs": [
                {
                  "pdgTitle": "detectUndirectedCycle({vertices,edges,isDirected})",
                  "uniqueTitle": "detectUndirectedCycle({vertices,edges,isDirected})",
                  "contextId": 146,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/detect-cycle/detectUndirectedCycle.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 53,
                        "index": 229
                      },
                      "end": {
                        "line": 65,
                        "column": 1,
                        "index": 2126
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/detect-cycle/__test__/detectUndirectedCycle.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 45,
                        "index": 359
                      },
                      "end": {
                        "line": 40,
                        "column": 3,
                        "index": 1334
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "detectUndirectedCycle({vertices,edges,isDirected})",
                  "uniqueTitle": "detectUndirectedCycle({vertices,edges,isDirected})#2",
                  "contextId": 280,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/detect-cycle/detectUndirectedCycle.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 53,
                        "index": 229
                      },
                      "end": {
                        "line": 65,
                        "column": 1,
                        "index": 2126
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/detect-cycle/__test__/detectUndirectedCycle.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 45,
                        "index": 359
                      },
                      "end": {
                        "line": 40,
                        "column": 3,
                        "index": 1334
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "dijkstra",
          "exercises": [
            {
              "id": "javascript-algorithms#42",
              "algo": "dijkstra_dijkstra",
              "label": "dijkstra should find minimum paths to all vertices for undirected graph",
              "name": "dijkstra should find minimum paths to all vertices for undirected graph@dijkstra.test.js",
              "pdgs": [
                {
                  "pdgTitle": "dijkstra({vertices,edges,isDirected}, {value,edges})",
                  "uniqueTitle": "dijkstra({vertices,edges,isDirected}, {value,edges})",
                  "contextId": 285,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/dijkstra/dijkstra.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 53,
                        "index": 577
                      },
                      "end": {
                        "line": 81,
                        "column": 1,
                        "index": 3063
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/dijkstra/__test__/dijkstra.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 77,
                        "index": 352
                      },
                      "end": {
                        "line": 68,
                        "column": 3,
                        "index": 2391
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#43",
              "algo": "dijkstra_dijkstra",
              "label": "dijkstra should find minimum paths to all vertices for directed graph with negative edge weights",
              "name": "dijkstra should find minimum paths to all vertices for directed graph with negative edge weights@dijkstra.test.js",
              "pdgs": [
                {
                  "pdgTitle": "dijkstra({vertices,edges,isDirected}, {value,edges})",
                  "uniqueTitle": "dijkstra({vertices,edges,isDirected}, {value,edges})#2",
                  "contextId": 182,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/dijkstra/dijkstra.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 53,
                        "index": 577
                      },
                      "end": {
                        "line": 81,
                        "column": 1,
                        "index": 3063
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/dijkstra/__test__/dijkstra.test.js",
                    "loc": {
                      "start": {
                        "line": 70,
                        "column": 102,
                        "index": 2499
                      },
                      "end": {
                        "line": 120,
                        "column": 3,
                        "index": 4117
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "eulerian-path",
          "exercises": [
            {
              "id": "javascript-algorithms#44",
              "algo": "eulerian-path_eulerianPath",
              "label": "eulerianPath should throw an error when graph is not Eulerian",
              "name": "eulerianPath should throw an error when graph is not Eulerian@eulerianPath.test.js",
              "pdgs": []
            },
            {
              "id": "javascript-algorithms#45",
              "algo": "eulerian-path_eulerianPath",
              "label": "eulerianPath should find Eulerian Circuit in graph",
              "name": "eulerianPath should find Eulerian Circuit in graph@eulerianPath.test.js",
              "pdgs": []
            },
            {
              "id": "javascript-algorithms#46",
              "algo": "eulerian-path_eulerianPath",
              "label": "eulerianPath should find Eulerian Path in graph",
              "name": "eulerianPath should find Eulerian Path in graph@eulerianPath.test.js",
              "pdgs": []
            }
          ]
        },
        {
          "name": "floyd-warshall",
          "exercises": [
            {
              "id": "javascript-algorithms#47",
              "algo": "floyd-warshall_floydWarshall",
              "label": "floydWarshall should find minimum paths to all vertices for undirected graph",
              "name": "floydWarshall should find minimum paths to all vertices for undirected graph@floydWarshall.test.js",
              "pdgs": [
                {
                  "pdgTitle": "floydWarshall({vertices,edges,isDirected})",
                  "uniqueTitle": "floydWarshall({vertices,edges,isDirected})",
                  "contextId": 268,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/floyd-warshall/floydWarshall.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 149
                      },
                      "end": {
                        "line": 77,
                        "column": 1,
                        "index": 3113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/floyd-warshall/__test__/floydWarshall.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 77,
                        "index": 367
                      },
                      "end": {
                        "line": 89,
                        "column": 3,
                        "index": 3679
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#48",
              "algo": "floyd-warshall_floydWarshall",
              "label": "floydWarshall should find minimum paths to all vertices for directed graph",
              "name": "floydWarshall should find minimum paths to all vertices for directed graph@floydWarshall.test.js",
              "pdgs": [
                {
                  "pdgTitle": "floydWarshall({vertices,edges,isDirected})",
                  "uniqueTitle": "floydWarshall({vertices,edges,isDirected})#2",
                  "contextId": 137,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/floyd-warshall/floydWarshall.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 149
                      },
                      "end": {
                        "line": 77,
                        "column": 1,
                        "index": 3113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/floyd-warshall/__test__/floydWarshall.test.js",
                    "loc": {
                      "start": {
                        "line": 91,
                        "column": 75,
                        "index": 3760
                      },
                      "end": {
                        "line": 152,
                        "column": 3,
                        "index": 5929
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "floydWarshall({vertices,edges,isDirected})",
                  "uniqueTitle": "floydWarshall({vertices,edges,isDirected})#3",
                  "contextId": 487,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/floyd-warshall/floydWarshall.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 149
                      },
                      "end": {
                        "line": 77,
                        "column": 1,
                        "index": 3113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/floyd-warshall/__test__/floydWarshall.test.js",
                    "loc": {
                      "start": {
                        "line": 154,
                        "column": 102,
                        "index": 6037
                      },
                      "end": {
                        "line": 225,
                        "column": 3,
                        "index": 8922
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#49",
              "algo": "floyd-warshall_floydWarshall",
              "label": "floydWarshall should find minimum paths to all vertices for directed graph with negative edge weights",
              "name": "floydWarshall should find minimum paths to all vertices for directed graph with negative edge weights@floydWarshall.test.js",
              "pdgs": [
                {
                  "pdgTitle": "floydWarshall({vertices,edges,isDirected})",
                  "uniqueTitle": "floydWarshall({vertices,edges,isDirected})#4",
                  "contextId": 167,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/floyd-warshall/floydWarshall.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 149
                      },
                      "end": {
                        "line": 77,
                        "column": 1,
                        "index": 3113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/floyd-warshall/__test__/floydWarshall.test.js",
                    "loc": {
                      "start": {
                        "line": 154,
                        "column": 102,
                        "index": 6037
                      },
                      "end": {
                        "line": 225,
                        "column": 3,
                        "index": 8922
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "hamiltonian-cycle",
          "exercises": [
            {
              "id": "javascript-algorithms#50",
              "algo": "hamiltonian-cycle_hamiltonianCycle",
              "label": "hamiltonianCycle should find hamiltonian paths in graph",
              "name": "hamiltonianCycle should find hamiltonian paths in graph@hamiltonianCycle.test.js",
              "pdgs": [
                {
                  "pdgTitle": "hamiltonianCycle({vertices,edges,isDirected})",
                  "uniqueTitle": "hamiltonianCycle({vertices,edges,isDirected})",
                  "contextId": 191,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/hamiltonian-cycle/hamiltonianCycle.js",
                    "loc": {
                      "start": {
                        "line": 117,
                        "column": 48,
                        "index": 3688
                      },
                      "end": {
                        "line": 146,
                        "column": 1,
                        "index": 4582
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/hamiltonian-cycle/__test__/hamiltonianCycle.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 53,
                        "index": 352
                      },
                      "end": {
                        "line": 61,
                        "column": 3,
                        "index": 2796
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#51",
              "algo": "hamiltonian-cycle_hamiltonianCycle",
              "label": "hamiltonianCycle should return false for graph without Hamiltonian path",
              "name": "hamiltonianCycle should return false for graph without Hamiltonian path@hamiltonianCycle.test.js",
              "pdgs": [
                {
                  "pdgTitle": "hamiltonianCycle({vertices,edges,isDirected})",
                  "uniqueTitle": "hamiltonianCycle({vertices,edges,isDirected})#2",
                  "contextId": 155,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/hamiltonian-cycle/hamiltonianCycle.js",
                    "loc": {
                      "start": {
                        "line": 117,
                        "column": 48,
                        "index": 3688
                      },
                      "end": {
                        "line": 146,
                        "column": 1,
                        "index": 4582
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/hamiltonian-cycle/__test__/hamiltonianCycle.test.js",
                    "loc": {
                      "start": {
                        "line": 63,
                        "column": 69,
                        "index": 2871
                      },
                      "end": {
                        "line": 89,
                        "column": 3,
                        "index": 3713
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "kruskal",
          "exercises": [
            {
              "id": "javascript-algorithms#52",
              "algo": "kruskal_kruskal",
              "label": "kruskal should fire an error for directed graph",
              "name": "kruskal should fire an error for directed graph@kruskal.test.js",
              "pdgs": [
                {
                  "pdgTitle": "kruskal({vertices,edges,isDirected})",
                  "uniqueTitle": "kruskal({vertices,edges,isDirected})",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/kruskal/kruskal.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 39,
                        "index": 294
                      },
                      "end": {
                        "line": 65,
                        "column": 1,
                        "index": 2223
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/kruskal/__test__/kruskal.test.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 40,
                        "index": 369
                      },
                      "end": {
                        "line": 12,
                        "column": 5,
                        "index": 440
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#53",
              "algo": "kruskal_kruskal",
              "label": "kruskal should find minimum spanning tree",
              "name": "kruskal should find minimum spanning tree@kruskal.test.js",
              "pdgs": [
                {
                  "pdgTitle": "kruskal({vertices,edges,isDirected})",
                  "uniqueTitle": "kruskal({vertices,edges,isDirected})#2",
                  "contextId": 257,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/kruskal/kruskal.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 39,
                        "index": 294
                      },
                      "end": {
                        "line": 65,
                        "column": 1,
                        "index": 2223
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/kruskal/__test__/kruskal.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 48,
                        "index": 555
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2150
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "kruskal({vertices,edges,isDirected})",
                  "uniqueTitle": "kruskal({vertices,edges,isDirected})#3",
                  "contextId": 1236,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/kruskal/kruskal.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 39,
                        "index": 294
                      },
                      "end": {
                        "line": 65,
                        "column": 1,
                        "index": 2223
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/kruskal/__test__/kruskal.test.js",
                    "loc": {
                      "start": {
                        "line": 65,
                        "column": 65,
                        "index": 2221
                      },
                      "end": {
                        "line": 98,
                        "column": 3,
                        "index": 3279
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#54",
              "algo": "kruskal_kruskal",
              "label": "kruskal should find minimum spanning tree for simple graph",
              "name": "kruskal should find minimum spanning tree for simple graph@kruskal.test.js",
              "pdgs": [
                {
                  "pdgTitle": "kruskal({vertices,edges,isDirected})",
                  "uniqueTitle": "kruskal({vertices,edges,isDirected})#4",
                  "contextId": 141,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/kruskal/kruskal.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 39,
                        "index": 294
                      },
                      "end": {
                        "line": 65,
                        "column": 1,
                        "index": 2223
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/kruskal/__test__/kruskal.test.js",
                    "loc": {
                      "start": {
                        "line": 65,
                        "column": 65,
                        "index": 2221
                      },
                      "end": {
                        "line": 98,
                        "column": 3,
                        "index": 3279
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "prim",
          "exercises": [
            {
              "id": "javascript-algorithms#55",
              "algo": "prim_prim",
              "label": "prim should fire an error for directed graph",
              "name": "prim should fire an error for directed graph@prim.test.js",
              "pdgs": [
                {
                  "pdgTitle": "prim({vertices,edges,isDirected})",
                  "uniqueTitle": "prim({vertices,edges,isDirected})",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/prim/prim.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 36,
                        "index": 236
                      },
                      "end": {
                        "line": 73,
                        "column": 1,
                        "index": 2635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/prim/__test__/prim.test.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 40,
                        "index": 360
                      },
                      "end": {
                        "line": 12,
                        "column": 5,
                        "index": 428
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#56",
              "algo": "prim_prim",
              "label": "prim should find minimum spanning tree",
              "name": "prim should find minimum spanning tree@prim.test.js",
              "pdgs": [
                {
                  "pdgTitle": "prim({vertices,edges,isDirected})",
                  "uniqueTitle": "prim({vertices,edges,isDirected})#2",
                  "contextId": 256,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/prim/prim.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 36,
                        "index": 236
                      },
                      "end": {
                        "line": 73,
                        "column": 1,
                        "index": 2635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/prim/__test__/prim.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 48,
                        "index": 543
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2135
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "prim({vertices,edges,isDirected})",
                  "uniqueTitle": "prim({vertices,edges,isDirected})#3",
                  "contextId": 1004,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/prim/prim.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 36,
                        "index": 236
                      },
                      "end": {
                        "line": 73,
                        "column": 1,
                        "index": 2635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/prim/__test__/prim.test.js",
                    "loc": {
                      "start": {
                        "line": 65,
                        "column": 65,
                        "index": 2206
                      },
                      "end": {
                        "line": 98,
                        "column": 3,
                        "index": 3261
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#57",
              "algo": "prim_prim",
              "label": "prim should find minimum spanning tree for simple graph",
              "name": "prim should find minimum spanning tree for simple graph@prim.test.js",
              "pdgs": [
                {
                  "pdgTitle": "prim({vertices,edges,isDirected})",
                  "uniqueTitle": "prim({vertices,edges,isDirected})#4",
                  "contextId": 140,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/prim/prim.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 36,
                        "index": 236
                      },
                      "end": {
                        "line": 73,
                        "column": 1,
                        "index": 2635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/prim/__test__/prim.test.js",
                    "loc": {
                      "start": {
                        "line": 65,
                        "column": 65,
                        "index": 2206
                      },
                      "end": {
                        "line": 98,
                        "column": 3,
                        "index": 3261
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "strongly-connected-components",
          "exercises": [
            {
              "id": "javascript-algorithms#58",
              "algo": "strongly-connected-components_stronglyConnectedComponents",
              "label": "stronglyConnectedComponents should detect strongly connected components in simple graph",
              "name": "stronglyConnectedComponents should detect strongly connected components in simple graph@stronglyConnectedComponents.test.js",
              "pdgs": [
                {
                  "pdgTitle": "stronglyConnectedComponents({vertices,edges,isDirected})",
                  "uniqueTitle": "stronglyConnectedComponents({vertices,edges,isDirected})",
                  "contextId": 102,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/strongly-connected-components/stronglyConnectedComponents.js",
                    "loc": {
                      "start": {
                        "line": 127,
                        "column": 59,
                        "index": 4439
                      },
                      "end": {
                        "line": 141,
                        "column": 1,
                        "index": 5030
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/strongly-connected-components/__test__/stronglyConnectedComponents.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 74,
                        "index": 406
                      },
                      "end": {
                        "line": 32,
                        "column": 3,
                        "index": 1313
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#59",
              "algo": "strongly-connected-components_stronglyConnectedComponents",
              "label": "stronglyConnectedComponents should detect strongly connected components in graph",
              "name": "stronglyConnectedComponents should detect strongly connected components in graph@stronglyConnectedComponents.test.js",
              "pdgs": [
                {
                  "pdgTitle": "stronglyConnectedComponents({vertices,edges,isDirected})",
                  "uniqueTitle": "stronglyConnectedComponents({vertices,edges,isDirected})#2",
                  "contextId": 286,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/strongly-connected-components/stronglyConnectedComponents.js",
                    "loc": {
                      "start": {
                        "line": 127,
                        "column": 59,
                        "index": 4439
                      },
                      "end": {
                        "line": 141,
                        "column": 1,
                        "index": 5030
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/strongly-connected-components/__test__/stronglyConnectedComponents.test.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 67,
                        "index": 1386
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3764
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "topological-sorting",
          "exercises": [
            {
              "id": "javascript-algorithms#60",
              "algo": "topological-sorting_topologicalSort",
              "label": "topologicalSort should do topological sorting on graph",
              "name": "topologicalSort should do topological sorting on graph@topologicalSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "topologicalSort({vertices,edges,isDirected})",
                  "uniqueTitle": "topologicalSort({vertices,edges,isDirected})",
                  "contextId": 190,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/topological-sorting/topologicalSort.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 47,
                        "index": 215
                      },
                      "end": {
                        "line": 50,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/topological-sorting/__test__/topologicalSort.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 53,
                        "index": 349
                      },
                      "end": {
                        "line": 52,
                        "column": 3,
                        "index": 1715
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "travelling-salesman",
          "exercises": [
            {
              "id": "javascript-algorithms#61",
              "algo": "travelling-salesman_bfTravellingSalesman",
              "label": "bfTravellingSalesman should solve problem for simple graph",
              "name": "bfTravellingSalesman should solve problem for simple graph@bfTravellingSalesman.test.js",
              "pdgs": [
                {
                  "pdgTitle": "bfTravellingSalesman({vertices,edges,isDirected})",
                  "uniqueTitle": "bfTravellingSalesman({vertices,edges,isDirected})",
                  "contextId": 220,
                  "algoLoc": {
                    "filePath": "src/algorithms/graph/travelling-salesman/bfTravellingSalesman.js",
                    "loc": {
                      "start": {
                        "line": 77,
                        "column": 52,
                        "index": 2227
                      },
                      "end": {
                        "line": 123,
                        "column": 1,
                        "index": 3688
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/graph/travelling-salesman/__test__/bfTravellingSalesman.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 52,
                        "index": 363
                      },
                      "end": {
                        "line": 50,
                        "column": 3,
                        "index": 1918
                      }
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "image-processing",
      "chapters": [
        {
          "name": "seam-carving",
          "exercises": [
            {
              "id": "javascript-algorithms#62",
              "algo": "seam-carving_resizeImageWidth",
              "label": "resizeImageWidth should perform content-aware image width reduction",
              "name": "resizeImageWidth should perform content-aware image width reduction@resizeImageWidth.test.js"
            }
          ]
        }
      ]
    },
    {
      "name": "linked-list",
      "chapters": [
        {
          "name": "reverse-traversal",
          "exercises": [
            {
              "id": "javascript-algorithms#63",
              "algo": "reverse-traversal_reverseTraversal",
              "label": "reverseTraversal should traverse linked list in reverse order",
              "name": "reverseTraversal should traverse linked list in reverse order@reverseTraversal.test.js",
              "pdgs": [
                {
                  "pdgTitle": "reverseTraversal({head,tail,compare}, ƒ (anonymous))",
                  "uniqueTitle": "reverseTraversal({head,tail,compare}, ƒ (anonymous))",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/linked-list/reverse-traversal/reverseTraversal.js",
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 63,
                        "index": 492
                      },
                      "end": {
                        "line": 24,
                        "column": 1,
                        "index": 553
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/linked-list/reverse-traversal/__test__/reverseTraversal.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 59,
                        "index": 230
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 577
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "traversal",
          "exercises": [
            {
              "id": "javascript-algorithms#64",
              "algo": "traversal_traversal",
              "label": "traversal should traverse linked list",
              "name": "traversal should traverse linked list@traversal.test.js",
              "pdgs": [
                {
                  "pdgTitle": "traversal({head,tail,compare}, ƒ (anonymous))",
                  "uniqueTitle": "traversal({head,tail,compare}, ƒ (anonymous))",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/linked-list/traversal/traversal.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 56,
                        "index": 243
                      },
                      "end": {
                        "line": 18,
                        "column": 1,
                        "index": 388
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/linked-list/traversal/__test__/traversal.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 42,
                        "index": 192
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 532
                      }
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "math",
      "chapters": [
        {
          "name": "binary-floating-point",
          "exercises": [
            {
              "id": "javascript-algorithms#65",
              "algo": "binary-floating-point_bitsToFloat",
              "label": "bitsToFloat16 should convert floating point binary bits to floating point decimal number",
              "name": "bitsToFloat16 should convert floating point binary bits to floating point decimal number@bitsToFloat.test.js"
            },
            {
              "id": "javascript-algorithms#66",
              "algo": "binary-floating-point_bitsToFloat",
              "label": "bitsToFloat32 should convert floating point binary bits to floating point decimal number",
              "name": "bitsToFloat32 should convert floating point binary bits to floating point decimal number@bitsToFloat.test.js"
            },
            {
              "id": "javascript-algorithms#67",
              "algo": "binary-floating-point_bitsToFloat",
              "label": "bitsToFloat64 should convert floating point binary bits to floating point decimal number",
              "name": "bitsToFloat64 should convert floating point binary bits to floating point decimal number@bitsToFloat.test.js"
            },
            {
              "id": "javascript-algorithms#68",
              "algo": "binary-floating-point_floatAsBinaryString",
              "label": "floatAs32Binary should create a binary representation of the floating numbers",
              "name": "floatAs32Binary should create a binary representation of the floating numbers@floatAsBinaryString.test.js"
            },
            {
              "id": "javascript-algorithms#69",
              "algo": "binary-floating-point_floatAsBinaryString",
              "label": "floatAs64Binary should create a binary representation of the floating numbers",
              "name": "floatAs64Binary should create a binary representation of the floating numbers@floatAsBinaryString.test.js"
            }
          ]
        },
        {
          "name": "bits",
          "exercises": [
            {
              "id": "javascript-algorithms#70",
              "algo": "bits_bitLength",
              "label": "bitLength should calculate number of bits that the number is consists of",
              "name": "bitLength should calculate number of bits that the number is consists of@bitLength.test.js",
              "pdgs": [
                {
                  "pdgTitle": "bitLength(0)",
                  "uniqueTitle": "bitLength(0)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/bitLength.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 42,
                        "index": 183
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 306
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/bitLength.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 77,
                        "index": 149
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 478
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bitLength(1)",
                  "uniqueTitle": "bitLength(1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/bitLength.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 42,
                        "index": 183
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 306
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/bitLength.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 77,
                        "index": 149
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 478
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bitLength(1)",
                  "uniqueTitle": "bitLength(1)#2",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/bitLength.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 42,
                        "index": 183
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 306
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/bitLength.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 77,
                        "index": 149
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 478
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bitLength(5)",
                  "uniqueTitle": "bitLength(5)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/bitLength.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 42,
                        "index": 183
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 306
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/bitLength.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 77,
                        "index": 149
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 478
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bitLength(5)",
                  "uniqueTitle": "bitLength(5)#2",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/bitLength.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 42,
                        "index": 183
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 306
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/bitLength.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 77,
                        "index": 149
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 478
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bitLength(21)",
                  "uniqueTitle": "bitLength(21)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/bitLength.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 42,
                        "index": 183
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 306
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/bitLength.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 77,
                        "index": 149
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 478
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bitLength(245)",
                  "uniqueTitle": "bitLength(245)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/bitLength.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 42,
                        "index": 183
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 306
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/bitLength.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 77,
                        "index": 149
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 478
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bitLength(245)",
                  "uniqueTitle": "bitLength(245)#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/bitLength.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 42,
                        "index": 183
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 306
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/bitLength.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 77,
                        "index": 149
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 478
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#71",
              "algo": "bits_isPowerOfTwo",
              "label": "isPowerOfTwo should detect if the number is power of two",
              "name": "isPowerOfTwo should detect if the number is power of two@isPowerOfTwo.test.js",
              "pdgs": [
                {
                  "pdgTitle": "isPowerOfTwo(1)",
                  "uniqueTitle": "isPowerOfTwo(1)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 99
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 144
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 58,
                        "index": 139
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 733
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(2)",
                  "uniqueTitle": "isPowerOfTwo(2)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 99
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 144
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 58,
                        "index": 139
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 733
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(3)",
                  "uniqueTitle": "isPowerOfTwo(3)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 99
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 144
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 58,
                        "index": 139
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 733
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(4)",
                  "uniqueTitle": "isPowerOfTwo(4)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 99
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 144
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 58,
                        "index": 139
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 733
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(5)",
                  "uniqueTitle": "isPowerOfTwo(5)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 99
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 144
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 58,
                        "index": 139
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 733
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(6)",
                  "uniqueTitle": "isPowerOfTwo(6)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 99
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 144
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 58,
                        "index": 139
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 733
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(7)",
                  "uniqueTitle": "isPowerOfTwo(7)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 99
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 144
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 58,
                        "index": 139
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 733
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(8)",
                  "uniqueTitle": "isPowerOfTwo(8)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 99
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 144
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 58,
                        "index": 139
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 733
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(9)",
                  "uniqueTitle": "isPowerOfTwo(9)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 99
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 144
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 58,
                        "index": 139
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 733
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(16)",
                  "uniqueTitle": "isPowerOfTwo(16)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 99
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 144
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 58,
                        "index": 139
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 733
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(23)",
                  "uniqueTitle": "isPowerOfTwo(23)",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 99
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 144
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 58,
                        "index": 139
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 733
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(32)",
                  "uniqueTitle": "isPowerOfTwo(32)",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 99
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 144
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 58,
                        "index": 139
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 733
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(127)",
                  "uniqueTitle": "isPowerOfTwo(127)",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 99
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 144
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 58,
                        "index": 139
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 733
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(128)",
                  "uniqueTitle": "isPowerOfTwo(128)",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 99
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 144
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 58,
                        "index": 139
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 733
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#72",
              "algo": "bits_updateBit",
              "label": "updateBit should update bit at specific position",
              "name": "updateBit should update bit at specific position@updateBit.test.js",
              "pdgs": [
                {
                  "pdgTitle": "updateBit(1, 0, 1)",
                  "uniqueTitle": "updateBit(1, 0, 1)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/updateBit.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 208
                      },
                      "end": {
                        "line": 16,
                        "column": 1,
                        "index": 487
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 53,
                        "index": 125
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "updateBit(1, 0, 0)",
                  "uniqueTitle": "updateBit(1, 0, 0)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/updateBit.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 208
                      },
                      "end": {
                        "line": 16,
                        "column": 1,
                        "index": 487
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 53,
                        "index": 125
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "updateBit(1, 1, 1)",
                  "uniqueTitle": "updateBit(1, 1, 1)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/updateBit.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 208
                      },
                      "end": {
                        "line": 16,
                        "column": 1,
                        "index": 487
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 53,
                        "index": 125
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "updateBit(1, 2, 1)",
                  "uniqueTitle": "updateBit(1, 2, 1)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/updateBit.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 208
                      },
                      "end": {
                        "line": 16,
                        "column": 1,
                        "index": 487
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 53,
                        "index": 125
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "updateBit(10, 0, 1)",
                  "uniqueTitle": "updateBit(10, 0, 1)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/updateBit.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 208
                      },
                      "end": {
                        "line": 16,
                        "column": 1,
                        "index": 487
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 53,
                        "index": 125
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "updateBit(10, 0, 0)",
                  "uniqueTitle": "updateBit(10, 0, 0)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/updateBit.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 208
                      },
                      "end": {
                        "line": 16,
                        "column": 1,
                        "index": 487
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 53,
                        "index": 125
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "updateBit(10, 1, 1)",
                  "uniqueTitle": "updateBit(10, 1, 1)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/updateBit.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 208
                      },
                      "end": {
                        "line": 16,
                        "column": 1,
                        "index": 487
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 53,
                        "index": 125
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "updateBit(10, 1, 0)",
                  "uniqueTitle": "updateBit(10, 1, 0)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/updateBit.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 208
                      },
                      "end": {
                        "line": 16,
                        "column": 1,
                        "index": 487
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 53,
                        "index": 125
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "updateBit(10, 2, 1)",
                  "uniqueTitle": "updateBit(10, 2, 1)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/updateBit.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 208
                      },
                      "end": {
                        "line": 16,
                        "column": 1,
                        "index": 487
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 53,
                        "index": 125
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "updateBit(10, 2, 0)",
                  "uniqueTitle": "updateBit(10, 2, 0)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/updateBit.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 208
                      },
                      "end": {
                        "line": 16,
                        "column": 1,
                        "index": 487
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 53,
                        "index": 125
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#73",
              "algo": "bits_isPositive",
              "label": "isPositive should detect if a number is positive",
              "name": "isPositive should detect if a number is positive@isPositive.test.js",
              "pdgs": [
                {
                  "pdgTitle": "isPositive(1)",
                  "uniqueTitle": "isPositive(1)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPositive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 43,
                        "index": 120
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 360
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 52,
                        "index": 127
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 638
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPositive(2)",
                  "uniqueTitle": "isPositive(2)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPositive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 43,
                        "index": 120
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 360
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 52,
                        "index": 127
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 638
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPositive(3)",
                  "uniqueTitle": "isPositive(3)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPositive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 43,
                        "index": 120
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 360
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 52,
                        "index": 127
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 638
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPositive(5665)",
                  "uniqueTitle": "isPositive(5665)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPositive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 43,
                        "index": 120
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 360
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 52,
                        "index": 127
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 638
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPositive(56644325)",
                  "uniqueTitle": "isPositive(56644325)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPositive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 43,
                        "index": 120
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 360
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 52,
                        "index": 127
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 638
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPositive(0)",
                  "uniqueTitle": "isPositive(0)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPositive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 43,
                        "index": 120
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 360
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 52,
                        "index": 127
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 638
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPositive(0)",
                  "uniqueTitle": "isPositive(0)#2",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPositive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 43,
                        "index": 120
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 360
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 52,
                        "index": 127
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 638
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPositive(-1)",
                  "uniqueTitle": "isPositive(-1)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPositive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 43,
                        "index": 120
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 360
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 52,
                        "index": 127
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 638
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPositive(-2)",
                  "uniqueTitle": "isPositive(-2)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPositive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 43,
                        "index": 120
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 360
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 52,
                        "index": 127
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 638
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPositive(-126)",
                  "uniqueTitle": "isPositive(-126)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPositive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 43,
                        "index": 120
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 360
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 52,
                        "index": 127
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 638
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPositive(-5665)",
                  "uniqueTitle": "isPositive(-5665)",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPositive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 43,
                        "index": 120
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 360
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 52,
                        "index": 127
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 638
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPositive(-56644325)",
                  "uniqueTitle": "isPositive(-56644325)",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isPositive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 43,
                        "index": 120
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 360
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 52,
                        "index": 127
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 638
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#74",
              "algo": "bits_isEven",
              "label": "isEven should detect if a number is even",
              "name": "isEven should detect if a number is even@isEven.test.js",
              "pdgs": [
                {
                  "pdgTitle": "isEven(0)",
                  "uniqueTitle": "isEven(0)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isEven.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 39,
                        "index": 98
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 132
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 111
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 592
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isEven(2)",
                  "uniqueTitle": "isEven(2)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isEven.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 39,
                        "index": 98
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 132
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 111
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 592
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isEven(-2)",
                  "uniqueTitle": "isEven(-2)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isEven.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 39,
                        "index": 98
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 132
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 111
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 592
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isEven(1)",
                  "uniqueTitle": "isEven(1)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isEven.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 39,
                        "index": 98
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 132
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 111
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 592
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isEven(-1)",
                  "uniqueTitle": "isEven(-1)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isEven.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 39,
                        "index": 98
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 132
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 111
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 592
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isEven(-3)",
                  "uniqueTitle": "isEven(-3)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isEven.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 39,
                        "index": 98
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 132
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 111
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 592
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isEven(3)",
                  "uniqueTitle": "isEven(3)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isEven.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 39,
                        "index": 98
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 132
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 111
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 592
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isEven(8)",
                  "uniqueTitle": "isEven(8)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isEven.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 39,
                        "index": 98
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 132
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 111
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 592
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isEven(9)",
                  "uniqueTitle": "isEven(9)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isEven.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 39,
                        "index": 98
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 132
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 111
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 592
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isEven(121)",
                  "uniqueTitle": "isEven(121)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isEven.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 39,
                        "index": 98
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 132
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 111
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 592
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isEven(122)",
                  "uniqueTitle": "isEven(122)",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isEven.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 39,
                        "index": 98
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 132
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 111
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 592
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isEven(1201)",
                  "uniqueTitle": "isEven(1201)",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isEven.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 39,
                        "index": 98
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 132
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 111
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 592
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isEven(1202)",
                  "uniqueTitle": "isEven(1202)",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/isEven.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 39,
                        "index": 98
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 132
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 111
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 592
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#75",
              "algo": "bits_fullAdder",
              "label": "fullAdder should add up two numbers",
              "name": "fullAdder should add up two numbers@fullAdder.test.js",
              "pdgs": [
                {
                  "pdgTitle": "fullAdder(0, 0)",
                  "uniqueTitle": "fullAdder(0, 0)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/fullAdder.js",
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 40,
                        "index": 985
                      },
                      "end": {
                        "line": 70,
                        "column": 1,
                        "index": 2218
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 40,
                        "index": 112
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fullAdder(2, 0)",
                  "uniqueTitle": "fullAdder(2, 0)",
                  "contextId": 71,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/fullAdder.js",
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 40,
                        "index": 985
                      },
                      "end": {
                        "line": 70,
                        "column": 1,
                        "index": 2218
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 40,
                        "index": 112
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fullAdder(0, 2)",
                  "uniqueTitle": "fullAdder(0, 2)",
                  "contextId": 136,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/fullAdder.js",
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 40,
                        "index": 985
                      },
                      "end": {
                        "line": 70,
                        "column": 1,
                        "index": 2218
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 40,
                        "index": 112
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fullAdder(1, 2)",
                  "uniqueTitle": "fullAdder(1, 2)",
                  "contextId": 201,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/fullAdder.js",
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 40,
                        "index": 985
                      },
                      "end": {
                        "line": 70,
                        "column": 1,
                        "index": 2218
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 40,
                        "index": 112
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fullAdder(2, 1)",
                  "uniqueTitle": "fullAdder(2, 1)",
                  "contextId": 266,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/fullAdder.js",
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 40,
                        "index": 985
                      },
                      "end": {
                        "line": 70,
                        "column": 1,
                        "index": 2218
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 40,
                        "index": 112
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fullAdder(6, 6)",
                  "uniqueTitle": "fullAdder(6, 6)",
                  "contextId": 331,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/fullAdder.js",
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 40,
                        "index": 985
                      },
                      "end": {
                        "line": 70,
                        "column": 1,
                        "index": 2218
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 40,
                        "index": 112
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fullAdder(-2, 4)",
                  "uniqueTitle": "fullAdder(-2, 4)",
                  "contextId": 396,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/fullAdder.js",
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 40,
                        "index": 985
                      },
                      "end": {
                        "line": 70,
                        "column": 1,
                        "index": 2218
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 40,
                        "index": 112
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fullAdder(4, -2)",
                  "uniqueTitle": "fullAdder(4, -2)",
                  "contextId": 461,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/fullAdder.js",
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 40,
                        "index": 985
                      },
                      "end": {
                        "line": 70,
                        "column": 1,
                        "index": 2218
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 40,
                        "index": 112
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fullAdder(-4, -4)",
                  "uniqueTitle": "fullAdder(-4, -4)",
                  "contextId": 526,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/fullAdder.js",
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 40,
                        "index": 985
                      },
                      "end": {
                        "line": 70,
                        "column": 1,
                        "index": 2218
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 40,
                        "index": 112
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fullAdder(4, -5)",
                  "uniqueTitle": "fullAdder(4, -5)",
                  "contextId": 591,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/fullAdder.js",
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 40,
                        "index": 985
                      },
                      "end": {
                        "line": 70,
                        "column": 1,
                        "index": 2218
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 40,
                        "index": 112
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fullAdder(2, 121)",
                  "uniqueTitle": "fullAdder(2, 121)",
                  "contextId": 656,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/fullAdder.js",
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 40,
                        "index": 985
                      },
                      "end": {
                        "line": 70,
                        "column": 1,
                        "index": 2218
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 40,
                        "index": 112
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fullAdder(121, 2)",
                  "uniqueTitle": "fullAdder(121, 2)",
                  "contextId": 721,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/fullAdder.js",
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 40,
                        "index": 985
                      },
                      "end": {
                        "line": 70,
                        "column": 1,
                        "index": 2218
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 40,
                        "index": 112
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#76",
              "algo": "bits_countSetBits",
              "label": "countSetBits should return number of set bits",
              "name": "countSetBits should return number of set bits@countSetBits.test.js",
              "pdgs": [
                {
                  "pdgTitle": "countSetBits(0)",
                  "uniqueTitle": "countSetBits(0)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/countSetBits.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 119
                      },
                      "end": {
                        "line": 18,
                        "column": 1,
                        "index": 412
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 128
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 697
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "countSetBits(1)",
                  "uniqueTitle": "countSetBits(1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/countSetBits.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 119
                      },
                      "end": {
                        "line": 18,
                        "column": 1,
                        "index": 412
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 128
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 697
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "countSetBits(2)",
                  "uniqueTitle": "countSetBits(2)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/countSetBits.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 119
                      },
                      "end": {
                        "line": 18,
                        "column": 1,
                        "index": 412
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 128
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 697
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "countSetBits(3)",
                  "uniqueTitle": "countSetBits(3)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/countSetBits.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 119
                      },
                      "end": {
                        "line": 18,
                        "column": 1,
                        "index": 412
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 128
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 697
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "countSetBits(4)",
                  "uniqueTitle": "countSetBits(4)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/countSetBits.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 119
                      },
                      "end": {
                        "line": 18,
                        "column": 1,
                        "index": 412
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 128
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 697
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "countSetBits(5)",
                  "uniqueTitle": "countSetBits(5)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/countSetBits.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 119
                      },
                      "end": {
                        "line": 18,
                        "column": 1,
                        "index": 412
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 128
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 697
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "countSetBits(21)",
                  "uniqueTitle": "countSetBits(21)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/countSetBits.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 119
                      },
                      "end": {
                        "line": 18,
                        "column": 1,
                        "index": 412
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 128
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 697
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "countSetBits(255)",
                  "uniqueTitle": "countSetBits(255)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/countSetBits.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 119
                      },
                      "end": {
                        "line": 18,
                        "column": 1,
                        "index": 412
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 128
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 697
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "countSetBits(1023)",
                  "uniqueTitle": "countSetBits(1023)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/countSetBits.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 119
                      },
                      "end": {
                        "line": 18,
                        "column": 1,
                        "index": 412
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 128
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 697
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "countSetBits(-1)",
                  "uniqueTitle": "countSetBits(-1)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/countSetBits.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 119
                      },
                      "end": {
                        "line": 18,
                        "column": 1,
                        "index": 412
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 128
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 697
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "countSetBits(-21)",
                  "uniqueTitle": "countSetBits(-21)",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/countSetBits.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 119
                      },
                      "end": {
                        "line": 18,
                        "column": 1,
                        "index": 412
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 128
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 697
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "countSetBits(-255)",
                  "uniqueTitle": "countSetBits(-255)",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/countSetBits.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 119
                      },
                      "end": {
                        "line": 18,
                        "column": 1,
                        "index": 412
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 128
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 697
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "countSetBits(-1023)",
                  "uniqueTitle": "countSetBits(-1023)",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/countSetBits.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 119
                      },
                      "end": {
                        "line": 18,
                        "column": 1,
                        "index": 412
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 128
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 697
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "countSetBits(-4294967296)",
                  "uniqueTitle": "countSetBits(-4294967296)",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/countSetBits.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 119
                      },
                      "end": {
                        "line": 18,
                        "column": 1,
                        "index": 412
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 128
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 697
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#77",
              "algo": "bits_multiplyUnsigned",
              "label": "multiplyUnsigned should multiply two unsigned numbers",
              "name": "multiplyUnsigned should multiply two unsigned numbers@multiplyUnsigned.test.js",
              "pdgs": [
                {
                  "pdgTitle": "multiplyUnsigned(0, 2)",
                  "uniqueTitle": "multiplyUnsigned(0, 2)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiplyUnsigned.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 59,
                        "index": 559
                      },
                      "end": {
                        "line": 43,
                        "column": 1,
                        "index": 1195
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiplyUnsigned.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 144
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 573
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiplyUnsigned(2, 0)",
                  "uniqueTitle": "multiplyUnsigned(2, 0)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiplyUnsigned.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 59,
                        "index": 559
                      },
                      "end": {
                        "line": 43,
                        "column": 1,
                        "index": 1195
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiplyUnsigned.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 144
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 573
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiplyUnsigned(1, 1)",
                  "uniqueTitle": "multiplyUnsigned(1, 1)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiplyUnsigned.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 59,
                        "index": 559
                      },
                      "end": {
                        "line": 43,
                        "column": 1,
                        "index": 1195
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiplyUnsigned.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 144
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 573
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiplyUnsigned(1, 2)",
                  "uniqueTitle": "multiplyUnsigned(1, 2)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiplyUnsigned.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 59,
                        "index": 559
                      },
                      "end": {
                        "line": 43,
                        "column": 1,
                        "index": 1195
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiplyUnsigned.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 144
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 573
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiplyUnsigned(2, 7)",
                  "uniqueTitle": "multiplyUnsigned(2, 7)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiplyUnsigned.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 59,
                        "index": 559
                      },
                      "end": {
                        "line": 43,
                        "column": 1,
                        "index": 1195
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiplyUnsigned.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 144
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 573
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiplyUnsigned(7, 2)",
                  "uniqueTitle": "multiplyUnsigned(7, 2)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiplyUnsigned.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 59,
                        "index": 559
                      },
                      "end": {
                        "line": 43,
                        "column": 1,
                        "index": 1195
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiplyUnsigned.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 144
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 573
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiplyUnsigned(30, 2)",
                  "uniqueTitle": "multiplyUnsigned(30, 2)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiplyUnsigned.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 59,
                        "index": 559
                      },
                      "end": {
                        "line": 43,
                        "column": 1,
                        "index": 1195
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiplyUnsigned.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 144
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 573
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiplyUnsigned(17, 34)",
                  "uniqueTitle": "multiplyUnsigned(17, 34)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiplyUnsigned.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 59,
                        "index": 559
                      },
                      "end": {
                        "line": 43,
                        "column": 1,
                        "index": 1195
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiplyUnsigned.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 144
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 573
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiplyUnsigned(170, 2340)",
                  "uniqueTitle": "multiplyUnsigned(170, 2340)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiplyUnsigned.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 59,
                        "index": 559
                      },
                      "end": {
                        "line": 43,
                        "column": 1,
                        "index": 1195
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiplyUnsigned.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 144
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 573
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#78",
              "algo": "bits_getBit",
              "label": "getBit should get bit at specific position",
              "name": "getBit should get bit at specific position@getBit.test.js",
              "pdgs": [
                {
                  "pdgTitle": "getBit(1, 0)",
                  "uniqueTitle": "getBit(1, 0)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/getBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 52,
                        "index": 156
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 199
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 113
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 556
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "getBit(1, 1)",
                  "uniqueTitle": "getBit(1, 1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/getBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 52,
                        "index": 156
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 199
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 113
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 556
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "getBit(2, 0)",
                  "uniqueTitle": "getBit(2, 0)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/getBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 52,
                        "index": 156
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 199
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 113
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 556
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "getBit(2, 1)",
                  "uniqueTitle": "getBit(2, 1)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/getBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 52,
                        "index": 156
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 199
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 113
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 556
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "getBit(3, 0)",
                  "uniqueTitle": "getBit(3, 0)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/getBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 52,
                        "index": 156
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 199
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 113
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 556
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "getBit(3, 1)",
                  "uniqueTitle": "getBit(3, 1)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/getBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 52,
                        "index": 156
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 199
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 113
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 556
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "getBit(10, 0)",
                  "uniqueTitle": "getBit(10, 0)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/getBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 52,
                        "index": 156
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 199
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 113
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 556
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "getBit(10, 1)",
                  "uniqueTitle": "getBit(10, 1)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/getBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 52,
                        "index": 156
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 199
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 113
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 556
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "getBit(10, 2)",
                  "uniqueTitle": "getBit(10, 2)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/getBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 52,
                        "index": 156
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 199
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 113
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 556
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "getBit(10, 3)",
                  "uniqueTitle": "getBit(10, 3)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/getBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 52,
                        "index": 156
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 199
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 113
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 556
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#79",
              "algo": "bits_multiply",
              "label": "multiply should multiply two numbers",
              "name": "multiply should multiply two numbers@multiply.test.js",
              "pdgs": [
                {
                  "pdgTitle": "multiply(0, 0)",
                  "uniqueTitle": "multiply(0, 0)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiply.js",
                    "loc": {
                      "start": {
                        "line": 27,
                        "column": 39,
                        "index": 692
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1351
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 111
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 580
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiply(2, 0)",
                  "uniqueTitle": "multiply(2, 0)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiply.js",
                    "loc": {
                      "start": {
                        "line": 27,
                        "column": 39,
                        "index": 692
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1351
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 111
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 580
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiply(0, 2)",
                  "uniqueTitle": "multiply(0, 2)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiply.js",
                    "loc": {
                      "start": {
                        "line": 27,
                        "column": 39,
                        "index": 692
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1351
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 111
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 580
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiply(1, 2)",
                  "uniqueTitle": "multiply(1, 2)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiply.js",
                    "loc": {
                      "start": {
                        "line": 27,
                        "column": 39,
                        "index": 692
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1351
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 111
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 580
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiply(2, 1)",
                  "uniqueTitle": "multiply(2, 1)",
                  "contextId": 25,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiply.js",
                    "loc": {
                      "start": {
                        "line": 27,
                        "column": 39,
                        "index": 692
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1351
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 111
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 580
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiply(6, 6)",
                  "uniqueTitle": "multiply(6, 6)",
                  "contextId": 33,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiply.js",
                    "loc": {
                      "start": {
                        "line": 27,
                        "column": 39,
                        "index": 692
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1351
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 111
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 580
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiply(-2, 4)",
                  "uniqueTitle": "multiply(-2, 4)",
                  "contextId": 53,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiply.js",
                    "loc": {
                      "start": {
                        "line": 27,
                        "column": 39,
                        "index": 692
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1351
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 111
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 580
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiply(4, -2)",
                  "uniqueTitle": "multiply(4, -2)",
                  "contextId": 71,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiply.js",
                    "loc": {
                      "start": {
                        "line": 27,
                        "column": 39,
                        "index": 692
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1351
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 111
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 580
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiply(-4, -4)",
                  "uniqueTitle": "multiply(-4, -4)",
                  "contextId": 84,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiply.js",
                    "loc": {
                      "start": {
                        "line": 27,
                        "column": 39,
                        "index": 692
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1351
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 111
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 580
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiply(4, -5)",
                  "uniqueTitle": "multiply(4, -5)",
                  "contextId": 102,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiply.js",
                    "loc": {
                      "start": {
                        "line": 27,
                        "column": 39,
                        "index": 692
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1351
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 111
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 580
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiply(2, 121)",
                  "uniqueTitle": "multiply(2, 121)",
                  "contextId": 122,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiply.js",
                    "loc": {
                      "start": {
                        "line": 27,
                        "column": 39,
                        "index": 692
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1351
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 111
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 580
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiply(121, 2)",
                  "uniqueTitle": "multiply(121, 2)",
                  "contextId": 168,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiply.js",
                    "loc": {
                      "start": {
                        "line": 27,
                        "column": 39,
                        "index": 692
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1351
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 111
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 580
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#80",
              "algo": "bits_switchSign",
              "label": "switchSign should switch the sign of the number using twos complement approach",
              "name": "switchSign should switch the sign of the number using twos complement approach@switchSign.test.js",
              "pdgs": [
                {
                  "pdgTitle": "switchSign(0)",
                  "uniqueTitle": "switchSign(0)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/switchSign.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 43,
                        "index": 169
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 196
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/switchSign.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 82,
                        "index": 157
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 429
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "switchSign(1)",
                  "uniqueTitle": "switchSign(1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/switchSign.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 43,
                        "index": 169
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 196
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/switchSign.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 82,
                        "index": 157
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 429
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "switchSign(-1)",
                  "uniqueTitle": "switchSign(-1)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/switchSign.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 43,
                        "index": 169
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 196
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/switchSign.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 82,
                        "index": 157
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 429
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "switchSign(32)",
                  "uniqueTitle": "switchSign(32)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/switchSign.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 43,
                        "index": 169
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 196
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/switchSign.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 82,
                        "index": 157
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 429
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "switchSign(-32)",
                  "uniqueTitle": "switchSign(-32)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/switchSign.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 43,
                        "index": 169
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 196
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/switchSign.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 82,
                        "index": 157
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 429
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "switchSign(23)",
                  "uniqueTitle": "switchSign(23)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/switchSign.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 43,
                        "index": 169
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 196
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/switchSign.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 82,
                        "index": 157
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 429
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "switchSign(-23)",
                  "uniqueTitle": "switchSign(-23)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/switchSign.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 43,
                        "index": 169
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 196
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/switchSign.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 82,
                        "index": 157
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 429
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#81",
              "algo": "bits_bitsDiff",
              "label": "bitsDiff should calculate bits difference between two numbers",
              "name": "bitsDiff should calculate bits difference between two numbers@bitsDiff.test.js",
              "pdgs": [
                {
                  "pdgTitle": "bitsDiff(0, 0)",
                  "uniqueTitle": "bitsDiff(0, 0)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/bitsDiff.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 51,
                        "index": 285
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 332
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/bitsDiff.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 67,
                        "index": 136
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 405
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bitsDiff(1, 1)",
                  "uniqueTitle": "bitsDiff(1, 1)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/bitsDiff.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 51,
                        "index": 285
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 332
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/bitsDiff.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 67,
                        "index": 136
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 405
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bitsDiff(124, 124)",
                  "uniqueTitle": "bitsDiff(124, 124)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/bitsDiff.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 51,
                        "index": 285
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 332
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/bitsDiff.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 67,
                        "index": 136
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 405
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bitsDiff(0, 1)",
                  "uniqueTitle": "bitsDiff(0, 1)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/bitsDiff.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 51,
                        "index": 285
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 332
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/bitsDiff.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 67,
                        "index": 136
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 405
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bitsDiff(1, 0)",
                  "uniqueTitle": "bitsDiff(1, 0)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/bitsDiff.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 51,
                        "index": 285
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 332
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/bitsDiff.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 67,
                        "index": 136
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 405
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bitsDiff(1, 2)",
                  "uniqueTitle": "bitsDiff(1, 2)",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/bitsDiff.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 51,
                        "index": 285
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 332
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/bitsDiff.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 67,
                        "index": 136
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 405
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bitsDiff(1, 3)",
                  "uniqueTitle": "bitsDiff(1, 3)",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/bitsDiff.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 51,
                        "index": 285
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 332
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/bitsDiff.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 67,
                        "index": 136
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 405
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#82",
              "algo": "bits_multiplyByTwo",
              "label": "multiplyByTwo should multiply numbers by two using bitwise operations",
              "name": "multiplyByTwo should multiply numbers by two using bitwise operations@multiplyByTwo.test.js",
              "pdgs": [
                {
                  "pdgTitle": "multiplyByTwo(0)",
                  "uniqueTitle": "multiplyByTwo(0)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiplyByTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 104
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 131
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiplyByTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 70,
                        "index": 154
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 402
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiplyByTwo(1)",
                  "uniqueTitle": "multiplyByTwo(1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiplyByTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 104
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 131
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiplyByTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 70,
                        "index": 154
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 402
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiplyByTwo(3)",
                  "uniqueTitle": "multiplyByTwo(3)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiplyByTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 104
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 131
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiplyByTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 70,
                        "index": 154
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 402
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiplyByTwo(10)",
                  "uniqueTitle": "multiplyByTwo(10)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiplyByTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 104
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 131
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiplyByTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 70,
                        "index": 154
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 402
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiplyByTwo(17)",
                  "uniqueTitle": "multiplyByTwo(17)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiplyByTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 104
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 131
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiplyByTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 70,
                        "index": 154
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 402
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "multiplyByTwo(125)",
                  "uniqueTitle": "multiplyByTwo(125)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/multiplyByTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 104
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 131
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/multiplyByTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 70,
                        "index": 154
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 402
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#83",
              "algo": "bits_clearBit",
              "label": "clearBit should clear bit at specific position",
              "name": "clearBit should clear bit at specific position@clearBit.test.js",
              "pdgs": [
                {
                  "pdgTitle": "clearBit(1, 0)",
                  "uniqueTitle": "clearBit(1, 0)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/clearBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 54,
                        "index": 158
                      },
                      "end": {
                        "line": 10,
                        "column": 1,
                        "index": 226
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/clearBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 52,
                        "index": 121
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 394
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "clearBit(1, 1)",
                  "uniqueTitle": "clearBit(1, 1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/clearBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 54,
                        "index": 158
                      },
                      "end": {
                        "line": 10,
                        "column": 1,
                        "index": 226
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/clearBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 52,
                        "index": 121
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 394
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "clearBit(1, 2)",
                  "uniqueTitle": "clearBit(1, 2)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/clearBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 54,
                        "index": 158
                      },
                      "end": {
                        "line": 10,
                        "column": 1,
                        "index": 226
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/clearBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 52,
                        "index": 121
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 394
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "clearBit(10, 0)",
                  "uniqueTitle": "clearBit(10, 0)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/clearBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 54,
                        "index": 158
                      },
                      "end": {
                        "line": 10,
                        "column": 1,
                        "index": 226
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/clearBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 52,
                        "index": 121
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 394
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "clearBit(10, 1)",
                  "uniqueTitle": "clearBit(10, 1)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/clearBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 54,
                        "index": 158
                      },
                      "end": {
                        "line": 10,
                        "column": 1,
                        "index": 226
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/clearBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 52,
                        "index": 121
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 394
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "clearBit(10, 3)",
                  "uniqueTitle": "clearBit(10, 3)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/clearBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 54,
                        "index": 158
                      },
                      "end": {
                        "line": 10,
                        "column": 1,
                        "index": 226
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/clearBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 52,
                        "index": 121
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 394
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#84",
              "algo": "bits_divideByTwo",
              "label": "divideByTwo should divide numbers by two using bitwise operations",
              "name": "divideByTwo should divide numbers by two using bitwise operations@divideByTwo.test.js",
              "pdgs": [
                {
                  "pdgTitle": "divideByTwo(0)",
                  "uniqueTitle": "divideByTwo(0)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/divideByTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 44,
                        "index": 102
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 129
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/divideByTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 68,
                        "index": 146
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 379
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "divideByTwo(1)",
                  "uniqueTitle": "divideByTwo(1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/divideByTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 44,
                        "index": 102
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 129
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/divideByTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 68,
                        "index": 146
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 379
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "divideByTwo(3)",
                  "uniqueTitle": "divideByTwo(3)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/divideByTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 44,
                        "index": 102
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 129
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/divideByTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 68,
                        "index": 146
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 379
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "divideByTwo(10)",
                  "uniqueTitle": "divideByTwo(10)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/divideByTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 44,
                        "index": 102
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 129
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/divideByTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 68,
                        "index": 146
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 379
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "divideByTwo(17)",
                  "uniqueTitle": "divideByTwo(17)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/divideByTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 44,
                        "index": 102
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 129
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/divideByTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 68,
                        "index": 146
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 379
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "divideByTwo(125)",
                  "uniqueTitle": "divideByTwo(125)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/divideByTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 44,
                        "index": 102
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 129
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/divideByTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 68,
                        "index": 146
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 379
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#85",
              "algo": "bits_setBit",
              "label": "setBit should set bit at specific position",
              "name": "setBit should set bit at specific position@setBit.test.js",
              "pdgs": [
                {
                  "pdgTitle": "setBit(1, 0)",
                  "uniqueTitle": "setBit(1, 0)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/setBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 52,
                        "index": 156
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 199
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/setBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 113
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 376
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "setBit(1, 1)",
                  "uniqueTitle": "setBit(1, 1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/setBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 52,
                        "index": 156
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 199
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/setBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 113
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 376
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "setBit(1, 2)",
                  "uniqueTitle": "setBit(1, 2)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/setBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 52,
                        "index": 156
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 199
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/setBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 113
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 376
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "setBit(10, 0)",
                  "uniqueTitle": "setBit(10, 0)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/setBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 52,
                        "index": 156
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 199
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/setBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 113
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 376
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "setBit(10, 1)",
                  "uniqueTitle": "setBit(10, 1)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/setBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 52,
                        "index": 156
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 199
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/setBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 113
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 376
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "setBit(10, 2)",
                  "uniqueTitle": "setBit(10, 2)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/bits/setBit.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 52,
                        "index": 156
                      },
                      "end": {
                        "line": 8,
                        "column": 1,
                        "index": 199
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/bits/__test__/setBit.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 113
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 376
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "complex-number",
          "exercises": [
            {
              "id": "javascript-algorithms#86",
              "algo": "complex-number_ComplexNumber",
              "label": "ComplexNumber should create complex numbers",
              "name": "ComplexNumber should create complex numbers@ComplexNumber.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 44,
                        "index": 128
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 469
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor()",
                  "uniqueTitle": "ComplexNumber.constructor()",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 44,
                        "index": 128
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 469
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#87",
              "algo": "complex-number_ComplexNumber",
              "label": "ComplexNumber should add complex numbers",
              "name": "ComplexNumber should add complex numbers@ComplexNumber.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#2",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 41,
                        "index": 516
                      },
                      "end": {
                        "line": 28,
                        "column": 3,
                        "index": 962
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#3",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 41,
                        "index": 516
                      },
                      "end": {
                        "line": 28,
                        "column": 3,
                        "index": 962
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.add({re,im})",
                  "uniqueTitle": "ComplexNumber.add({re,im})",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 14,
                        "index": 631
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 868
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 41,
                        "index": 516
                      },
                      "end": {
                        "line": 28,
                        "column": 3,
                        "index": 962
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.add({re,im})",
                  "uniqueTitle": "ComplexNumber.add({re,im})#2",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 14,
                        "index": 631
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 868
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 41,
                        "index": 516
                      },
                      "end": {
                        "line": 28,
                        "column": 3,
                        "index": 962
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#88",
              "algo": "complex-number_ComplexNumber",
              "label": "ComplexNumber should add complex and natural numbers",
              "name": "ComplexNumber should add complex and natural numbers@ComplexNumber.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#4",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 30,
                        "column": 53,
                        "index": 1021
                      },
                      "end": {
                        "line": 46,
                        "column": 3,
                        "index": 1573
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re})",
                  "uniqueTitle": "ComplexNumber.constructor({re})",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 30,
                        "column": 53,
                        "index": 1021
                      },
                      "end": {
                        "line": 46,
                        "column": 3,
                        "index": 1573
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.add({re,im})",
                  "uniqueTitle": "ComplexNumber.add({re,im})#3",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 14,
                        "index": 631
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 868
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 30,
                        "column": 53,
                        "index": 1021
                      },
                      "end": {
                        "line": 46,
                        "column": 3,
                        "index": 1573
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.add({re,im})",
                  "uniqueTitle": "ComplexNumber.add({re,im})#4",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 14,
                        "index": 631
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 868
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 30,
                        "column": 53,
                        "index": 1021
                      },
                      "end": {
                        "line": 46,
                        "column": 3,
                        "index": 1573
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.add(3)",
                  "uniqueTitle": "ComplexNumber.add(3)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 14,
                        "index": 631
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 868
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 30,
                        "column": 53,
                        "index": 1021
                      },
                      "end": {
                        "line": 46,
                        "column": 3,
                        "index": 1573
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#89",
              "algo": "complex-number_ComplexNumber",
              "label": "ComplexNumber should subtract complex numbers",
              "name": "ComplexNumber should subtract complex numbers@ComplexNumber.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#5",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 48,
                        "column": 46,
                        "index": 1625
                      },
                      "end": {
                        "line": 60,
                        "column": 3,
                        "index": 2081
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#6",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 48,
                        "column": 46,
                        "index": 1625
                      },
                      "end": {
                        "line": 60,
                        "column": 3,
                        "index": 2081
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.subtract({re,im})",
                  "uniqueTitle": "ComplexNumber.subtract({re,im})",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 23,
                        "index": 986
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 1239
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 48,
                        "column": 46,
                        "index": 1625
                      },
                      "end": {
                        "line": 60,
                        "column": 3,
                        "index": 2081
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.subtract({re,im})",
                  "uniqueTitle": "ComplexNumber.subtract({re,im})#2",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 23,
                        "index": 986
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 1239
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 48,
                        "column": 46,
                        "index": 1625
                      },
                      "end": {
                        "line": 60,
                        "column": 3,
                        "index": 2081
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#90",
              "algo": "complex-number_ComplexNumber",
              "label": "ComplexNumber should subtract complex and natural numbers",
              "name": "ComplexNumber should subtract complex and natural numbers@ComplexNumber.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#7",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 62,
                        "column": 58,
                        "index": 2145
                      },
                      "end": {
                        "line": 78,
                        "column": 3,
                        "index": 2713
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re})",
                  "uniqueTitle": "ComplexNumber.constructor({re})#2",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 62,
                        "column": 58,
                        "index": 2145
                      },
                      "end": {
                        "line": 78,
                        "column": 3,
                        "index": 2713
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.subtract({re,im})",
                  "uniqueTitle": "ComplexNumber.subtract({re,im})#3",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 23,
                        "index": 986
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 1239
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 62,
                        "column": 58,
                        "index": 2145
                      },
                      "end": {
                        "line": 78,
                        "column": 3,
                        "index": 2713
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.subtract({re,im})",
                  "uniqueTitle": "ComplexNumber.subtract({re,im})#4",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 23,
                        "index": 986
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 1239
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 62,
                        "column": 58,
                        "index": 2145
                      },
                      "end": {
                        "line": 78,
                        "column": 3,
                        "index": 2713
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.subtract(3)",
                  "uniqueTitle": "ComplexNumber.subtract(3)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 23,
                        "index": 986
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 1239
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 62,
                        "column": 58,
                        "index": 2145
                      },
                      "end": {
                        "line": 78,
                        "column": 3,
                        "index": 2713
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#91",
              "algo": "complex-number_ComplexNumber",
              "label": "ComplexNumber should multiply complex numbers",
              "name": "ComplexNumber should multiply complex numbers@ComplexNumber.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#8",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 80,
                        "column": 46,
                        "index": 2765
                      },
                      "end": {
                        "line": 96,
                        "column": 3,
                        "index": 3351
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#9",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 80,
                        "column": 46,
                        "index": 2765
                      },
                      "end": {
                        "line": 96,
                        "column": 3,
                        "index": 3351
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.multiply({re,im})",
                  "uniqueTitle": "ComplexNumber.multiply({re,im})",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 54,
                        "column": 25,
                        "index": 1361
                      },
                      "end": {
                        "line": 62,
                        "column": 3,
                        "index": 1692
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 80,
                        "column": 46,
                        "index": 2765
                      },
                      "end": {
                        "line": 96,
                        "column": 3,
                        "index": 3351
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.multiply({re,im})",
                  "uniqueTitle": "ComplexNumber.multiply({re,im})#2",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 54,
                        "column": 25,
                        "index": 1361
                      },
                      "end": {
                        "line": 62,
                        "column": 3,
                        "index": 1692
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 80,
                        "column": 46,
                        "index": 2765
                      },
                      "end": {
                        "line": 96,
                        "column": 3,
                        "index": 3351
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.multiply(5)",
                  "uniqueTitle": "ComplexNumber.multiply(5)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 54,
                        "column": 25,
                        "index": 1361
                      },
                      "end": {
                        "line": 62,
                        "column": 3,
                        "index": 1692
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 80,
                        "column": 46,
                        "index": 2765
                      },
                      "end": {
                        "line": 96,
                        "column": 3,
                        "index": 3351
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#10",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 98,
                        "column": 60,
                        "index": 3417
                      },
                      "end": {
                        "line": 105,
                        "column": 3,
                        "index": 3614
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.multiply({re,im})",
                  "uniqueTitle": "ComplexNumber.multiply({re,im})#3",
                  "contextId": 20,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 54,
                        "column": 25,
                        "index": 1361
                      },
                      "end": {
                        "line": 62,
                        "column": 3,
                        "index": 1692
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 98,
                        "column": 60,
                        "index": 3417
                      },
                      "end": {
                        "line": 105,
                        "column": 3,
                        "index": 3614
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#92",
              "algo": "complex-number_ComplexNumber",
              "label": "ComplexNumber should multiply complex numbers by themselves",
              "name": "ComplexNumber should multiply complex numbers by themselves@ComplexNumber.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#11",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 98,
                        "column": 60,
                        "index": 3417
                      },
                      "end": {
                        "line": 105,
                        "column": 3,
                        "index": 3614
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.multiply({re,im})",
                  "uniqueTitle": "ComplexNumber.multiply({re,im})#4",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 54,
                        "column": 25,
                        "index": 1361
                      },
                      "end": {
                        "line": 62,
                        "column": 3,
                        "index": 1692
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 98,
                        "column": 60,
                        "index": 3417
                      },
                      "end": {
                        "line": 105,
                        "column": 3,
                        "index": 3614
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#93",
              "algo": "complex-number_ComplexNumber",
              "label": "ComplexNumber should calculate i in power of two",
              "name": "ComplexNumber should calculate i in power of two@ComplexNumber.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#12",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 107,
                        "column": 49,
                        "index": 3669
                      },
                      "end": {
                        "line": 114,
                        "column": 3,
                        "index": 3867
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.multiply({re,im})",
                  "uniqueTitle": "ComplexNumber.multiply({re,im})#5",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 54,
                        "column": 25,
                        "index": 1361
                      },
                      "end": {
                        "line": 62,
                        "column": 3,
                        "index": 1692
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 107,
                        "column": 49,
                        "index": 3669
                      },
                      "end": {
                        "line": 114,
                        "column": 3,
                        "index": 3867
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#94",
              "algo": "complex-number_ComplexNumber",
              "label": "ComplexNumber should divide complex numbers",
              "name": "ComplexNumber should divide complex numbers@ComplexNumber.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#13",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 116,
                        "column": 44,
                        "index": 3917
                      },
                      "end": {
                        "line": 128,
                        "column": 3,
                        "index": 4355
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#14",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 116,
                        "column": 44,
                        "index": 3917
                      },
                      "end": {
                        "line": 128,
                        "column": 3,
                        "index": 4355
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.divide({re,im})",
                  "uniqueTitle": "ComplexNumber.divide({re,im})",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 68,
                        "column": 18,
                        "index": 1802
                      },
                      "end": {
                        "line": 85,
                        "column": 3,
                        "index": 2412
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 116,
                        "column": 44,
                        "index": 3917
                      },
                      "end": {
                        "line": 128,
                        "column": 3,
                        "index": 4355
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.divide(2)",
                  "uniqueTitle": "ComplexNumber.divide(2)",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 68,
                        "column": 18,
                        "index": 1802
                      },
                      "end": {
                        "line": 85,
                        "column": 3,
                        "index": 2412
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 116,
                        "column": 44,
                        "index": 3917
                      },
                      "end": {
                        "line": 128,
                        "column": 3,
                        "index": 4355
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#95",
              "algo": "complex-number_ComplexNumber",
              "label": "ComplexNumber should return complex number in polar form",
              "name": "ComplexNumber should return complex number in polar form@ComplexNumber.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#15",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()#2",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#16",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()#3",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()#4",
                  "contextId": 21,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#2",
                  "contextId": 24,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#17",
                  "contextId": 28,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()#5",
                  "contextId": 29,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()#6",
                  "contextId": 32,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#3",
                  "contextId": 35,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#18",
                  "contextId": 39,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()#7",
                  "contextId": 40,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()#8",
                  "contextId": 43,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#4",
                  "contextId": 46,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#19",
                  "contextId": 50,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()#9",
                  "contextId": 51,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()#10",
                  "contextId": 54,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#5",
                  "contextId": 57,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#20",
                  "contextId": 61,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()#11",
                  "contextId": 62,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()#12",
                  "contextId": 65,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#6",
                  "contextId": 68,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#21",
                  "contextId": 72,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()#13",
                  "contextId": 73,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()#14",
                  "contextId": 76,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#7",
                  "contextId": 79,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor()",
                  "uniqueTitle": "ComplexNumber.constructor()#2",
                  "contextId": 83,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()#15",
                  "contextId": 84,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()#16",
                  "contextId": 87,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#8",
                  "contextId": 90,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#22",
                  "contextId": 94,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()#17",
                  "contextId": 95,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()#18",
                  "contextId": 98,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#9",
                  "contextId": 101,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#23",
                  "contextId": 105,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()#19",
                  "contextId": 106,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm()",
                  "uniqueTitle": "ComplexNumber.getPolarForm()#20",
                  "contextId": 109,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#10",
                  "contextId": 112,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 57,
                        "index": 4418
                      },
                      "end": {
                        "line": 188,
                        "column": 3,
                        "index": 7287
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "euclidean-algorithm",
          "exercises": [
            {
              "id": "javascript-algorithms#96",
              "algo": "euclidean-algorithm_euclideanAlgorithmIterative",
              "label": "euclideanAlgorithmIterative should calculate GCD iteratively",
              "name": "euclideanAlgorithmIterative should calculate GCD iteratively@euclideanAlgorithmIterative.test.js"
            },
            {
              "id": "javascript-algorithms#97",
              "algo": "euclidean-algorithm_euclideanAlgorithm",
              "label": "euclideanAlgorithm should calculate GCD recursively",
              "name": "euclideanAlgorithm should calculate GCD recursively@euclideanAlgorithm.test.js",
              "pdgs": [
                {
                  "pdgTitle": "euclideanAlgorithm(0, 0)",
                  "uniqueTitle": "euclideanAlgorithm(0, 0)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanAlgorithm(2, 0)",
                  "uniqueTitle": "euclideanAlgorithm(2, 0)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanAlgorithm(0, 2)",
                  "uniqueTitle": "euclideanAlgorithm(0, 2)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanAlgorithm(1, 2)",
                  "uniqueTitle": "euclideanAlgorithm(1, 2)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanAlgorithm(2, 1)",
                  "uniqueTitle": "euclideanAlgorithm(2, 1)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanAlgorithm(6, 6)",
                  "uniqueTitle": "euclideanAlgorithm(6, 6)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanAlgorithm(2, 4)",
                  "uniqueTitle": "euclideanAlgorithm(2, 4)",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanAlgorithm(4, 2)",
                  "uniqueTitle": "euclideanAlgorithm(4, 2)",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanAlgorithm(12, 4)",
                  "uniqueTitle": "euclideanAlgorithm(12, 4)",
                  "contextId": 21,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanAlgorithm(4, 12)",
                  "uniqueTitle": "euclideanAlgorithm(4, 12)",
                  "contextId": 23,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanAlgorithm(5, 13)",
                  "uniqueTitle": "euclideanAlgorithm(5, 13)",
                  "contextId": 26,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanAlgorithm(27, 13)",
                  "uniqueTitle": "euclideanAlgorithm(27, 13)",
                  "contextId": 32,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanAlgorithm(24, 60)",
                  "uniqueTitle": "euclideanAlgorithm(24, 60)",
                  "contextId": 35,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanAlgorithm(60, 24)",
                  "uniqueTitle": "euclideanAlgorithm(60, 24)",
                  "contextId": 39,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanAlgorithm(252, 105)",
                  "uniqueTitle": "euclideanAlgorithm(252, 105)",
                  "contextId": 42,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanAlgorithm(105, 252)",
                  "uniqueTitle": "euclideanAlgorithm(105, 252)",
                  "contextId": 46,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanAlgorithm(1071, 462)",
                  "uniqueTitle": "euclideanAlgorithm(1071, 462)",
                  "contextId": 51,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanAlgorithm(462, 1071)",
                  "uniqueTitle": "euclideanAlgorithm(462, 1071)",
                  "contextId": 55,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanAlgorithm(462, -1071)",
                  "uniqueTitle": "euclideanAlgorithm(462, -1071)",
                  "contextId": 60,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanAlgorithm(-462, -1071)",
                  "uniqueTitle": "euclideanAlgorithm(-462, -1071)",
                  "contextId": 65,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 65,
                        "index": 243
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 47,
                        "index": 146
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1140
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "euclidean-distance",
          "exercises": [
            {
              "id": "javascript-algorithms#98",
              "algo": "euclidean-distance_euclideanDistance",
              "label": "euclideanDistance should calculate euclidean distance between vectors",
              "name": "euclideanDistance should calculate euclidean distance between vectors@euclideanDistance.test.js",
              "pdgs": [
                {
                  "pdgTitle": "euclideanDistance([[]], [[]])",
                  "uniqueTitle": "euclideanDistance([[]], [[]])",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-distance/euclideanDistance.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 36,
                        "index": 309
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 591
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 66,
                        "index": 162
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 676
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanDistance([[]], [[]])",
                  "uniqueTitle": "euclideanDistance([[]], [[]])#2",
                  "contextId": 21,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-distance/euclideanDistance.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 36,
                        "index": 309
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 591
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 66,
                        "index": 162
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 676
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanDistance([[]], [[]])",
                  "uniqueTitle": "euclideanDistance([[]], [[]])#3",
                  "contextId": 36,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-distance/euclideanDistance.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 36,
                        "index": 309
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 591
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 66,
                        "index": 162
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 676
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanDistance([[],[]], [[],[]])",
                  "uniqueTitle": "euclideanDistance([[],[]], [[],[]])",
                  "contextId": 55,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-distance/euclideanDistance.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 36,
                        "index": 309
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 591
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 66,
                        "index": 162
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 676
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanDistance([[]], [[]])",
                  "uniqueTitle": "euclideanDistance([[]], [[]])#4",
                  "contextId": 76,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-distance/euclideanDistance.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 36,
                        "index": 309
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 591
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 66,
                        "index": 162
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 676
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanDistance([[],[],[]], [[],[],[]])",
                  "uniqueTitle": "euclideanDistance([[],[],[]], [[],[],[]])",
                  "contextId": 99,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-distance/euclideanDistance.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 36,
                        "index": 309
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 591
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 66,
                        "index": 162
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 676
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanDistance([[],[],[]], [[],[],[]])",
                  "uniqueTitle": "euclideanDistance([[],[],[]], [[],[],[]])#2",
                  "contextId": 126,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-distance/euclideanDistance.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 36,
                        "index": 309
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 591
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 66,
                        "index": 162
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 676
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#99",
              "algo": "euclidean-distance_euclideanDistance",
              "label": "euclideanDistance should throw an error in case if two matrices are of different shapes",
              "name": "euclideanDistance should throw an error in case if two matrices are of different shapes@euclideanDistance.test.js",
              "pdgs": [
                {
                  "pdgTitle": "euclideanDistance([[]], [[]])",
                  "uniqueTitle": "euclideanDistance([[]], [[]])#5",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-distance/euclideanDistance.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 36,
                        "index": 309
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 591
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 17,
                        "index": 786
                      },
                      "end": {
                        "line": 17,
                        "column": 50,
                        "index": 819
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "euclideanDistance([[]], [[]])",
                  "uniqueTitle": "euclideanDistance([[]], [[]])#6",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/euclidean-distance/euclideanDistance.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 36,
                        "index": 309
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 591
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 17,
                        "index": 907
                      },
                      "end": {
                        "line": 21,
                        "column": 51,
                        "index": 941
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "factorial",
          "exercises": [
            {
              "id": "javascript-algorithms#100",
              "algo": "factorial_factorialRecursive",
              "label": "factorialRecursive should calculate factorial",
              "name": "factorialRecursive should calculate factorial@factorialRecursive.test.js",
              "pdgs": [
                {
                  "pdgTitle": "factorialRecursive(0)",
                  "uniqueTitle": "factorialRecursive(0)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/factorial/factorialRecursive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 109
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 181
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/factorial/__test__/factorialRecursive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 41,
                        "index": 140
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 379
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "factorialRecursive(1)",
                  "uniqueTitle": "factorialRecursive(1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/factorial/factorialRecursive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 109
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 181
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/factorial/__test__/factorialRecursive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 41,
                        "index": 140
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 379
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "factorialRecursive(5)",
                  "uniqueTitle": "factorialRecursive(5)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/factorial/factorialRecursive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 109
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 181
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/factorial/__test__/factorialRecursive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 41,
                        "index": 140
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 379
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "factorialRecursive(8)",
                  "uniqueTitle": "factorialRecursive(8)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/factorial/factorialRecursive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 109
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 181
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/factorial/__test__/factorialRecursive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 41,
                        "index": 140
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 379
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "factorialRecursive(10)",
                  "uniqueTitle": "factorialRecursive(10)",
                  "contextId": 20,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/factorial/factorialRecursive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 109
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 181
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/factorial/__test__/factorialRecursive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 41,
                        "index": 140
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 379
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#101",
              "algo": "factorial_factorial",
              "label": "factorial should calculate factorial",
              "name": "factorial should calculate factorial@factorial.test.js",
              "pdgs": [
                {
                  "pdgTitle": "factorial(0)",
                  "uniqueTitle": "factorial(0)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/factorial/factorial.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 42,
                        "index": 100
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 210
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/factorial/__test__/factorial.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 41,
                        "index": 113
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 307
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "factorial(1)",
                  "uniqueTitle": "factorial(1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/factorial/factorial.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 42,
                        "index": 100
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 210
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/factorial/__test__/factorial.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 41,
                        "index": 113
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 307
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "factorial(5)",
                  "uniqueTitle": "factorial(5)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/factorial/factorial.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 42,
                        "index": 100
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 210
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/factorial/__test__/factorial.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 41,
                        "index": 113
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 307
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "factorial(8)",
                  "uniqueTitle": "factorial(8)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/factorial/factorial.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 42,
                        "index": 100
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 210
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/factorial/__test__/factorial.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 41,
                        "index": 113
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 307
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "factorial(10)",
                  "uniqueTitle": "factorial(10)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/factorial/factorial.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 42,
                        "index": 100
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 210
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/factorial/__test__/factorial.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 41,
                        "index": 113
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 307
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "fast-powering",
          "exercises": [
            {
              "id": "javascript-algorithms#102",
              "algo": "fast-powering_fastPowering",
              "label": "fastPowering should compute power in log(n) time",
              "name": "fastPowering should compute power in log(n) time@fastPowering.test.js",
              "pdgs": [
                {
                  "pdgTitle": "fastPowering(1, 1)",
                  "uniqueTitle": "fastPowering(1, 1)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 50,
                        "index": 325
                      },
                      "end": {
                        "line": 30,
                        "column": 1,
                        "index": 921
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 131
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastPowering(2, 0)",
                  "uniqueTitle": "fastPowering(2, 0)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 50,
                        "index": 325
                      },
                      "end": {
                        "line": 30,
                        "column": 1,
                        "index": 921
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 131
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastPowering(2, 2)",
                  "uniqueTitle": "fastPowering(2, 2)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 50,
                        "index": 325
                      },
                      "end": {
                        "line": 30,
                        "column": 1,
                        "index": 921
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 131
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastPowering(2, 3)",
                  "uniqueTitle": "fastPowering(2, 3)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 50,
                        "index": 325
                      },
                      "end": {
                        "line": 30,
                        "column": 1,
                        "index": 921
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 131
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastPowering(2, 4)",
                  "uniqueTitle": "fastPowering(2, 4)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 50,
                        "index": 325
                      },
                      "end": {
                        "line": 30,
                        "column": 1,
                        "index": 921
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 131
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastPowering(2, 5)",
                  "uniqueTitle": "fastPowering(2, 5)",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 50,
                        "index": 325
                      },
                      "end": {
                        "line": 30,
                        "column": 1,
                        "index": 921
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 131
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastPowering(2, 6)",
                  "uniqueTitle": "fastPowering(2, 6)",
                  "contextId": 22,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 50,
                        "index": 325
                      },
                      "end": {
                        "line": 30,
                        "column": 1,
                        "index": 921
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 131
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastPowering(2, 7)",
                  "uniqueTitle": "fastPowering(2, 7)",
                  "contextId": 26,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 50,
                        "index": 325
                      },
                      "end": {
                        "line": 30,
                        "column": 1,
                        "index": 921
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 131
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastPowering(2, 8)",
                  "uniqueTitle": "fastPowering(2, 8)",
                  "contextId": 30,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 50,
                        "index": 325
                      },
                      "end": {
                        "line": 30,
                        "column": 1,
                        "index": 921
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 131
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastPowering(3, 4)",
                  "uniqueTitle": "fastPowering(3, 4)",
                  "contextId": 35,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 50,
                        "index": 325
                      },
                      "end": {
                        "line": 30,
                        "column": 1,
                        "index": 921
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 131
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastPowering(190, 2)",
                  "uniqueTitle": "fastPowering(190, 2)",
                  "contextId": 39,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 50,
                        "index": 325
                      },
                      "end": {
                        "line": 30,
                        "column": 1,
                        "index": 921
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 131
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastPowering(11, 5)",
                  "uniqueTitle": "fastPowering(11, 5)",
                  "contextId": 42,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 50,
                        "index": 325
                      },
                      "end": {
                        "line": 30,
                        "column": 1,
                        "index": 921
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 131
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastPowering(13, 11)",
                  "uniqueTitle": "fastPowering(13, 11)",
                  "contextId": 46,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 50,
                        "index": 325
                      },
                      "end": {
                        "line": 30,
                        "column": 1,
                        "index": 921
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 131
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastPowering(9, 16)",
                  "uniqueTitle": "fastPowering(9, 16)",
                  "contextId": 51,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 50,
                        "index": 325
                      },
                      "end": {
                        "line": 30,
                        "column": 1,
                        "index": 921
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 131
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastPowering(16, 16)",
                  "uniqueTitle": "fastPowering(16, 16)",
                  "contextId": 57,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 50,
                        "index": 325
                      },
                      "end": {
                        "line": 30,
                        "column": 1,
                        "index": 921
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 131
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastPowering(7, 21)",
                  "uniqueTitle": "fastPowering(7, 21)",
                  "contextId": 63,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 50,
                        "index": 325
                      },
                      "end": {
                        "line": 30,
                        "column": 1,
                        "index": 921
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 131
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastPowering(100, 9)",
                  "uniqueTitle": "fastPowering(100, 9)",
                  "contextId": 69,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 50,
                        "index": 325
                      },
                      "end": {
                        "line": 30,
                        "column": 1,
                        "index": 921
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 50,
                        "index": 131
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "fibonacci",
          "exercises": [
            {
              "id": "javascript-algorithms#103",
              "algo": "fibonacci_fibonacciNthClosedForm",
              "label": "fibonacciClosedForm should throw an error when trying to calculate fibonacci for not allowed positions",
              "name": "fibonacciClosedForm should throw an error when trying to calculate fibonacci for not allowed positions@fibonacciNthClosedForm.test.js",
              "pdgs": [
                {
                  "pdgTitle": "fibonacciClosedForm(76)",
                  "uniqueTitle": "fibonacciClosedForm(76)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 367
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 890
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 58,
                        "index": 266
                      },
                      "end": {
                        "line": 7,
                        "column": 5,
                        "index": 309
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#104",
              "algo": "fibonacci_fibonacciNthClosedForm",
              "label": "fibonacciClosedForm should calculate fibonacci correctly",
              "name": "fibonacciClosedForm should calculate fibonacci correctly@fibonacciNthClosedForm.test.js",
              "pdgs": [
                {
                  "pdgTitle": "fibonacciClosedForm(1)",
                  "uniqueTitle": "fibonacciClosedForm(1)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 367
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 890
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 51,
                        "index": 438
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1058
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciClosedForm(2)",
                  "uniqueTitle": "fibonacciClosedForm(2)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 367
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 890
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 51,
                        "index": 438
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1058
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciClosedForm(3)",
                  "uniqueTitle": "fibonacciClosedForm(3)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 367
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 890
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 51,
                        "index": 438
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1058
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciClosedForm(4)",
                  "uniqueTitle": "fibonacciClosedForm(4)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 367
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 890
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 51,
                        "index": 438
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1058
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciClosedForm(5)",
                  "uniqueTitle": "fibonacciClosedForm(5)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 367
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 890
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 51,
                        "index": 438
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1058
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciClosedForm(6)",
                  "uniqueTitle": "fibonacciClosedForm(6)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 367
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 890
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 51,
                        "index": 438
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1058
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciClosedForm(7)",
                  "uniqueTitle": "fibonacciClosedForm(7)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 367
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 890
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 51,
                        "index": 438
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1058
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciClosedForm(8)",
                  "uniqueTitle": "fibonacciClosedForm(8)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 367
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 890
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 51,
                        "index": 438
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1058
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciClosedForm(20)",
                  "uniqueTitle": "fibonacciClosedForm(20)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 367
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 890
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 51,
                        "index": 438
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1058
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciClosedForm(30)",
                  "uniqueTitle": "fibonacciClosedForm(30)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 367
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 890
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 51,
                        "index": 438
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1058
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciClosedForm(50)",
                  "uniqueTitle": "fibonacciClosedForm(50)",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 367
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 890
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 51,
                        "index": 438
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1058
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciClosedForm(70)",
                  "uniqueTitle": "fibonacciClosedForm(70)",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 367
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 890
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 51,
                        "index": 438
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1058
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#105",
              "algo": "fibonacci_fibonacciNth",
              "label": "fibonacciNth should calculate fibonacci correctly",
              "name": "fibonacciNth should calculate fibonacci correctly@fibonacciNth.test.js",
              "pdgs": [
                {
                  "pdgTitle": "fibonacciNth(1)",
                  "uniqueTitle": "fibonacciNth(1)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 40,
                        "index": 176
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 489
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 899
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciNth(2)",
                  "uniqueTitle": "fibonacciNth(2)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 40,
                        "index": 176
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 489
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 899
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciNth(3)",
                  "uniqueTitle": "fibonacciNth(3)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 40,
                        "index": 176
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 489
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 899
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciNth(4)",
                  "uniqueTitle": "fibonacciNth(4)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 40,
                        "index": 176
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 489
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 899
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciNth(5)",
                  "uniqueTitle": "fibonacciNth(5)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 40,
                        "index": 176
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 489
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 899
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciNth(6)",
                  "uniqueTitle": "fibonacciNth(6)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 40,
                        "index": 176
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 489
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 899
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciNth(7)",
                  "uniqueTitle": "fibonacciNth(7)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 40,
                        "index": 176
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 489
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 899
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciNth(8)",
                  "uniqueTitle": "fibonacciNth(8)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 40,
                        "index": 176
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 489
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 899
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciNth(20)",
                  "uniqueTitle": "fibonacciNth(20)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 40,
                        "index": 176
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 489
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 899
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciNth(30)",
                  "uniqueTitle": "fibonacciNth(30)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 40,
                        "index": 176
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 489
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 899
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciNth(50)",
                  "uniqueTitle": "fibonacciNth(50)",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 40,
                        "index": 176
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 489
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 899
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciNth(70)",
                  "uniqueTitle": "fibonacciNth(70)",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 40,
                        "index": 176
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 489
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 899
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciNth(71)",
                  "uniqueTitle": "fibonacciNth(71)",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 40,
                        "index": 176
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 489
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 899
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciNth(72)",
                  "uniqueTitle": "fibonacciNth(72)",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 40,
                        "index": 176
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 489
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 899
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciNth(73)",
                  "uniqueTitle": "fibonacciNth(73)",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 40,
                        "index": 176
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 489
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 899
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciNth(74)",
                  "uniqueTitle": "fibonacciNth(74)",
                  "contextId": 20,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 40,
                        "index": 176
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 489
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 899
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacciNth(75)",
                  "uniqueTitle": "fibonacciNth(75)",
                  "contextId": 21,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 40,
                        "index": 176
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 489
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 899
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#106",
              "algo": "fibonacci_fibonacci",
              "label": "fibonacci should calculate fibonacci correctly",
              "name": "fibonacci should calculate fibonacci correctly@fibonacci.test.js",
              "pdgs": [
                {
                  "pdgTitle": "fibonacci(1)",
                  "uniqueTitle": "fibonacci(1)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 37,
                        "index": 132
                      },
                      "end": {
                        "line": 29,
                        "column": 1,
                        "index": 523
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 123
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 675
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacci(2)",
                  "uniqueTitle": "fibonacci(2)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 37,
                        "index": 132
                      },
                      "end": {
                        "line": 29,
                        "column": 1,
                        "index": 523
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 123
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 675
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacci(3)",
                  "uniqueTitle": "fibonacci(3)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 37,
                        "index": 132
                      },
                      "end": {
                        "line": 29,
                        "column": 1,
                        "index": 523
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 123
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 675
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacci(4)",
                  "uniqueTitle": "fibonacci(4)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 37,
                        "index": 132
                      },
                      "end": {
                        "line": 29,
                        "column": 1,
                        "index": 523
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 123
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 675
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacci(5)",
                  "uniqueTitle": "fibonacci(5)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 37,
                        "index": 132
                      },
                      "end": {
                        "line": 29,
                        "column": 1,
                        "index": 523
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 123
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 675
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacci(6)",
                  "uniqueTitle": "fibonacci(6)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 37,
                        "index": 132
                      },
                      "end": {
                        "line": 29,
                        "column": 1,
                        "index": 523
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 123
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 675
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacci(7)",
                  "uniqueTitle": "fibonacci(7)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 37,
                        "index": 132
                      },
                      "end": {
                        "line": 29,
                        "column": 1,
                        "index": 523
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 123
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 675
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacci(8)",
                  "uniqueTitle": "fibonacci(8)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 37,
                        "index": 132
                      },
                      "end": {
                        "line": 29,
                        "column": 1,
                        "index": 523
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 123
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 675
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacci(9)",
                  "uniqueTitle": "fibonacci(9)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 37,
                        "index": 132
                      },
                      "end": {
                        "line": 29,
                        "column": 1,
                        "index": 523
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 123
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 675
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fibonacci(10)",
                  "uniqueTitle": "fibonacci(10)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 37,
                        "index": 132
                      },
                      "end": {
                        "line": 29,
                        "column": 1,
                        "index": 523
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 123
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 675
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "fourier-transform",
          "exercises": [
            {
              "id": "javascript-algorithms#107",
              "algo": "fourier-transform_fastFourierTransform",
              "label": "fastFourierTransform should calculate the radix-2 discrete fourier transform #1",
              "name": "fastFourierTransform should calculate the radix-2 discrete fourier transform #1@fastFourierTransform.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#24",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 35,
                        "column": 73,
                        "index": 908
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1349
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#25",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 35,
                        "column": 73,
                        "index": 908
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1349
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastFourierTransform([{}])",
                  "uniqueTitle": "fastFourierTransform([{}])",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/fastFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 56,
                        "index": 867
                      },
                      "end": {
                        "line": 84,
                        "column": 1,
                        "index": 2373
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 35,
                        "column": 73,
                        "index": 908
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1349
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastFourierTransform([{}], true)",
                  "uniqueTitle": "fastFourierTransform([{}], true)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/fastFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 56,
                        "index": 867
                      },
                      "end": {
                        "line": 84,
                        "column": 1,
                        "index": 2373
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 35,
                        "column": 73,
                        "index": 908
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1349
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#108",
              "algo": "fourier-transform_fastFourierTransform",
              "label": "fastFourierTransform should calculate the radix-2 discrete fourier transform #2",
              "name": "fastFourierTransform should calculate the radix-2 discrete fourier transform #2@fastFourierTransform.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#26",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 49,
                        "column": 73,
                        "index": 1428
                      },
                      "end": {
                        "line": 72,
                        "column": 3,
                        "index": 2128
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#27",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 49,
                        "column": 73,
                        "index": 1428
                      },
                      "end": {
                        "line": 72,
                        "column": 3,
                        "index": 2128
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#28",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 49,
                        "column": 73,
                        "index": 1428
                      },
                      "end": {
                        "line": 72,
                        "column": 3,
                        "index": 2128
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#29",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 49,
                        "column": 73,
                        "index": 1428
                      },
                      "end": {
                        "line": 72,
                        "column": 3,
                        "index": 2128
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#30",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 49,
                        "column": 73,
                        "index": 1428
                      },
                      "end": {
                        "line": 72,
                        "column": 3,
                        "index": 2128
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#31",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 49,
                        "column": 73,
                        "index": 1428
                      },
                      "end": {
                        "line": 72,
                        "column": 3,
                        "index": 2128
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#32",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 49,
                        "column": 73,
                        "index": 1428
                      },
                      "end": {
                        "line": 72,
                        "column": 3,
                        "index": 2128
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastFourierTransform([{},{},{}])",
                  "uniqueTitle": "fastFourierTransform([{},{},{}])",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/fastFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 56,
                        "index": 867
                      },
                      "end": {
                        "line": 84,
                        "column": 1,
                        "index": 2373
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 49,
                        "column": 73,
                        "index": 1428
                      },
                      "end": {
                        "line": 72,
                        "column": 3,
                        "index": 2128
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastFourierTransform([{},{},{},{}], true)",
                  "uniqueTitle": "fastFourierTransform([{},{},{},{}], true)",
                  "contextId": 75,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/fastFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 56,
                        "index": 867
                      },
                      "end": {
                        "line": 84,
                        "column": 1,
                        "index": 2373
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 49,
                        "column": 73,
                        "index": 1428
                      },
                      "end": {
                        "line": 72,
                        "column": 3,
                        "index": 2128
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#109",
              "algo": "fourier-transform_fastFourierTransform",
              "label": "fastFourierTransform should calculate the radix-2 discrete fourier transform #3",
              "name": "fastFourierTransform should calculate the radix-2 discrete fourier transform #3@fastFourierTransform.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#33",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#34",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#35",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#36",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#37",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#38",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#39",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#40",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#41",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#42",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#43",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#44",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#45",
                  "contextId": 20,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#46",
                  "contextId": 21,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#47",
                  "contextId": 22,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#48",
                  "contextId": 23,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#49",
                  "contextId": 24,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#50",
                  "contextId": 25,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#51",
                  "contextId": 26,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#52",
                  "contextId": 27,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#53",
                  "contextId": 28,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#54",
                  "contextId": 29,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#55",
                  "contextId": 30,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#56",
                  "contextId": 31,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#57",
                  "contextId": 32,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#58",
                  "contextId": 33,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastFourierTransform([{},{},{},{},{},{},{},{},{},{}])",
                  "uniqueTitle": "fastFourierTransform([{},{},{},{},{},{},{},{},{},{}])",
                  "contextId": 34,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/fastFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 56,
                        "index": 867
                      },
                      "end": {
                        "line": 84,
                        "column": 1,
                        "index": 2373
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fastFourierTransform([{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}], true)",
                  "uniqueTitle": "fastFourierTransform([{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}], true)",
                  "contextId": 461,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/fastFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 56,
                        "index": 867
                      },
                      "end": {
                        "line": 84,
                        "column": 1,
                        "index": 2373
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 74,
                        "column": 73,
                        "index": 2207
                      },
                      "end": {
                        "line": 116,
                        "column": 3,
                        "index": 4490
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#110",
              "algo": "fourier-transform_inverseDiscreteFourierTransform",
              "label": "inverseDiscreteFourierTransform should calculate output signal out of input frequencies",
              "name": "inverseDiscreteFourierTransform should calculate output signal out of input frequencies@inverseDiscreteFourierTransform.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#59",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "inverseDiscreteFourierTransform([{}])",
                  "uniqueTitle": "inverseDiscreteFourierTransform([{}])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 69,
                        "index": 592
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1881
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#60",
                  "contextId": 24,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#61",
                  "contextId": 26,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "inverseDiscreteFourierTransform([{},{}])",
                  "uniqueTitle": "inverseDiscreteFourierTransform([{},{}])",
                  "contextId": 27,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 69,
                        "index": 592
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1881
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#62",
                  "contextId": 62,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#63",
                  "contextId": 64,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "inverseDiscreteFourierTransform([{},{}])",
                  "uniqueTitle": "inverseDiscreteFourierTransform([{},{}])#2",
                  "contextId": 65,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 69,
                        "index": 592
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1881
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#64",
                  "contextId": 100,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#65",
                  "contextId": 102,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#66",
                  "contextId": 104,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "inverseDiscreteFourierTransform([{},{},{}])",
                  "uniqueTitle": "inverseDiscreteFourierTransform([{},{},{}])",
                  "contextId": 105,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 69,
                        "index": 592
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1881
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#67",
                  "contextId": 177,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#68",
                  "contextId": 179,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#69",
                  "contextId": 181,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#70",
                  "contextId": 183,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "inverseDiscreteFourierTransform([{},{},{},{}])",
                  "uniqueTitle": "inverseDiscreteFourierTransform([{},{},{},{}])",
                  "contextId": 184,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 69,
                        "index": 592
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1881
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#71",
                  "contextId": 307,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#72",
                  "contextId": 309,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#73",
                  "contextId": 311,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#74",
                  "contextId": 313,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "inverseDiscreteFourierTransform([{},{},{},{}])",
                  "uniqueTitle": "inverseDiscreteFourierTransform([{},{},{},{}])#2",
                  "contextId": 314,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 69,
                        "index": 592
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1881
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#75",
                  "contextId": 437,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#76",
                  "contextId": 439,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#77",
                  "contextId": 441,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#78",
                  "contextId": 443,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "inverseDiscreteFourierTransform([{},{},{},{}])",
                  "uniqueTitle": "inverseDiscreteFourierTransform([{},{},{},{}])#3",
                  "contextId": 444,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 69,
                        "index": 592
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1881
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#79",
                  "contextId": 567,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#80",
                  "contextId": 569,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#81",
                  "contextId": 571,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#82",
                  "contextId": 573,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "inverseDiscreteFourierTransform([{},{},{},{}])",
                  "uniqueTitle": "inverseDiscreteFourierTransform([{},{},{},{}])#4",
                  "contextId": 574,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 69,
                        "index": 592
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1881
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#83",
                  "contextId": 697,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#84",
                  "contextId": 699,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#85",
                  "contextId": 701,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#86",
                  "contextId": 703,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "inverseDiscreteFourierTransform([{},{},{},{}])",
                  "uniqueTitle": "inverseDiscreteFourierTransform([{},{},{},{}])#5",
                  "contextId": 704,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 69,
                        "index": 592
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1881
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#87",
                  "contextId": 827,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#88",
                  "contextId": 829,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#89",
                  "contextId": 831,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#90",
                  "contextId": 833,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "inverseDiscreteFourierTransform([{},{},{},{}])",
                  "uniqueTitle": "inverseDiscreteFourierTransform([{},{},{},{}])#6",
                  "contextId": 834,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 69,
                        "index": 592
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1881
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#91",
                  "contextId": 957,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#92",
                  "contextId": 959,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#93",
                  "contextId": 961,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#94",
                  "contextId": 963,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "inverseDiscreteFourierTransform([{},{},{},{}])",
                  "uniqueTitle": "inverseDiscreteFourierTransform([{},{},{},{}])#7",
                  "contextId": 964,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 69,
                        "index": 592
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1881
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#95",
                  "contextId": 1087,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#96",
                  "contextId": 1089,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#97",
                  "contextId": 1091,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.constructor({re,im})",
                  "uniqueTitle": "ComplexNumber.constructor({re,im})#98",
                  "contextId": 1093,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "index": 241
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 526
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "inverseDiscreteFourierTransform([{},{},{},{}])",
                  "uniqueTitle": "inverseDiscreteFourierTransform([{},{},{},{}])#8",
                  "contextId": 1094,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 69,
                        "index": 592
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1881
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 70,
                        "index": 254
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 341
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#111",
              "algo": "fourier-transform_discreteFourierTransform",
              "label": "discreteFourierTransform should split signal into frequencies",
              "name": "discreteFourierTransform should split signal into frequencies@discreteFourierTransform.test.js",
              "pdgs": [
                {
                  "pdgTitle": "dft([1])",
                  "uniqueTitle": "dft([1])",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 45,
                        "index": 990
                      },
                      "end": {
                        "line": 73,
                        "column": 1,
                        "index": 2796
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#11",
                  "contextId": 32,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dft([1,0])",
                  "uniqueTitle": "dft([1,0])",
                  "contextId": 39,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 45,
                        "index": 990
                      },
                      "end": {
                        "line": 73,
                        "column": 1,
                        "index": 2796
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#12",
                  "contextId": 95,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#13",
                  "contextId": 100,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dft([2,0])",
                  "uniqueTitle": "dft([2,0])",
                  "contextId": 107,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 45,
                        "index": 990
                      },
                      "end": {
                        "line": 73,
                        "column": 1,
                        "index": 2796
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#14",
                  "contextId": 163,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#15",
                  "contextId": 168,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dft([1,0,0])",
                  "uniqueTitle": "dft([1,0,0])",
                  "contextId": 176,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 45,
                        "index": 990
                      },
                      "end": {
                        "line": 73,
                        "column": 1,
                        "index": 2796
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#16",
                  "contextId": 283,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#17",
                  "contextId": 288,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#18",
                  "contextId": 293,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dft([1,0,0,0])",
                  "uniqueTitle": "dft([1,0,0,0])",
                  "contextId": 302,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 45,
                        "index": 990
                      },
                      "end": {
                        "line": 73,
                        "column": 1,
                        "index": 2796
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#19",
                  "contextId": 476,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#20",
                  "contextId": 481,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#21",
                  "contextId": 486,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#22",
                  "contextId": 491,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dft([0,1,0,0])",
                  "uniqueTitle": "dft([0,1,0,0])",
                  "contextId": 500,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 45,
                        "index": 990
                      },
                      "end": {
                        "line": 73,
                        "column": 1,
                        "index": 2796
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#23",
                  "contextId": 674,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#24",
                  "contextId": 679,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#25",
                  "contextId": 684,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#26",
                  "contextId": 689,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dft([0,0,1,0])",
                  "uniqueTitle": "dft([0,0,1,0])",
                  "contextId": 698,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 45,
                        "index": 990
                      },
                      "end": {
                        "line": 73,
                        "column": 1,
                        "index": 2796
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#27",
                  "contextId": 872,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#28",
                  "contextId": 877,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#29",
                  "contextId": 882,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#30",
                  "contextId": 887,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dft([0,0,0,2])",
                  "uniqueTitle": "dft([0,0,0,2])",
                  "contextId": 896,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 45,
                        "index": 990
                      },
                      "end": {
                        "line": 73,
                        "column": 1,
                        "index": 2796
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#31",
                  "contextId": 1070,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#32",
                  "contextId": 1075,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#33",
                  "contextId": 1080,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#34",
                  "contextId": 1085,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dft([0,1,0,2])",
                  "uniqueTitle": "dft([0,1,0,2])",
                  "contextId": 1094,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 45,
                        "index": 990
                      },
                      "end": {
                        "line": 73,
                        "column": 1,
                        "index": 2796
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#35",
                  "contextId": 1268,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#36",
                  "contextId": 1273,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#37",
                  "contextId": 1278,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#38",
                  "contextId": 1283,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dft([4,1,0,2])",
                  "uniqueTitle": "dft([4,1,0,2])",
                  "contextId": 1292,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 45,
                        "index": 990
                      },
                      "end": {
                        "line": 73,
                        "column": 1,
                        "index": 2796
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#39",
                  "contextId": 1466,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#40",
                  "contextId": 1471,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#41",
                  "contextId": 1476,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#42",
                  "contextId": 1481,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dft([4,1,-3,2])",
                  "uniqueTitle": "dft([4,1,-3,2])",
                  "contextId": 1490,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 45,
                        "index": 990
                      },
                      "end": {
                        "line": 73,
                        "column": 1,
                        "index": 2796
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#43",
                  "contextId": 1664,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#44",
                  "contextId": 1669,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#45",
                  "contextId": 1674,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#46",
                  "contextId": 1679,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dft([1,2,3,4])",
                  "uniqueTitle": "dft([1,2,3,4])",
                  "contextId": 1688,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 45,
                        "index": 990
                      },
                      "end": {
                        "line": 73,
                        "column": 1,
                        "index": 2796
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#47",
                  "contextId": 1862,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#48",
                  "contextId": 1867,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#49",
                  "contextId": 1872,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ComplexNumber.getPolarForm(false)",
                  "uniqueTitle": "ComplexNumber.getPolarForm(false)#50",
                  "contextId": 1877,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 17,
                        "index": 4006
                      },
                      "end": {
                        "line": 154,
                        "column": 3,
                        "index": 4209
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 214
                      },
                      "end": {
                        "line": 7,
                        "column": 3,
                        "index": 293
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "horner-method",
          "exercises": [
            {
              "id": "javascript-algorithms#112",
              "algo": "horner-method_hornerMethod",
              "label": "hornerMethod should evaluate the polynomial for the specified value of x correctly",
              "name": "hornerMethod should evaluate the polynomial for the specified value of x correctly@hornerMethod.test.js",
              "pdgs": [
                {
                  "pdgTitle": "hornerMethod([8], 0.1)",
                  "uniqueTitle": "hornerMethod([8], 0.1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 57,
                        "index": 291
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 427
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 84,
                        "index": 216
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 866
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hornerMethod([2,4,2,5], 0.555)",
                  "uniqueTitle": "hornerMethod([2,4,2,5], 0.555)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 57,
                        "index": 291
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 427
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 84,
                        "index": 216
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 866
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hornerMethod([2,4,2,5], 0.75)",
                  "uniqueTitle": "hornerMethod([2,4,2,5], 0.75)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 57,
                        "index": 291
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 427
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 84,
                        "index": 216
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 866
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hornerMethod([1,1,1,1,1], 1.75)",
                  "uniqueTitle": "hornerMethod([1,1,1,1,1], 1.75)",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 57,
                        "index": 291
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 427
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 84,
                        "index": 216
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 866
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hornerMethod([15,3.5,0,2,1.42,0.41], 0.315)",
                  "uniqueTitle": "hornerMethod([15,3.5,0,2,1.42,0.41], 0.315)",
                  "contextId": 24,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 57,
                        "index": 291
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 427
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 84,
                        "index": 216
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 866
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hornerMethod([0,0,2.77,1.42,0.41], 1.35)",
                  "uniqueTitle": "hornerMethod([0,0,2.77,1.42,0.41], 1.35)",
                  "contextId": 31,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 57,
                        "index": 291
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 427
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 84,
                        "index": 216
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 866
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hornerMethod([0,0,2.77,1.42,2.3311], 1.35)",
                  "uniqueTitle": "hornerMethod([0,0,2.77,1.42,2.3311], 1.35)",
                  "contextId": 37,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 57,
                        "index": 291
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 427
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 84,
                        "index": 216
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 866
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hornerMethod([2,0,0,5.757,5.31412,12.3213], 3.141)",
                  "uniqueTitle": "hornerMethod([2,0,0,5.757,5.31412,12.3213], 3.141)",
                  "contextId": 43,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 57,
                        "index": 291
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 427
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 84,
                        "index": 216
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 866
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#113",
              "algo": "horner-method_hornerMethod",
              "label": "hornerMethod should evaluate the same polynomial value as classical approach",
              "name": "hornerMethod should evaluate the same polynomial value as classical approach@hornerMethod.test.js",
              "pdgs": [
                {
                  "pdgTitle": "hornerMethod([8], 0.1)",
                  "uniqueTitle": "hornerMethod([8], 0.1)#2",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 57,
                        "index": 291
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 427
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 78,
                        "index": 950
                      },
                      "end": {
                        "line": 32,
                        "column": 3,
                        "index": 1233
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "classicPolynome([8], 0.1)",
                  "uniqueTitle": "classicPolynome([8], 0.1)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 317
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 495
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 78,
                        "index": 950
                      },
                      "end": {
                        "line": 32,
                        "column": 3,
                        "index": 1233
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hornerMethod([2,4,2,5], 0.555)",
                  "uniqueTitle": "hornerMethod([2,4,2,5], 0.555)#2",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 57,
                        "index": 291
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 427
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 78,
                        "index": 950
                      },
                      "end": {
                        "line": 32,
                        "column": 3,
                        "index": 1233
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "classicPolynome([2,4,2,5], 0.555)",
                  "uniqueTitle": "classicPolynome([2,4,2,5], 0.555)",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 317
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 495
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 78,
                        "index": 950
                      },
                      "end": {
                        "line": 32,
                        "column": 3,
                        "index": 1233
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hornerMethod([2,4,2,5], 0.75)",
                  "uniqueTitle": "hornerMethod([2,4,2,5], 0.75)#2",
                  "contextId": 20,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 57,
                        "index": 291
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 427
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 78,
                        "index": 950
                      },
                      "end": {
                        "line": 32,
                        "column": 3,
                        "index": 1233
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "classicPolynome([2,4,2,5], 0.75)",
                  "uniqueTitle": "classicPolynome([2,4,2,5], 0.75)",
                  "contextId": 25,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 317
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 495
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 78,
                        "index": 950
                      },
                      "end": {
                        "line": 32,
                        "column": 3,
                        "index": 1233
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#114",
              "algo": "horner-method_classicPolynome",
              "label": "classicPolynome should evaluate the polynomial for the specified value of x correctly",
              "name": "classicPolynome should evaluate the polynomial for the specified value of x correctly@classicPolynome.test.js",
              "pdgs": [
                {
                  "pdgTitle": "classicPolynome([8], 0.1)",
                  "uniqueTitle": "classicPolynome([8], 0.1)#2",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 317
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 495
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/classicPolynome.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 84,
                        "index": 174
                      },
                      "end": {
                        "line": 21,
                        "column": 3,
                        "index": 849
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "classicPolynome([2,4,2,5], 0.555)",
                  "uniqueTitle": "classicPolynome([2,4,2,5], 0.555)#2",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 317
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 495
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/classicPolynome.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 84,
                        "index": 174
                      },
                      "end": {
                        "line": 21,
                        "column": 3,
                        "index": 849
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "classicPolynome([2,4,2,5], 0.75)",
                  "uniqueTitle": "classicPolynome([2,4,2,5], 0.75)#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 317
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 495
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/classicPolynome.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 84,
                        "index": 174
                      },
                      "end": {
                        "line": 21,
                        "column": 3,
                        "index": 849
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "classicPolynome([1,1,1,1,1], 1.75)",
                  "uniqueTitle": "classicPolynome([1,1,1,1,1], 1.75)",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 317
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 495
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/classicPolynome.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 84,
                        "index": 174
                      },
                      "end": {
                        "line": 21,
                        "column": 3,
                        "index": 849
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "classicPolynome([15,3.5,0,2,1.42,0.41], 0.315)",
                  "uniqueTitle": "classicPolynome([15,3.5,0,2,1.42,0.41], 0.315)",
                  "contextId": 23,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 317
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 495
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/classicPolynome.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 84,
                        "index": 174
                      },
                      "end": {
                        "line": 21,
                        "column": 3,
                        "index": 849
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "classicPolynome([0,0,2.77,1.42,0.41], 1.35)",
                  "uniqueTitle": "classicPolynome([0,0,2.77,1.42,0.41], 1.35)",
                  "contextId": 30,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 317
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 495
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/classicPolynome.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 84,
                        "index": 174
                      },
                      "end": {
                        "line": 21,
                        "column": 3,
                        "index": 849
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "classicPolynome([0,0,2.77,1.42,2.3311], 1.35)",
                  "uniqueTitle": "classicPolynome([0,0,2.77,1.42,2.3311], 1.35)",
                  "contextId": 36,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 317
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 495
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/classicPolynome.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 84,
                        "index": 174
                      },
                      "end": {
                        "line": 21,
                        "column": 3,
                        "index": 849
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "classicPolynome([2,0,0,5.757,5.31412,12.3213], 3.141)",
                  "uniqueTitle": "classicPolynome([2,0,0,5.757,5.31412,12.3213], 3.141)",
                  "contextId": 42,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 317
                      },
                      "end": {
                        "line": 15,
                        "column": 1,
                        "index": 495
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/horner-method/__test__/classicPolynome.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 84,
                        "index": 174
                      },
                      "end": {
                        "line": 21,
                        "column": 3,
                        "index": 849
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "integer-partition",
          "exercises": [
            {
              "id": "javascript-algorithms#115",
              "algo": "integer-partition_integerPartition",
              "label": "integerPartition should partition the number",
              "name": "integerPartition should partition the number@integerPartition.test.js",
              "pdgs": [
                {
                  "pdgTitle": "integerPartition(1)",
                  "uniqueTitle": "integerPartition(1)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/integer-partition/integerPartition.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 49,
                        "index": 107
                      },
                      "end": {
                        "line": 63,
                        "column": 1,
                        "index": 2770
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/integer-partition/__test__/integerPartition.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 135
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 480
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "integerPartition(2)",
                  "uniqueTitle": "integerPartition(2)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/integer-partition/integerPartition.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 49,
                        "index": 107
                      },
                      "end": {
                        "line": 63,
                        "column": 1,
                        "index": 2770
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/integer-partition/__test__/integerPartition.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 135
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 480
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "integerPartition(3)",
                  "uniqueTitle": "integerPartition(3)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/integer-partition/integerPartition.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 49,
                        "index": 107
                      },
                      "end": {
                        "line": 63,
                        "column": 1,
                        "index": 2770
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/integer-partition/__test__/integerPartition.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 135
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 480
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "integerPartition(4)",
                  "uniqueTitle": "integerPartition(4)",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/integer-partition/integerPartition.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 49,
                        "index": 107
                      },
                      "end": {
                        "line": 63,
                        "column": 1,
                        "index": 2770
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/integer-partition/__test__/integerPartition.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 135
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 480
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "integerPartition(5)",
                  "uniqueTitle": "integerPartition(5)",
                  "contextId": 23,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/integer-partition/integerPartition.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 49,
                        "index": 107
                      },
                      "end": {
                        "line": 63,
                        "column": 1,
                        "index": 2770
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/integer-partition/__test__/integerPartition.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 135
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 480
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "integerPartition(6)",
                  "uniqueTitle": "integerPartition(6)",
                  "contextId": 30,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/integer-partition/integerPartition.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 49,
                        "index": 107
                      },
                      "end": {
                        "line": 63,
                        "column": 1,
                        "index": 2770
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/integer-partition/__test__/integerPartition.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 135
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 480
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "integerPartition(7)",
                  "uniqueTitle": "integerPartition(7)",
                  "contextId": 38,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/integer-partition/integerPartition.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 49,
                        "index": 107
                      },
                      "end": {
                        "line": 63,
                        "column": 1,
                        "index": 2770
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/integer-partition/__test__/integerPartition.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 135
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 480
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "integerPartition(8)",
                  "uniqueTitle": "integerPartition(8)",
                  "contextId": 47,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/integer-partition/integerPartition.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 49,
                        "index": 107
                      },
                      "end": {
                        "line": 63,
                        "column": 1,
                        "index": 2770
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/integer-partition/__test__/integerPartition.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "index": 135
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 480
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "is-power-of-two",
          "exercises": [
            {
              "id": "javascript-algorithms#116",
              "algo": "is-power-of-two_isPowerOfTwoBitwise",
              "label": "isPowerOfTwoBitwise should check if the number is made by multiplying twos",
              "name": "isPowerOfTwoBitwise should check if the number is made by multiplying twos@isPowerOfTwoBitwise.test.js",
              "pdgs": [
                {
                  "pdgTitle": "isPowerOfTwoBitwise(-1)",
                  "uniqueTitle": "isPowerOfTwoBitwise(-1)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 52,
                        "index": 111
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 699
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 1015
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwoBitwise(0)",
                  "uniqueTitle": "isPowerOfTwoBitwise(0)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 52,
                        "index": 111
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 699
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 1015
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwoBitwise(1)",
                  "uniqueTitle": "isPowerOfTwoBitwise(1)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 52,
                        "index": 111
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 699
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 1015
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwoBitwise(2)",
                  "uniqueTitle": "isPowerOfTwoBitwise(2)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 52,
                        "index": 111
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 699
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 1015
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwoBitwise(3)",
                  "uniqueTitle": "isPowerOfTwoBitwise(3)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 52,
                        "index": 111
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 699
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 1015
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwoBitwise(4)",
                  "uniqueTitle": "isPowerOfTwoBitwise(4)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 52,
                        "index": 111
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 699
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 1015
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwoBitwise(5)",
                  "uniqueTitle": "isPowerOfTwoBitwise(5)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 52,
                        "index": 111
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 699
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 1015
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwoBitwise(6)",
                  "uniqueTitle": "isPowerOfTwoBitwise(6)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 52,
                        "index": 111
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 699
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 1015
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwoBitwise(7)",
                  "uniqueTitle": "isPowerOfTwoBitwise(7)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 52,
                        "index": 111
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 699
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 1015
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwoBitwise(8)",
                  "uniqueTitle": "isPowerOfTwoBitwise(8)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 52,
                        "index": 111
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 699
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 1015
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwoBitwise(10)",
                  "uniqueTitle": "isPowerOfTwoBitwise(10)",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 52,
                        "index": 111
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 699
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 1015
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwoBitwise(12)",
                  "uniqueTitle": "isPowerOfTwoBitwise(12)",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 52,
                        "index": 111
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 699
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 1015
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwoBitwise(16)",
                  "uniqueTitle": "isPowerOfTwoBitwise(16)",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 52,
                        "index": 111
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 699
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 1015
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwoBitwise(31)",
                  "uniqueTitle": "isPowerOfTwoBitwise(31)",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 52,
                        "index": 111
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 699
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 1015
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwoBitwise(64)",
                  "uniqueTitle": "isPowerOfTwoBitwise(64)",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 52,
                        "index": 111
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 699
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 1015
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwoBitwise(1024)",
                  "uniqueTitle": "isPowerOfTwoBitwise(1024)",
                  "contextId": 20,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 52,
                        "index": 111
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 699
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 1015
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwoBitwise(1023)",
                  "uniqueTitle": "isPowerOfTwoBitwise(1023)",
                  "contextId": 21,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 52,
                        "index": 111
                      },
                      "end": {
                        "line": 26,
                        "column": 1,
                        "index": 699
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 1015
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#117",
              "algo": "is-power-of-two_isPowerOfTwo",
              "label": "isPowerOfTwo should check if the number is made by multiplying twos",
              "name": "isPowerOfTwo should check if the number is made by multiplying twos@isPowerOfTwo.test.js",
              "pdgs": [
                {
                  "pdgTitle": "isPowerOfTwo(-1)",
                  "uniqueTitle": "isPowerOfTwo(-1)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 104
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 596
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 150
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 875
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(0)",
                  "uniqueTitle": "isPowerOfTwo(0)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 104
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 596
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 150
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 875
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(1)",
                  "uniqueTitle": "isPowerOfTwo(1)#2",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 104
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 596
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 150
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 875
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(2)",
                  "uniqueTitle": "isPowerOfTwo(2)#2",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 104
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 596
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 150
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 875
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(3)",
                  "uniqueTitle": "isPowerOfTwo(3)#2",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 104
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 596
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 150
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 875
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(4)",
                  "uniqueTitle": "isPowerOfTwo(4)#2",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 104
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 596
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 150
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 875
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(5)",
                  "uniqueTitle": "isPowerOfTwo(5)#2",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 104
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 596
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 150
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 875
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(6)",
                  "uniqueTitle": "isPowerOfTwo(6)#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 104
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 596
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 150
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 875
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(7)",
                  "uniqueTitle": "isPowerOfTwo(7)#2",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 104
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 596
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 150
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 875
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(8)",
                  "uniqueTitle": "isPowerOfTwo(8)#2",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 104
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 596
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 150
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 875
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(10)",
                  "uniqueTitle": "isPowerOfTwo(10)",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 104
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 596
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 150
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 875
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(12)",
                  "uniqueTitle": "isPowerOfTwo(12)",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 104
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 596
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 150
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 875
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(16)",
                  "uniqueTitle": "isPowerOfTwo(16)#2",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 104
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 596
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 150
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 875
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(31)",
                  "uniqueTitle": "isPowerOfTwo(31)",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 104
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 596
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 150
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 875
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(64)",
                  "uniqueTitle": "isPowerOfTwo(64)",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 104
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 596
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 150
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 875
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(1024)",
                  "uniqueTitle": "isPowerOfTwo(1024)",
                  "contextId": 20,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 104
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 596
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 150
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 875
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPowerOfTwo(1023)",
                  "uniqueTitle": "isPowerOfTwo(1023)",
                  "contextId": 21,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 45,
                        "index": 104
                      },
                      "end": {
                        "line": 25,
                        "column": 1,
                        "index": 596
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 150
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 875
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "least-common-multiple",
          "exercises": [
            {
              "id": "javascript-algorithms#118",
              "algo": "least-common-multiple_leastCommonMultiple",
              "label": "leastCommonMultiple should find least common multiple",
              "name": "leastCommonMultiple should find least common multiple@leastCommonMultiple.test.js",
              "pdgs": [
                {
                  "pdgTitle": "leastCommonMultiple(0, 0)",
                  "uniqueTitle": "leastCommonMultiple(0, 0)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 50,
                        "index": 206
                      },
                      "end": {
                        "line": 11,
                        "column": 1,
                        "index": 289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 150
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 759
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "leastCommonMultiple(1, 0)",
                  "uniqueTitle": "leastCommonMultiple(1, 0)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 50,
                        "index": 206
                      },
                      "end": {
                        "line": 11,
                        "column": 1,
                        "index": 289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 150
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 759
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "leastCommonMultiple(0, 1)",
                  "uniqueTitle": "leastCommonMultiple(0, 1)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 50,
                        "index": 206
                      },
                      "end": {
                        "line": 11,
                        "column": 1,
                        "index": 289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 150
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 759
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "leastCommonMultiple(4, 6)",
                  "uniqueTitle": "leastCommonMultiple(4, 6)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 50,
                        "index": 206
                      },
                      "end": {
                        "line": 11,
                        "column": 1,
                        "index": 289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 150
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 759
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "leastCommonMultiple(6, 21)",
                  "uniqueTitle": "leastCommonMultiple(6, 21)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 50,
                        "index": 206
                      },
                      "end": {
                        "line": 11,
                        "column": 1,
                        "index": 289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 150
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 759
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "leastCommonMultiple(7, 2)",
                  "uniqueTitle": "leastCommonMultiple(7, 2)",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 50,
                        "index": 206
                      },
                      "end": {
                        "line": 11,
                        "column": 1,
                        "index": 289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 150
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 759
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "leastCommonMultiple(3, 5)",
                  "uniqueTitle": "leastCommonMultiple(3, 5)",
                  "contextId": 23,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 50,
                        "index": 206
                      },
                      "end": {
                        "line": 11,
                        "column": 1,
                        "index": 289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 150
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 759
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "leastCommonMultiple(7, 3)",
                  "uniqueTitle": "leastCommonMultiple(7, 3)",
                  "contextId": 29,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 50,
                        "index": 206
                      },
                      "end": {
                        "line": 11,
                        "column": 1,
                        "index": 289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 150
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 759
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "leastCommonMultiple(1000000, 2)",
                  "uniqueTitle": "leastCommonMultiple(1000000, 2)",
                  "contextId": 33,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 50,
                        "index": 206
                      },
                      "end": {
                        "line": 11,
                        "column": 1,
                        "index": 289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 150
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 759
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "leastCommonMultiple(-9, -18)",
                  "uniqueTitle": "leastCommonMultiple(-9, -18)",
                  "contextId": 36,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 50,
                        "index": 206
                      },
                      "end": {
                        "line": 11,
                        "column": 1,
                        "index": 289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 150
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 759
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "leastCommonMultiple(-7, -9)",
                  "uniqueTitle": "leastCommonMultiple(-7, -9)",
                  "contextId": 40,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 50,
                        "index": 206
                      },
                      "end": {
                        "line": 11,
                        "column": 1,
                        "index": 289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 150
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 759
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "leastCommonMultiple(-7, 9)",
                  "uniqueTitle": "leastCommonMultiple(-7, 9)",
                  "contextId": 46,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 50,
                        "index": 206
                      },
                      "end": {
                        "line": 11,
                        "column": 1,
                        "index": 289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 150
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 759
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "liu-hui",
          "exercises": [
            {
              "id": "javascript-algorithms#119",
              "algo": "liu-hui_liuHui",
              "label": "liuHui should calculate π based on 12-gon",
              "name": "liuHui should calculate π based on 12-gon@liuHui.test.js",
              "pdgs": [
                {
                  "pdgTitle": "liuHui(1)",
                  "uniqueTitle": "liuHui(1)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/liu-hui/liuHui.js",
                    "loc": {
                      "start": {
                        "line": 46,
                        "column": 33,
                        "index": 1350
                      },
                      "end": {
                        "line": 56,
                        "column": 1,
                        "index": 1803
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/liu-hui/__test__/liuHui.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 49,
                        "index": 112
                      },
                      "end": {
                        "line": 6,
                        "column": 3,
                        "index": 150
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#120",
              "algo": "liu-hui_liuHui",
              "label": "liuHui should calculate π based on 24-gon",
              "name": "liuHui should calculate π based on 24-gon@liuHui.test.js",
              "pdgs": [
                {
                  "pdgTitle": "liuHui(2)",
                  "uniqueTitle": "liuHui(2)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/liu-hui/liuHui.js",
                    "loc": {
                      "start": {
                        "line": 46,
                        "column": 33,
                        "index": 1350
                      },
                      "end": {
                        "line": 56,
                        "column": 1,
                        "index": 1803
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/liu-hui/__test__/liuHui.test.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 49,
                        "index": 205
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 259
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#121",
              "algo": "liu-hui_liuHui",
              "label": "liuHui should calculate π based on 6144-gon",
              "name": "liuHui should calculate π based on 6144-gon@liuHui.test.js",
              "pdgs": [
                {
                  "pdgTitle": "liuHui(10)",
                  "uniqueTitle": "liuHui(10)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/liu-hui/liuHui.js",
                    "loc": {
                      "start": {
                        "line": 46,
                        "column": 33,
                        "index": 1350
                      },
                      "end": {
                        "line": 56,
                        "column": 1,
                        "index": 1803
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/liu-hui/__test__/liuHui.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 51,
                        "index": 316
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 372
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#122",
              "algo": "liu-hui_liuHui",
              "label": "liuHui should calculate π based on 201326592-gon",
              "name": "liuHui should calculate π based on 201326592-gon@liuHui.test.js",
              "pdgs": [
                {
                  "pdgTitle": "liuHui(25)",
                  "uniqueTitle": "liuHui(25)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/liu-hui/liuHui.js",
                    "loc": {
                      "start": {
                        "line": 46,
                        "column": 33,
                        "index": 1350
                      },
                      "end": {
                        "line": 56,
                        "column": 1,
                        "index": 1803
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/liu-hui/__test__/liuHui.test.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 56,
                        "index": 434
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 489
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "matrix",
          "exercises": [
            {
              "id": "javascript-algorithms#123",
              "algo": "matrix_Matrix",
              "label": "Matrix should throw when trying to add matrices of invalid shapes",
              "name": "Matrix should throw when trying to add matrices of invalid shapes@Matrix.test.js",
              "pdgs": [
                {
                  "pdgTitle": "dot([0], [1])",
                  "uniqueTitle": "dot([0], [1])",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 122,
                        "column": 29,
                        "index": 2817
                      },
                      "end": {
                        "line": 149,
                        "column": 1,
                        "index": 3513
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 17,
                        "index": 159
                      },
                      "end": {
                        "line": 5,
                        "column": 35,
                        "index": 177
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dot([[]], [1])",
                  "uniqueTitle": "dot([[]], [1])",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 122,
                        "column": 29,
                        "index": 2817
                      },
                      "end": {
                        "line": 149,
                        "column": 1,
                        "index": 3513
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 17,
                        "index": 236
                      },
                      "end": {
                        "line": 6,
                        "column": 37,
                        "index": 256
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dot([[]], [[]])",
                  "uniqueTitle": "dot([[]], [[]])",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 122,
                        "column": 29,
                        "index": 2817
                      },
                      "end": {
                        "line": 149,
                        "column": 1,
                        "index": 3513
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 17,
                        "index": 315
                      },
                      "end": {
                        "line": 7,
                        "column": 41,
                        "index": 339
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dot([[]], [[],[]])",
                  "uniqueTitle": "dot([[]], [[],[]])",
                  "contextId": 22,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 122,
                        "column": 29,
                        "index": 2817
                      },
                      "end": {
                        "line": 149,
                        "column": 1,
                        "index": 3513
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 10,
                        "column": 17,
                        "index": 416
                      },
                      "end": {
                        "line": 10,
                        "column": 44,
                        "index": 443
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#124",
              "algo": "matrix_Matrix",
              "label": "Matrix should calculate matrices dimensions",
              "name": "Matrix should calculate matrices dimensions@Matrix.test.js",
              "pdgs": [
                {
                  "pdgTitle": "shape([])",
                  "uniqueTitle": "shape([])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 28,
                        "index": 261
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 485
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 51,
                        "index": 589
                      },
                      "end": {
                        "line": 83,
                        "column": 3,
                        "index": 1799
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "shape([[]])",
                  "uniqueTitle": "shape([[]])",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 28,
                        "index": 261
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 485
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 51,
                        "index": 589
                      },
                      "end": {
                        "line": 83,
                        "column": 3,
                        "index": 1799
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "shape([[]])",
                  "uniqueTitle": "shape([[]])#2",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 28,
                        "index": 261
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 485
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 51,
                        "index": 589
                      },
                      "end": {
                        "line": 83,
                        "column": 3,
                        "index": 1799
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "shape([[]])",
                  "uniqueTitle": "shape([[]])#3",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 28,
                        "index": 261
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 485
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 51,
                        "index": 589
                      },
                      "end": {
                        "line": 83,
                        "column": 3,
                        "index": 1799
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "shape([[],[]])",
                  "uniqueTitle": "shape([[],[]])",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 28,
                        "index": 261
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 485
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 51,
                        "index": 589
                      },
                      "end": {
                        "line": 83,
                        "column": 3,
                        "index": 1799
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "shape([[],[]])",
                  "uniqueTitle": "shape([[],[]])#2",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 28,
                        "index": 261
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 485
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 51,
                        "index": 589
                      },
                      "end": {
                        "line": 83,
                        "column": 3,
                        "index": 1799
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "shape([[],[],[]])",
                  "uniqueTitle": "shape([[],[],[]])",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 28,
                        "index": 261
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 485
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 51,
                        "index": 589
                      },
                      "end": {
                        "line": 83,
                        "column": 3,
                        "index": 1799
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "shape([[],[],[]])",
                  "uniqueTitle": "shape([[],[],[]])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 28,
                        "index": 261
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 485
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 51,
                        "index": 589
                      },
                      "end": {
                        "line": 83,
                        "column": 3,
                        "index": 1799
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "shape([[],[],[]])",
                  "uniqueTitle": "shape([[],[],[]])#3",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 28,
                        "index": 261
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 485
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 51,
                        "index": 589
                      },
                      "end": {
                        "line": 83,
                        "column": 3,
                        "index": 1799
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "shape([[],[],[]])",
                  "uniqueTitle": "shape([[],[],[]])#4",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 28,
                        "index": 261
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 485
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 51,
                        "index": 589
                      },
                      "end": {
                        "line": 83,
                        "column": 3,
                        "index": 1799
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "shape([[],[],[]])",
                  "uniqueTitle": "shape([[],[],[]])#5",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 28,
                        "index": 261
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 485
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 51,
                        "index": 589
                      },
                      "end": {
                        "line": 83,
                        "column": 3,
                        "index": 1799
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#125",
              "algo": "matrix_Matrix",
              "label": "Matrix should generate the matrix of zeros",
              "name": "Matrix should generate the matrix of zeros@Matrix.test.js",
              "pdgs": [
                {
                  "pdgTitle": "zeros([1,0])",
                  "uniqueTitle": "zeros([1,0])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 112,
                        "column": 33,
                        "index": 2649
                      },
                      "end": {
                        "line": 114,
                        "column": 1,
                        "index": 2690
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 85,
                        "column": 50,
                        "index": 1855
                      },
                      "end": {
                        "line": 103,
                        "column": 3,
                        "index": 2249
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "zeros([1,1])",
                  "uniqueTitle": "zeros([1,1])",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 112,
                        "column": 33,
                        "index": 2649
                      },
                      "end": {
                        "line": 114,
                        "column": 1,
                        "index": 2690
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 85,
                        "column": 50,
                        "index": 1855
                      },
                      "end": {
                        "line": 103,
                        "column": 3,
                        "index": 2249
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "zeros([1,3])",
                  "uniqueTitle": "zeros([1,3])",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 112,
                        "column": 33,
                        "index": 2649
                      },
                      "end": {
                        "line": 114,
                        "column": 1,
                        "index": 2690
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 85,
                        "column": 50,
                        "index": 1855
                      },
                      "end": {
                        "line": 103,
                        "column": 3,
                        "index": 2249
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "zeros([3,3])",
                  "uniqueTitle": "zeros([3,3])",
                  "contextId": 25,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 112,
                        "column": 33,
                        "index": 2649
                      },
                      "end": {
                        "line": 114,
                        "column": 1,
                        "index": 2690
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 85,
                        "column": 50,
                        "index": 1855
                      },
                      "end": {
                        "line": 103,
                        "column": 3,
                        "index": 2249
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "zeros([3,3,1])",
                  "uniqueTitle": "zeros([3,3,1])",
                  "contextId": 49,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 112,
                        "column": 33,
                        "index": 2649
                      },
                      "end": {
                        "line": 114,
                        "column": 1,
                        "index": 2690
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 85,
                        "column": 50,
                        "index": 1855
                      },
                      "end": {
                        "line": 103,
                        "column": 3,
                        "index": 2249
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#126",
              "algo": "matrix_Matrix",
              "label": "Matrix should generate the matrix with custom values",
              "name": "Matrix should generate the matrix with custom values@Matrix.test.js",
              "pdgs": [
                {
                  "pdgTitle": "generate([1,0], ƒ (anonymous))",
                  "uniqueTitle": "generate([1,0], ƒ (anonymous))",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 82,
                        "column": 42,
                        "index": 1835
                      },
                      "end": {
                        "line": 104,
                        "column": 1,
                        "index": 2473
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 105,
                        "column": 60,
                        "index": 2315
                      },
                      "end": {
                        "line": 123,
                        "column": 3,
                        "index": 2769
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "generate([1,1], ƒ (anonymous))",
                  "uniqueTitle": "generate([1,1], ƒ (anonymous))",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 82,
                        "column": 42,
                        "index": 1835
                      },
                      "end": {
                        "line": 104,
                        "column": 1,
                        "index": 2473
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 105,
                        "column": 60,
                        "index": 2315
                      },
                      "end": {
                        "line": 123,
                        "column": 3,
                        "index": 2769
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "generate([1,3], ƒ (anonymous))",
                  "uniqueTitle": "generate([1,3], ƒ (anonymous))",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 82,
                        "column": 42,
                        "index": 1835
                      },
                      "end": {
                        "line": 104,
                        "column": 1,
                        "index": 2473
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 105,
                        "column": 60,
                        "index": 2315
                      },
                      "end": {
                        "line": 123,
                        "column": 3,
                        "index": 2769
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "generate([3,3], ƒ (anonymous))",
                  "uniqueTitle": "generate([3,3], ƒ (anonymous))",
                  "contextId": 22,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 82,
                        "column": 42,
                        "index": 1835
                      },
                      "end": {
                        "line": 104,
                        "column": 1,
                        "index": 2473
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 105,
                        "column": 60,
                        "index": 2315
                      },
                      "end": {
                        "line": 123,
                        "column": 3,
                        "index": 2769
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "generate([3,3,1], ƒ (anonymous))",
                  "uniqueTitle": "generate([3,3,1], ƒ (anonymous))",
                  "contextId": 45,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 82,
                        "column": 42,
                        "index": 1835
                      },
                      "end": {
                        "line": 104,
                        "column": 1,
                        "index": 2473
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 105,
                        "column": 60,
                        "index": 2315
                      },
                      "end": {
                        "line": 123,
                        "column": 3,
                        "index": 2769
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#127",
              "algo": "matrix_Matrix",
              "label": "Matrix should generate a custom matrix based on specific cell indices",
              "name": "Matrix should generate a custom matrix based on specific cell indices@Matrix.test.js",
              "pdgs": [
                {
                  "pdgTitle": "generate([3,3], ƒ mockConstructor)",
                  "uniqueTitle": "generate([3,3], ƒ mockConstructor)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 82,
                        "column": 42,
                        "index": 1835
                      },
                      "end": {
                        "line": 104,
                        "column": 1,
                        "index": 2473
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 125,
                        "column": 77,
                        "index": 2852
                      },
                      "end": {
                        "line": 146,
                        "column": 3,
                        "index": 3740
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#128",
              "algo": "matrix_Matrix",
              "label": "Matrix should multiply two matrices",
              "name": "Matrix should multiply two matrices@Matrix.test.js",
              "pdgs": [
                {
                  "pdgTitle": "dot([[],[]], [[],[]])",
                  "uniqueTitle": "dot([[],[]], [[],[]])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 122,
                        "column": 29,
                        "index": 2817
                      },
                      "end": {
                        "line": 149,
                        "column": 1,
                        "index": 3513
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 148,
                        "column": 43,
                        "index": 3789
                      },
                      "end": {
                        "line": 211,
                        "column": 3,
                        "index": 4748
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "shape([[],[]])",
                  "uniqueTitle": "shape([[],[]])#3",
                  "contextId": 27,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 28,
                        "index": 261
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 485
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 148,
                        "column": 43,
                        "index": 3789
                      },
                      "end": {
                        "line": 211,
                        "column": 3,
                        "index": 4748
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dot([[],[]], [[],[]])",
                  "uniqueTitle": "dot([[],[]], [[],[]])#2",
                  "contextId": 28,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 122,
                        "column": 29,
                        "index": 2817
                      },
                      "end": {
                        "line": 149,
                        "column": 1,
                        "index": 3513
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 148,
                        "column": 43,
                        "index": 3789
                      },
                      "end": {
                        "line": 211,
                        "column": 3,
                        "index": 4748
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "shape([[],[]])",
                  "uniqueTitle": "shape([[],[]])#4",
                  "contextId": 46,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 28,
                        "index": 261
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 485
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 148,
                        "column": 43,
                        "index": 3789
                      },
                      "end": {
                        "line": 211,
                        "column": 3,
                        "index": 4748
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dot([[],[]], [[],[],[]])",
                  "uniqueTitle": "dot([[],[]], [[],[],[]])",
                  "contextId": 47,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 122,
                        "column": 29,
                        "index": 2817
                      },
                      "end": {
                        "line": 149,
                        "column": 1,
                        "index": 3513
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 148,
                        "column": 43,
                        "index": 3789
                      },
                      "end": {
                        "line": 211,
                        "column": 3,
                        "index": 4748
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "shape([[],[]])",
                  "uniqueTitle": "shape([[],[]])#5",
                  "contextId": 69,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 28,
                        "index": 261
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 485
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 148,
                        "column": 43,
                        "index": 3789
                      },
                      "end": {
                        "line": 211,
                        "column": 3,
                        "index": 4748
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dot([[]], [[],[],[]])",
                  "uniqueTitle": "dot([[]], [[],[],[]])",
                  "contextId": 70,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 122,
                        "column": 29,
                        "index": 2817
                      },
                      "end": {
                        "line": 149,
                        "column": 1,
                        "index": 3513
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 148,
                        "column": 43,
                        "index": 3789
                      },
                      "end": {
                        "line": 211,
                        "column": 3,
                        "index": 4748
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "shape([[]])",
                  "uniqueTitle": "shape([[]])#4",
                  "contextId": 91,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 28,
                        "index": 261
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 485
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 148,
                        "column": 43,
                        "index": 3789
                      },
                      "end": {
                        "line": 211,
                        "column": 3,
                        "index": 4748
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#129",
              "algo": "matrix_Matrix",
              "label": "Matrix should transpose matrices",
              "name": "Matrix should transpose matrices@Matrix.test.js",
              "pdgs": [
                {
                  "pdgTitle": "t([[]])",
                  "uniqueTitle": "t([[]])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 158,
                        "column": 24,
                        "index": 3645
                      },
                      "end": {
                        "line": 168,
                        "column": 1,
                        "index": 3928
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 213,
                        "column": 40,
                        "index": 4794
                      },
                      "end": {
                        "line": 240,
                        "column": 3,
                        "index": 5253
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "t([[],[],[]])",
                  "uniqueTitle": "t([[],[],[]])",
                  "contextId": 22,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 158,
                        "column": 24,
                        "index": 3645
                      },
                      "end": {
                        "line": 168,
                        "column": 1,
                        "index": 3928
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 213,
                        "column": 40,
                        "index": 4794
                      },
                      "end": {
                        "line": 240,
                        "column": 3,
                        "index": 5253
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "t([[],[]])",
                  "uniqueTitle": "t([[],[]])",
                  "contextId": 37,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 158,
                        "column": 24,
                        "index": 3645
                      },
                      "end": {
                        "line": 168,
                        "column": 1,
                        "index": 3928
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 213,
                        "column": 40,
                        "index": 4794
                      },
                      "end": {
                        "line": 240,
                        "column": 3,
                        "index": 5253
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "t([[],[],[]])",
                  "uniqueTitle": "t([[],[],[]])#2",
                  "contextId": 60,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 158,
                        "column": 24,
                        "index": 3645
                      },
                      "end": {
                        "line": 168,
                        "column": 1,
                        "index": 3928
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 213,
                        "column": 40,
                        "index": 4794
                      },
                      "end": {
                        "line": 240,
                        "column": 3,
                        "index": 5253
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#130",
              "algo": "matrix_Matrix",
              "label": "Matrix should throw when trying to transpose non 2D matrix",
              "name": "Matrix should throw when trying to transpose non 2D matrix@Matrix.test.js",
              "pdgs": [
                {
                  "pdgTitle": "t([[]])",
                  "uniqueTitle": "t([[]])#2",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 158,
                        "column": 24,
                        "index": 3645
                      },
                      "end": {
                        "line": 168,
                        "column": 1,
                        "index": 3928
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 243,
                        "column": 17,
                        "index": 5345
                      },
                      "end": {
                        "line": 245,
                        "column": 5,
                        "index": 5377
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#131",
              "algo": "matrix_Matrix",
              "label": "Matrix should add two matrices",
              "name": "Matrix should add two matrices@Matrix.test.js",
              "pdgs": [
                {
                  "pdgTitle": "add([[]], [[]])",
                  "uniqueTitle": "add([[]], [[]])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 245,
                        "column": 29,
                        "index": 6282
                      },
                      "end": {
                        "line": 259,
                        "column": 1,
                        "index": 6667
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 248,
                        "column": 38,
                        "index": 5470
                      },
                      "end": {
                        "line": 294,
                        "column": 3,
                        "index": 6374
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "add([[]], [[]])",
                  "uniqueTitle": "add([[]], [[]])#2",
                  "contextId": 37,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 245,
                        "column": 29,
                        "index": 6282
                      },
                      "end": {
                        "line": 259,
                        "column": 1,
                        "index": 6667
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 248,
                        "column": 38,
                        "index": 5470
                      },
                      "end": {
                        "line": 294,
                        "column": 3,
                        "index": 6374
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "add([[],[],[]], [[],[],[]])",
                  "uniqueTitle": "add([[],[],[]], [[],[],[]])",
                  "contextId": 91,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 245,
                        "column": 29,
                        "index": 6282
                      },
                      "end": {
                        "line": 259,
                        "column": 1,
                        "index": 6667
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 248,
                        "column": 38,
                        "index": 5470
                      },
                      "end": {
                        "line": 294,
                        "column": 3,
                        "index": 6374
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "add([[],[],[]], [[],[],[]])",
                  "uniqueTitle": "add([[],[],[]], [[],[],[]])#2",
                  "contextId": 155,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 245,
                        "column": 29,
                        "index": 6282
                      },
                      "end": {
                        "line": 259,
                        "column": 1,
                        "index": 6667
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 248,
                        "column": 38,
                        "index": 5470
                      },
                      "end": {
                        "line": 294,
                        "column": 3,
                        "index": 6374
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "add([[],[],[]], [[],[],[]])",
                  "uniqueTitle": "add([[],[],[]], [[],[],[]])#3",
                  "contextId": 285,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 245,
                        "column": 29,
                        "index": 6282
                      },
                      "end": {
                        "line": 259,
                        "column": 1,
                        "index": 6667
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 248,
                        "column": 38,
                        "index": 5470
                      },
                      "end": {
                        "line": 294,
                        "column": 3,
                        "index": 6374
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#132",
              "algo": "matrix_Matrix",
              "label": "Matrix should throw when trying to add matrices of different shape",
              "name": "Matrix should throw when trying to add matrices of different shape@Matrix.test.js",
              "pdgs": [
                {
                  "pdgTitle": "add([[]], [[]])",
                  "uniqueTitle": "add([[]], [[]])#3",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 245,
                        "column": 29,
                        "index": 6282
                      },
                      "end": {
                        "line": 259,
                        "column": 1,
                        "index": 6667
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 297,
                        "column": 17,
                        "index": 6474
                      },
                      "end": {
                        "line": 297,
                        "column": 41,
                        "index": 6498
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "add([[]], [[]])",
                  "uniqueTitle": "add([[]], [[]])#4",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 245,
                        "column": 29,
                        "index": 6282
                      },
                      "end": {
                        "line": 259,
                        "column": 1,
                        "index": 6667
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 301,
                        "column": 17,
                        "index": 6586
                      },
                      "end": {
                        "line": 301,
                        "column": 42,
                        "index": 6611
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#133",
              "algo": "matrix_Matrix",
              "label": "Matrix should do element wise multiplication two matrices",
              "name": "Matrix should do element wise multiplication two matrices@Matrix.test.js",
              "pdgs": [
                {
                  "pdgTitle": "mul([[]], [[]])",
                  "uniqueTitle": "mul([[]], [[]])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 268,
                        "column": 29,
                        "index": 6822
                      },
                      "end": {
                        "line": 282,
                        "column": 1,
                        "index": 7207
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 306,
                        "column": 65,
                        "index": 6750
                      },
                      "end": {
                        "line": 350,
                        "column": 3,
                        "index": 7467
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "mul([[]], [[]])",
                  "uniqueTitle": "mul([[]], [[]])#2",
                  "contextId": 37,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 268,
                        "column": 29,
                        "index": 6822
                      },
                      "end": {
                        "line": 282,
                        "column": 1,
                        "index": 7207
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 306,
                        "column": 65,
                        "index": 6750
                      },
                      "end": {
                        "line": 350,
                        "column": 3,
                        "index": 7467
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "mul([[],[],[]], [[],[],[]])",
                  "uniqueTitle": "mul([[],[],[]], [[],[],[]])",
                  "contextId": 91,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 268,
                        "column": 29,
                        "index": 6822
                      },
                      "end": {
                        "line": 282,
                        "column": 1,
                        "index": 7207
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 306,
                        "column": 65,
                        "index": 6750
                      },
                      "end": {
                        "line": 350,
                        "column": 3,
                        "index": 7467
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "mul([[],[]], [[],[]])",
                  "uniqueTitle": "mul([[],[]], [[],[]])",
                  "contextId": 155,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 268,
                        "column": 29,
                        "index": 6822
                      },
                      "end": {
                        "line": 282,
                        "column": 1,
                        "index": 7207
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 306,
                        "column": 65,
                        "index": 6750
                      },
                      "end": {
                        "line": 350,
                        "column": 3,
                        "index": 7467
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "mul([[],[]], [[],[]])",
                  "uniqueTitle": "mul([[],[]], [[],[]])#2",
                  "contextId": 225,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 268,
                        "column": 29,
                        "index": 6822
                      },
                      "end": {
                        "line": 282,
                        "column": 1,
                        "index": 7207
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 306,
                        "column": 65,
                        "index": 6750
                      },
                      "end": {
                        "line": 350,
                        "column": 3,
                        "index": 7467
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#134",
              "algo": "matrix_Matrix",
              "label": "Matrix should throw when trying to multiply matrices element-wise of different shape",
              "name": "Matrix should throw when trying to multiply matrices element-wise of different shape@Matrix.test.js",
              "pdgs": [
                {
                  "pdgTitle": "mul([[]], [[]])",
                  "uniqueTitle": "mul([[]], [[]])#3",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 268,
                        "column": 29,
                        "index": 6822
                      },
                      "end": {
                        "line": 282,
                        "column": 1,
                        "index": 7207
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 353,
                        "column": 17,
                        "index": 7585
                      },
                      "end": {
                        "line": 353,
                        "column": 41,
                        "index": 7609
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "mul([[]], [[]])",
                  "uniqueTitle": "mul([[]], [[]])#4",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 268,
                        "column": 29,
                        "index": 6822
                      },
                      "end": {
                        "line": 282,
                        "column": 1,
                        "index": 7207
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 357,
                        "column": 17,
                        "index": 7697
                      },
                      "end": {
                        "line": 357,
                        "column": 42,
                        "index": 7722
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#135",
              "algo": "matrix_Matrix",
              "label": "Matrix should do element wise subtraction two matrices",
              "name": "Matrix should do element wise subtraction two matrices@Matrix.test.js",
              "pdgs": [
                {
                  "pdgTitle": "sub([[]], [[]])",
                  "uniqueTitle": "sub([[]], [[]])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 291,
                        "column": 29,
                        "index": 7360
                      },
                      "end": {
                        "line": 305,
                        "column": 1,
                        "index": 7745
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 362,
                        "column": 62,
                        "index": 7858
                      },
                      "end": {
                        "line": 404,
                        "column": 3,
                        "index": 8577
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "sub([[]], [[]])",
                  "uniqueTitle": "sub([[]], [[]])#2",
                  "contextId": 37,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 291,
                        "column": 29,
                        "index": 7360
                      },
                      "end": {
                        "line": 305,
                        "column": 1,
                        "index": 7745
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 362,
                        "column": 62,
                        "index": 7858
                      },
                      "end": {
                        "line": 404,
                        "column": 3,
                        "index": 8577
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "sub([[]], [[]])",
                  "uniqueTitle": "sub([[]], [[]])#3",
                  "contextId": 91,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 291,
                        "column": 29,
                        "index": 7360
                      },
                      "end": {
                        "line": 305,
                        "column": 1,
                        "index": 7745
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 362,
                        "column": 62,
                        "index": 7858
                      },
                      "end": {
                        "line": 404,
                        "column": 3,
                        "index": 8577
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "sub([[],[]], [[],[]])",
                  "uniqueTitle": "sub([[],[]], [[],[]])",
                  "contextId": 160,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 291,
                        "column": 29,
                        "index": 7360
                      },
                      "end": {
                        "line": 305,
                        "column": 1,
                        "index": 7745
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 362,
                        "column": 62,
                        "index": 7858
                      },
                      "end": {
                        "line": 404,
                        "column": 3,
                        "index": 8577
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "sub([[],[]], [[],[]])",
                  "uniqueTitle": "sub([[],[]], [[],[]])#2",
                  "contextId": 230,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 291,
                        "column": 29,
                        "index": 7360
                      },
                      "end": {
                        "line": 305,
                        "column": 1,
                        "index": 7745
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 362,
                        "column": 62,
                        "index": 7858
                      },
                      "end": {
                        "line": 404,
                        "column": 3,
                        "index": 8577
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#136",
              "algo": "matrix_Matrix",
              "label": "Matrix should throw when trying to subtract matrices element-wise of different shape",
              "name": "Matrix should throw when trying to subtract matrices element-wise of different shape@Matrix.test.js",
              "pdgs": [
                {
                  "pdgTitle": "sub([[]], [[]])",
                  "uniqueTitle": "sub([[]], [[]])#4",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 291,
                        "column": 29,
                        "index": 7360
                      },
                      "end": {
                        "line": 305,
                        "column": 1,
                        "index": 7745
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 407,
                        "column": 17,
                        "index": 8695
                      },
                      "end": {
                        "line": 407,
                        "column": 41,
                        "index": 8719
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "sub([[]], [[]])",
                  "uniqueTitle": "sub([[]], [[]])#5",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/matrix/Matrix.js",
                    "loc": {
                      "start": {
                        "line": 291,
                        "column": 29,
                        "index": 7360
                      },
                      "end": {
                        "line": 305,
                        "column": 1,
                        "index": 7745
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
                    "loc": {
                      "start": {
                        "line": 411,
                        "column": 17,
                        "index": 8807
                      },
                      "end": {
                        "line": 411,
                        "column": 42,
                        "index": 8832
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "pascal-triangle",
          "exercises": [
            {
              "id": "javascript-algorithms#137",
              "algo": "pascal-triangle_pascalTriangleRecursive",
              "label": "pascalTriangleRecursive should calculate Pascal Triangle coefficients for specific line number",
              "name": "pascalTriangleRecursive should calculate Pascal Triangle coefficients for specific line number@pascalTriangleRecursive.test.js",
              "pdgs": [
                {
                  "pdgTitle": "pascalTriangleRecursive(0)",
                  "uniqueTitle": "pascalTriangleRecursive(0)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/pascalTriangleRecursive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 60,
                        "index": 138
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1031
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangleRecursive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 199
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 730
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "pascalTriangleRecursive(1)",
                  "uniqueTitle": "pascalTriangleRecursive(1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/pascalTriangleRecursive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 60,
                        "index": 138
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1031
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangleRecursive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 199
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 730
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "pascalTriangleRecursive(2)",
                  "uniqueTitle": "pascalTriangleRecursive(2)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/pascalTriangleRecursive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 60,
                        "index": 138
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1031
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangleRecursive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 199
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 730
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "pascalTriangleRecursive(3)",
                  "uniqueTitle": "pascalTriangleRecursive(3)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/pascalTriangleRecursive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 60,
                        "index": 138
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1031
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangleRecursive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 199
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 730
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "pascalTriangleRecursive(4)",
                  "uniqueTitle": "pascalTriangleRecursive(4)",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/pascalTriangleRecursive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 60,
                        "index": 138
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1031
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangleRecursive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 199
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 730
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "pascalTriangleRecursive(5)",
                  "uniqueTitle": "pascalTriangleRecursive(5)",
                  "contextId": 20,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/pascalTriangleRecursive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 60,
                        "index": 138
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1031
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangleRecursive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 199
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 730
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "pascalTriangleRecursive(6)",
                  "uniqueTitle": "pascalTriangleRecursive(6)",
                  "contextId": 26,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/pascalTriangleRecursive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 60,
                        "index": 138
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1031
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangleRecursive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 199
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 730
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "pascalTriangleRecursive(7)",
                  "uniqueTitle": "pascalTriangleRecursive(7)",
                  "contextId": 33,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/pascalTriangleRecursive.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 60,
                        "index": 138
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1031
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangleRecursive.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 199
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 730
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#138",
              "algo": "pascal-triangle_pascalTriangle",
              "label": "pascalTriangle should calculate Pascal Triangle coefficients for specific line number",
              "name": "pascalTriangle should calculate Pascal Triangle coefficients for specific line number@pascalTriangle.test.js",
              "pdgs": [
                {
                  "pdgTitle": "pascalTriangle(0)",
                  "uniqueTitle": "pascalTriangle(0)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/pascalTriangle.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 129
                      },
                      "end": {
                        "line": 17,
                        "column": 1,
                        "index": 466
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangle.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 172
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 631
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "pascalTriangle(1)",
                  "uniqueTitle": "pascalTriangle(1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/pascalTriangle.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 129
                      },
                      "end": {
                        "line": 17,
                        "column": 1,
                        "index": 466
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangle.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 172
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 631
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "pascalTriangle(2)",
                  "uniqueTitle": "pascalTriangle(2)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/pascalTriangle.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 129
                      },
                      "end": {
                        "line": 17,
                        "column": 1,
                        "index": 466
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangle.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 172
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 631
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "pascalTriangle(3)",
                  "uniqueTitle": "pascalTriangle(3)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/pascalTriangle.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 129
                      },
                      "end": {
                        "line": 17,
                        "column": 1,
                        "index": 466
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangle.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 172
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 631
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "pascalTriangle(4)",
                  "uniqueTitle": "pascalTriangle(4)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/pascalTriangle.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 129
                      },
                      "end": {
                        "line": 17,
                        "column": 1,
                        "index": 466
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangle.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 172
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 631
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "pascalTriangle(5)",
                  "uniqueTitle": "pascalTriangle(5)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/pascalTriangle.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 129
                      },
                      "end": {
                        "line": 17,
                        "column": 1,
                        "index": 466
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangle.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 172
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 631
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "pascalTriangle(6)",
                  "uniqueTitle": "pascalTriangle(6)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/pascalTriangle.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 129
                      },
                      "end": {
                        "line": 17,
                        "column": 1,
                        "index": 466
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangle.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 172
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 631
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "pascalTriangle(7)",
                  "uniqueTitle": "pascalTriangle(7)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/pascalTriangle.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 129
                      },
                      "end": {
                        "line": 17,
                        "column": 1,
                        "index": 466
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangle.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 172
                      },
                      "end": {
                        "line": 13,
                        "column": 3,
                        "index": 631
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "primality-test",
          "exercises": [
            {
              "id": "javascript-algorithms#139",
              "algo": "primality-test_trialDivision",
              "label": "trialDivision should detect prime numbers",
              "name": "trialDivision should detect prime numbers@trialDivision.test.js",
              "pdgs": [
                {
                  "pdgTitle": "trialDivision(1)",
                  "uniqueTitle": "trialDivision(1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(2)",
                  "uniqueTitle": "trialDivision(2)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(3)",
                  "uniqueTitle": "trialDivision(3)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(5)",
                  "uniqueTitle": "trialDivision(5)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(11)",
                  "uniqueTitle": "trialDivision(11)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(191)",
                  "uniqueTitle": "trialDivision(191)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(191)",
                  "uniqueTitle": "trialDivision(191)#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(199)",
                  "uniqueTitle": "trialDivision(199)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(-1)",
                  "uniqueTitle": "trialDivision(-1)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(0)",
                  "uniqueTitle": "trialDivision(0)",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(4)",
                  "uniqueTitle": "trialDivision(4)",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(6)",
                  "uniqueTitle": "trialDivision(6)",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(12)",
                  "uniqueTitle": "trialDivision(12)",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(14)",
                  "uniqueTitle": "trialDivision(14)",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(25)",
                  "uniqueTitle": "trialDivision(25)",
                  "contextId": 20,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(192)",
                  "uniqueTitle": "trialDivision(192)",
                  "contextId": 21,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(200)",
                  "uniqueTitle": "trialDivision(200)",
                  "contextId": 22,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(400)",
                  "uniqueTitle": "trialDivision(400)",
                  "contextId": 23,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(0.5)",
                  "uniqueTitle": "trialDivision(0.5)",
                  "contextId": 24,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(1.3)",
                  "uniqueTitle": "trialDivision(1.3)",
                  "contextId": 25,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "trialDivision(10.5)",
                  "uniqueTitle": "trialDivision(10.5)",
                  "contextId": 26,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/primality-test/trialDivision.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 46,
                        "index": 105
                      },
                      "end": {
                        "line": 35,
                        "column": 1,
                        "index": 836
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 37,
                        "index": 142
                      },
                      "end": {
                        "line": 31,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "prime-factors",
          "exercises": [
            {
              "id": "javascript-algorithms#140",
              "algo": "prime-factors_primeFactors",
              "label": "primeFactors should find prime factors",
              "name": "primeFactors should find prime factors@primeFactors.test.js",
              "pdgs": [
                {
                  "pdgTitle": "primeFactors(1)",
                  "uniqueTitle": "primeFactors(1)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 40,
                        "index": 491
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1543
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(2)",
                  "uniqueTitle": "primeFactors(2)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 40,
                        "index": 491
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1543
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(3)",
                  "uniqueTitle": "primeFactors(3)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 40,
                        "index": 491
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1543
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(4)",
                  "uniqueTitle": "primeFactors(4)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 40,
                        "index": 491
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1543
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(14)",
                  "uniqueTitle": "primeFactors(14)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 40,
                        "index": 491
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1543
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(40)",
                  "uniqueTitle": "primeFactors(40)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 40,
                        "index": 491
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1543
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(54)",
                  "uniqueTitle": "primeFactors(54)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 40,
                        "index": 491
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1543
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(100)",
                  "uniqueTitle": "primeFactors(100)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 40,
                        "index": 491
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1543
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(156)",
                  "uniqueTitle": "primeFactors(156)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 40,
                        "index": 491
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1543
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(273)",
                  "uniqueTitle": "primeFactors(273)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 40,
                        "index": 491
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1543
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(300)",
                  "uniqueTitle": "primeFactors(300)",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 40,
                        "index": 491
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1543
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(980)",
                  "uniqueTitle": "primeFactors(980)",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 40,
                        "index": 491
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1543
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(1000)",
                  "uniqueTitle": "primeFactors(1000)",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 40,
                        "index": 491
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1543
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(52734)",
                  "uniqueTitle": "primeFactors(52734)",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 40,
                        "index": 491
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1543
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(343434)",
                  "uniqueTitle": "primeFactors(343434)",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 40,
                        "index": 491
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1543
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(456745)",
                  "uniqueTitle": "primeFactors(456745)",
                  "contextId": 20,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 40,
                        "index": 491
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1543
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(510510)",
                  "uniqueTitle": "primeFactors(510510)",
                  "contextId": 21,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 40,
                        "index": 491
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1543
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(8735463)",
                  "uniqueTitle": "primeFactors(8735463)",
                  "contextId": 22,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 40,
                        "index": 491
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1543
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(873452453)",
                  "uniqueTitle": "primeFactors(873452453)",
                  "contextId": 23,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 40,
                        "index": 491
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1543
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#141",
              "algo": "prime-factors_primeFactors",
              "label": "primeFactors should give approximate prime factors count using Hardy-Ramanujan theorem",
              "name": "primeFactors should give approximate prime factors count using Hardy-Ramanujan theorem@primeFactors.test.js",
              "pdgs": [
                {
                  "pdgTitle": "hardyRamanujan(2)",
                  "uniqueTitle": "hardyRamanujan(2)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 88,
                        "index": 1637
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 2277
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(4)",
                  "uniqueTitle": "hardyRamanujan(4)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 88,
                        "index": 1637
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 2277
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(40)",
                  "uniqueTitle": "hardyRamanujan(40)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 88,
                        "index": 1637
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 2277
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(156)",
                  "uniqueTitle": "hardyRamanujan(156)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 88,
                        "index": 1637
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 2277
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(980)",
                  "uniqueTitle": "hardyRamanujan(980)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 88,
                        "index": 1637
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 2277
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(52734)",
                  "uniqueTitle": "hardyRamanujan(52734)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 88,
                        "index": 1637
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 2277
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(343434)",
                  "uniqueTitle": "hardyRamanujan(343434)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 88,
                        "index": 1637
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 2277
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(456745)",
                  "uniqueTitle": "hardyRamanujan(456745)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 88,
                        "index": 1637
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 2277
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(510510)",
                  "uniqueTitle": "hardyRamanujan(510510)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 88,
                        "index": 1637
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 2277
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(8735463)",
                  "uniqueTitle": "hardyRamanujan(8735463)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 88,
                        "index": 1637
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 2277
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(873452453)",
                  "uniqueTitle": "hardyRamanujan(873452453)",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 88,
                        "index": 1637
                      },
                      "end": {
                        "line": 48,
                        "column": 3,
                        "index": 2277
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#142",
              "algo": "prime-factors_primeFactors",
              "label": "primeFactors should give correct deviation between exact and approx counts",
              "name": "primeFactors should give correct deviation between exact and approx counts@primeFactors.test.js",
              "pdgs": [
                {
                  "pdgTitle": "primeFactors(2)",
                  "uniqueTitle": "primeFactors(2)#2",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(2)",
                  "uniqueTitle": "hardyRamanujan(2)#2",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(4)",
                  "uniqueTitle": "primeFactors(4)#2",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(2)",
                  "uniqueTitle": "hardyRamanujan(2)#3",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(40)",
                  "uniqueTitle": "primeFactors(40)#2",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(2)",
                  "uniqueTitle": "hardyRamanujan(2)#4",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(156)",
                  "uniqueTitle": "primeFactors(156)#2",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(2)",
                  "uniqueTitle": "hardyRamanujan(2)#5",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(980)",
                  "uniqueTitle": "primeFactors(980)#2",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(2)",
                  "uniqueTitle": "hardyRamanujan(2)#6",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(52734)",
                  "uniqueTitle": "primeFactors(52734)#2",
                  "contextId": 20,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(52734)",
                  "uniqueTitle": "hardyRamanujan(52734)#2",
                  "contextId": 21,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(343434)",
                  "uniqueTitle": "primeFactors(343434)#2",
                  "contextId": 23,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(343434)",
                  "uniqueTitle": "hardyRamanujan(343434)#2",
                  "contextId": 24,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(456745)",
                  "uniqueTitle": "primeFactors(456745)#2",
                  "contextId": 26,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(456745)",
                  "uniqueTitle": "hardyRamanujan(456745)#2",
                  "contextId": 27,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(510510)",
                  "uniqueTitle": "primeFactors(510510)#2",
                  "contextId": 29,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(510510)",
                  "uniqueTitle": "hardyRamanujan(510510)#2",
                  "contextId": 30,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(8735463)",
                  "uniqueTitle": "primeFactors(8735463)#2",
                  "contextId": 32,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(8735463)",
                  "uniqueTitle": "hardyRamanujan(8735463)#2",
                  "contextId": 33,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "primeFactors(873452453)",
                  "uniqueTitle": "primeFactors(873452453)#2",
                  "contextId": 35,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 32,
                        "index": 214
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 933
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hardyRamanujan(873452453)",
                  "uniqueTitle": "hardyRamanujan(873452453)#2",
                  "contextId": 36,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 34,
                        "index": 1126
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1163
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 76,
                        "index": 2359
                      },
                      "end": {
                        "line": 97,
                        "column": 3,
                        "index": 3728
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "radian",
          "exercises": [
            {
              "id": "javascript-algorithms#143",
              "algo": "radian_radianToDegree",
              "label": "radianToDegree should convert radian to degree",
              "name": "radianToDegree should convert radian to degree@radianToDegree.test.js",
              "pdgs": [
                {
                  "pdgTitle": "radianToDegree(0)",
                  "uniqueTitle": "radianToDegree(0)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/radian/radianToDegree.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 47,
                        "index": 105
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 145
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/radian/__test__/radianToDegree.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 46,
                        "index": 133
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 439
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "radianToDegree(0.7853981633974483)",
                  "uniqueTitle": "radianToDegree(0.7853981633974483)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/radian/radianToDegree.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 47,
                        "index": 105
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 145
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/radian/__test__/radianToDegree.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 46,
                        "index": 133
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 439
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "radianToDegree(1.5707963267948966)",
                  "uniqueTitle": "radianToDegree(1.5707963267948966)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/radian/radianToDegree.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 47,
                        "index": 105
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 145
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/radian/__test__/radianToDegree.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 46,
                        "index": 133
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 439
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "radianToDegree(3.141592653589793)",
                  "uniqueTitle": "radianToDegree(3.141592653589793)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/radian/radianToDegree.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 47,
                        "index": 105
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 145
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/radian/__test__/radianToDegree.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 46,
                        "index": 133
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 439
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "radianToDegree(4.71238898038469)",
                  "uniqueTitle": "radianToDegree(4.71238898038469)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/radian/radianToDegree.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 47,
                        "index": 105
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 145
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/radian/__test__/radianToDegree.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 46,
                        "index": 133
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 439
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "radianToDegree(6.283185307179586)",
                  "uniqueTitle": "radianToDegree(6.283185307179586)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/radian/radianToDegree.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 47,
                        "index": 105
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 145
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/radian/__test__/radianToDegree.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 46,
                        "index": 133
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 439
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#144",
              "algo": "radian_degreeToRadian",
              "label": "degreeToRadian should convert degree to radian",
              "name": "degreeToRadian should convert degree to radian@degreeToRadian.test.js",
              "pdgs": [
                {
                  "pdgTitle": "degreeToRadian(0)",
                  "uniqueTitle": "degreeToRadian(0)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/radian/degreeToRadian.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 47,
                        "index": 105
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 145
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/radian/__test__/degreeToRadian.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 46,
                        "index": 133
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 439
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "degreeToRadian(45)",
                  "uniqueTitle": "degreeToRadian(45)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/radian/degreeToRadian.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 47,
                        "index": 105
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 145
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/radian/__test__/degreeToRadian.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 46,
                        "index": 133
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 439
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "degreeToRadian(90)",
                  "uniqueTitle": "degreeToRadian(90)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/radian/degreeToRadian.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 47,
                        "index": 105
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 145
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/radian/__test__/degreeToRadian.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 46,
                        "index": 133
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 439
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "degreeToRadian(180)",
                  "uniqueTitle": "degreeToRadian(180)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/radian/degreeToRadian.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 47,
                        "index": 105
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 145
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/radian/__test__/degreeToRadian.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 46,
                        "index": 133
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 439
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "degreeToRadian(270)",
                  "uniqueTitle": "degreeToRadian(270)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/radian/degreeToRadian.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 47,
                        "index": 105
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 145
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/radian/__test__/degreeToRadian.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 46,
                        "index": 133
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 439
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "degreeToRadian(360)",
                  "uniqueTitle": "degreeToRadian(360)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/radian/degreeToRadian.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 47,
                        "index": 105
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "index": 145
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/radian/__test__/degreeToRadian.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 46,
                        "index": 133
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 439
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "sieve-of-eratosthenes",
          "exercises": [
            {
              "id": "javascript-algorithms#145",
              "algo": "sieve-of-eratosthenes_sieveOfEratosthenes",
              "label": "sieveOfEratosthenes should find all primes less than or equal to n",
              "name": "sieveOfEratosthenes should find all primes less than or equal to n@sieveOfEratosthenes.test.js",
              "pdgs": [
                {
                  "pdgTitle": "sieveOfEratosthenes(5)",
                  "uniqueTitle": "sieveOfEratosthenes(5)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/sieve-of-eratosthenes/sieveOfEratosthenes.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 55,
                        "index": 118
                      },
                      "end": {
                        "line": 36,
                        "column": 1,
                        "index": 1020
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/sieve-of-eratosthenes/__test__/sieveOfEratosthenes.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 61,
                        "index": 163
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 452
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "sieveOfEratosthenes(10)",
                  "uniqueTitle": "sieveOfEratosthenes(10)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/sieve-of-eratosthenes/sieveOfEratosthenes.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 55,
                        "index": 118
                      },
                      "end": {
                        "line": 36,
                        "column": 1,
                        "index": 1020
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/sieve-of-eratosthenes/__test__/sieveOfEratosthenes.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 61,
                        "index": 163
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 452
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "sieveOfEratosthenes(100)",
                  "uniqueTitle": "sieveOfEratosthenes(100)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/sieve-of-eratosthenes/sieveOfEratosthenes.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 55,
                        "index": 118
                      },
                      "end": {
                        "line": 36,
                        "column": 1,
                        "index": 1020
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/sieve-of-eratosthenes/__test__/sieveOfEratosthenes.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 61,
                        "index": 163
                      },
                      "end": {
                        "line": 11,
                        "column": 3,
                        "index": 452
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "square-root",
          "exercises": [
            {
              "id": "javascript-algorithms#146",
              "algo": "square-root_squareRoot",
              "label": "squareRoot should throw for negative numbers",
              "name": "squareRoot should throw for negative numbers@squareRoot.test.js",
              "pdgs": [
                {
                  "pdgTitle": "squareRoot(-5)",
                  "uniqueTitle": "squareRoot(-5)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 33,
                        "index": 159
                      },
                      "end": {
                        "line": 7,
                        "column": 5,
                        "index": 190
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#147",
              "algo": "square-root_squareRoot",
              "label": "squareRoot should correctly calculate square root with default tolerance",
              "name": "squareRoot should correctly calculate square root with default tolerance@squareRoot.test.js",
              "pdgs": [
                {
                  "pdgTitle": "squareRoot(0)",
                  "uniqueTitle": "squareRoot(0)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 76,
                        "index": 319
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 699
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(1)",
                  "uniqueTitle": "squareRoot(1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 76,
                        "index": 319
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 699
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(2)",
                  "uniqueTitle": "squareRoot(2)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 76,
                        "index": 319
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 699
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(3)",
                  "uniqueTitle": "squareRoot(3)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 76,
                        "index": 319
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 699
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(4)",
                  "uniqueTitle": "squareRoot(4)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 76,
                        "index": 319
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 699
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(15)",
                  "uniqueTitle": "squareRoot(15)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 76,
                        "index": 319
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 699
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(16)",
                  "uniqueTitle": "squareRoot(16)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 76,
                        "index": 319
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 699
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(256)",
                  "uniqueTitle": "squareRoot(256)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 76,
                        "index": 319
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 699
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(473)",
                  "uniqueTitle": "squareRoot(473)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 76,
                        "index": 319
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 699
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(14723)",
                  "uniqueTitle": "squareRoot(14723)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 76,
                        "index": 319
                      },
                      "end": {
                        "line": 22,
                        "column": 3,
                        "index": 699
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#148",
              "algo": "square-root_squareRoot",
              "label": "squareRoot should correctly calculate square root for integers with custom tolerance",
              "name": "squareRoot should correctly calculate square root for integers with custom tolerance@squareRoot.test.js",
              "pdgs": [
                {
                  "pdgTitle": "squareRoot(0, 1)",
                  "uniqueTitle": "squareRoot(0, 1)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(1, 1)",
                  "uniqueTitle": "squareRoot(1, 1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(2, 1)",
                  "uniqueTitle": "squareRoot(2, 1)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(3, 1)",
                  "uniqueTitle": "squareRoot(3, 1)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(4, 1)",
                  "uniqueTitle": "squareRoot(4, 1)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(15, 1)",
                  "uniqueTitle": "squareRoot(15, 1)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(16, 1)",
                  "uniqueTitle": "squareRoot(16, 1)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(256, 1)",
                  "uniqueTitle": "squareRoot(256, 1)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(473, 1)",
                  "uniqueTitle": "squareRoot(473, 1)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(14723, 1)",
                  "uniqueTitle": "squareRoot(14723, 1)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(0, 3)",
                  "uniqueTitle": "squareRoot(0, 3)",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(1, 3)",
                  "uniqueTitle": "squareRoot(1, 3)",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(2, 3)",
                  "uniqueTitle": "squareRoot(2, 3)",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(3, 3)",
                  "uniqueTitle": "squareRoot(3, 3)",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(4, 3)",
                  "uniqueTitle": "squareRoot(4, 3)",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(15, 3)",
                  "uniqueTitle": "squareRoot(15, 3)",
                  "contextId": 20,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(16, 3)",
                  "uniqueTitle": "squareRoot(16, 3)",
                  "contextId": 21,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(256, 3)",
                  "uniqueTitle": "squareRoot(256, 3)",
                  "contextId": 22,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(473, 3)",
                  "uniqueTitle": "squareRoot(473, 3)",
                  "contextId": 23,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(14723, 3)",
                  "uniqueTitle": "squareRoot(14723, 3)",
                  "contextId": 24,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(0, 10)",
                  "uniqueTitle": "squareRoot(0, 10)",
                  "contextId": 25,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(1, 10)",
                  "uniqueTitle": "squareRoot(1, 10)",
                  "contextId": 26,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(2, 10)",
                  "uniqueTitle": "squareRoot(2, 10)",
                  "contextId": 27,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(3, 10)",
                  "uniqueTitle": "squareRoot(3, 10)",
                  "contextId": 28,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(4, 10)",
                  "uniqueTitle": "squareRoot(4, 10)",
                  "contextId": 29,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(15, 10)",
                  "uniqueTitle": "squareRoot(15, 10)",
                  "contextId": 30,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(16, 10)",
                  "uniqueTitle": "squareRoot(16, 10)",
                  "contextId": 31,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(256, 10)",
                  "uniqueTitle": "squareRoot(256, 10)",
                  "contextId": 32,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(473, 10)",
                  "uniqueTitle": "squareRoot(473, 10)",
                  "contextId": 33,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(14723, 10)",
                  "uniqueTitle": "squareRoot(14723, 10)",
                  "contextId": 34,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 88,
                        "index": 793
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 2411
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(4.5, 10)",
                  "uniqueTitle": "squareRoot(4.5, 10)",
                  "contextId": 36,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 65,
                        "column": 88,
                        "index": 2505
                      },
                      "end": {
                        "line": 68,
                        "column": 3,
                        "index": 2622
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "squareRoot(217.534, 10)",
                  "uniqueTitle": "squareRoot(217.534, 10)",
                  "contextId": 37,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/square-root/squareRoot.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 43,
                        "index": 343
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1621
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
                    "loc": {
                      "start": {
                        "line": 65,
                        "column": 88,
                        "index": 2505
                      },
                      "end": {
                        "line": 68,
                        "column": 3,
                        "index": 2622
                      }
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "ml",
      "chapters": [
        {
          "name": "k-means",
          "exercises": [
            {
              "id": "javascript-algorithms#149",
              "algo": "k-means_kMeans",
              "label": "kMeans should throw an error on invalid data",
              "name": "kMeans should throw an error on invalid data@kMeans.test.js",
              "pdgs": [
                {
                  "pdgTitle": "KMeans()",
                  "uniqueTitle": "KMeans()",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/ml/k-means/kMeans.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 37,
                        "index": 425
                      },
                      "end": {
                        "line": 94,
                        "column": 1,
                        "index": 3494
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/ml/k-means/__test__/kMeans.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 17,
                        "index": 135
                      },
                      "end": {
                        "line": 7,
                        "column": 5,
                        "index": 160
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#150",
              "algo": "k-means_kMeans",
              "label": "kMeans should throw an error on inconsistent data",
              "name": "kMeans should throw an error on inconsistent data@kMeans.test.js",
              "pdgs": [
                {
                  "pdgTitle": "KMeans([[],[]], 2)",
                  "uniqueTitle": "KMeans([[],[]], 2)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/ml/k-means/kMeans.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 37,
                        "index": 425
                      },
                      "end": {
                        "line": 94,
                        "column": 1,
                        "index": 3494
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/ml/k-means/__test__/kMeans.test.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 17,
                        "index": 284
                      },
                      "end": {
                        "line": 13,
                        "column": 5,
                        "index": 325
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#151",
              "algo": "k-means_kMeans",
              "label": "kMeans should find the nearest neighbour",
              "name": "kMeans should find the nearest neighbour@kMeans.test.js",
              "pdgs": [
                {
                  "pdgTitle": "KMeans([[],[],[],[],[],[],[]], 2)",
                  "uniqueTitle": "KMeans([[],[],[],[],[],[],[]], 2)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/ml/k-means/kMeans.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 37,
                        "index": 425
                      },
                      "end": {
                        "line": 94,
                        "column": 1,
                        "index": 3494
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/ml/k-means/__test__/kMeans.test.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 48,
                        "index": 433
                      },
                      "end": {
                        "line": 40,
                        "column": 3,
                        "index": 858
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KMeans([[],[],[]], 2)",
                  "uniqueTitle": "KMeans([[],[],[]], 2)",
                  "contextId": 578,
                  "algoLoc": {
                    "filePath": "src/algorithms/ml/k-means/kMeans.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 37,
                        "index": 425
                      },
                      "end": {
                        "line": 94,
                        "column": 1,
                        "index": 3494
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/ml/k-means/__test__/kMeans.test.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 48,
                        "index": 433
                      },
                      "end": {
                        "line": 40,
                        "column": 3,
                        "index": 858
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KMeans([[],[],[]], 2)",
                  "uniqueTitle": "KMeans([[],[],[]], 2)#2",
                  "contextId": 940,
                  "algoLoc": {
                    "filePath": "src/algorithms/ml/k-means/kMeans.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 37,
                        "index": 425
                      },
                      "end": {
                        "line": 94,
                        "column": 1,
                        "index": 3494
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/ml/k-means/__test__/kMeans.test.js",
                    "loc": {
                      "start": {
                        "line": 53,
                        "column": 60,
                        "index": 1188
                      },
                      "end": {
                        "line": 62,
                        "column": 3,
                        "index": 1395
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#152",
              "algo": "k-means_kMeans",
              "label": "kMeans should find the clusters with equal distances",
              "name": "kMeans should find the clusters with equal distances@kMeans.test.js",
              "pdgs": [
                {
                  "pdgTitle": "KMeans([[],[],[]], 3)",
                  "uniqueTitle": "KMeans([[],[],[]], 3)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/ml/k-means/kMeans.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 37,
                        "index": 425
                      },
                      "end": {
                        "line": 94,
                        "column": 1,
                        "index": 3494
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/ml/k-means/__test__/kMeans.test.js",
                    "loc": {
                      "start": {
                        "line": 42,
                        "column": 60,
                        "index": 924
                      },
                      "end": {
                        "line": 51,
                        "column": 3,
                        "index": 1122
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#153",
              "algo": "k-means_kMeans",
              "label": "kMeans should find the nearest neighbour in 3D space",
              "name": "kMeans should find the nearest neighbour in 3D space@kMeans.test.js",
              "pdgs": [
                {
                  "pdgTitle": "KMeans([[],[],[]], 2)",
                  "uniqueTitle": "KMeans([[],[],[]], 2)#3",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/ml/k-means/kMeans.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 37,
                        "index": 425
                      },
                      "end": {
                        "line": 94,
                        "column": 1,
                        "index": 3494
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/ml/k-means/__test__/kMeans.test.js",
                    "loc": {
                      "start": {
                        "line": 53,
                        "column": 60,
                        "index": 1188
                      },
                      "end": {
                        "line": 62,
                        "column": 3,
                        "index": 1395
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "knn",
          "exercises": [
            {
              "id": "javascript-algorithms#154",
              "algo": "knn_knn",
              "label": "kNN should throw an error on invalid data",
              "name": "kNN should throw an error on invalid data@knn.test.js",
              "pdgs": [
                {
                  "pdgTitle": "kNN()",
                  "uniqueTitle": "kNN()",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/ml/knn/kNN.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 57,
                        "index": 633
                      },
                      "end": {
                        "line": 58,
                        "column": 1,
                        "index": 2073
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 17,
                        "index": 126
                      },
                      "end": {
                        "line": 7,
                        "column": 5,
                        "index": 148
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#155",
              "algo": "knn_knn",
              "label": "kNN should throw an error on invalid labels",
              "name": "kNN should throw an error on invalid labels@knn.test.js",
              "pdgs": [
                {
                  "pdgTitle": "kNN([[]])",
                  "uniqueTitle": "kNN([[]])",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/ml/knn/kNN.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 57,
                        "index": 633
                      },
                      "end": {
                        "line": 58,
                        "column": 1,
                        "index": 2073
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 27,
                        "index": 313
                      },
                      "end": {
                        "line": 13,
                        "column": 5,
                        "index": 343
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#156",
              "algo": "knn_knn",
              "label": "kNN should throw an error on not giving classification vector",
              "name": "kNN should throw an error on not giving classification vector@knn.test.js",
              "pdgs": [
                {
                  "pdgTitle": "kNN([[]], [1])",
                  "uniqueTitle": "kNN([[]], [1])",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/ml/knn/kNN.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 57,
                        "index": 633
                      },
                      "end": {
                        "line": 58,
                        "column": 1,
                        "index": 2073
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 35,
                        "index": 570
                      },
                      "end": {
                        "line": 22,
                        "column": 5,
                        "index": 605
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "kNN([[]], [1], [1])",
                  "uniqueTitle": "kNN([[]], [1], [1])",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/ml/knn/kNN.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 57,
                        "index": 633
                      },
                      "end": {
                        "line": 58,
                        "column": 1,
                        "index": 2073
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 31,
                        "index": 836
                      },
                      "end": {
                        "line": 31,
                        "column": 5,
                        "index": 876
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#157",
              "algo": "knn_knn",
              "label": "kNN should find the nearest neighbour",
              "name": "kNN should find the nearest neighbour@knn.test.js",
              "pdgs": [
                {
                  "pdgTitle": "kNN([[],[]], [1,2], [1,1])",
                  "uniqueTitle": "kNN([[],[]], [1,2], [1,1])",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/ml/knn/kNN.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 57,
                        "index": 633
                      },
                      "end": {
                        "line": 58,
                        "column": 1,
                        "index": 2073
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
                    "loc": {
                      "start": {
                        "line": 35,
                        "column": 48,
                        "index": 1010
                      },
                      "end": {
                        "line": 77,
                        "column": 3,
                        "index": 1879
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "kNN([[],[],[],[],[],[],[]], [1,2,1,2,1,2,1], [1.25,1.25])",
                  "uniqueTitle": "kNN([[],[],[],[],[],[],[]], [1,2,1,2,1,2,1], [1.25,1.25])",
                  "contextId": 47,
                  "algoLoc": {
                    "filePath": "src/algorithms/ml/knn/kNN.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 57,
                        "index": 633
                      },
                      "end": {
                        "line": 58,
                        "column": 1,
                        "index": 2073
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
                    "loc": {
                      "start": {
                        "line": 35,
                        "column": 48,
                        "index": 1010
                      },
                      "end": {
                        "line": 77,
                        "column": 3,
                        "index": 1879
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "kNN([[],[],[],[],[],[],[]], [1,2,1,2,1,2,1], [1.25,1.25], 5)",
                  "uniqueTitle": "kNN([[],[],[],[],[],[],[]], [1,2,1,2,1,2,1], [1.25,1.25], 5)",
                  "contextId": 193,
                  "algoLoc": {
                    "filePath": "src/algorithms/ml/knn/kNN.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 57,
                        "index": 633
                      },
                      "end": {
                        "line": 58,
                        "column": 1,
                        "index": 2073
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
                    "loc": {
                      "start": {
                        "line": 35,
                        "column": 48,
                        "index": 1010
                      },
                      "end": {
                        "line": 77,
                        "column": 3,
                        "index": 1879
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "kNN([[],[],[]], [1,3,3], [0,1])",
                  "uniqueTitle": "kNN([[],[],[]], [1,3,3], [0,1])",
                  "contextId": 340,
                  "algoLoc": {
                    "filePath": "src/algorithms/ml/knn/kNN.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 57,
                        "index": 633
                      },
                      "end": {
                        "line": 58,
                        "column": 1,
                        "index": 2073
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
                    "loc": {
                      "start": {
                        "line": 79,
                        "column": 69,
                        "index": 1954
                      },
                      "end": {
                        "line": 89,
                        "column": 3,
                        "index": 2196
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "kNN([[],[],[]], [1,3,3], [0,0,1])",
                  "uniqueTitle": "kNN([[],[],[]], [1,3,3], [0,0,1])",
                  "contextId": 401,
                  "algoLoc": {
                    "filePath": "src/algorithms/ml/knn/kNN.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 57,
                        "index": 633
                      },
                      "end": {
                        "line": 58,
                        "column": 1,
                        "index": 2073
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
                    "loc": {
                      "start": {
                        "line": 91,
                        "column": 60,
                        "index": 2262
                      },
                      "end": {
                        "line": 101,
                        "column": 3,
                        "index": 2516
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#158",
              "algo": "knn_knn",
              "label": "kNN should find the nearest neighbour with equal distances",
              "name": "kNN should find the nearest neighbour with equal distances@knn.test.js",
              "pdgs": [
                {
                  "pdgTitle": "kNN([[],[],[]], [1,3,3], [0,1])",
                  "uniqueTitle": "kNN([[],[],[]], [1,3,3], [0,1])#2",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/ml/knn/kNN.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 57,
                        "index": 633
                      },
                      "end": {
                        "line": 58,
                        "column": 1,
                        "index": 2073
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
                    "loc": {
                      "start": {
                        "line": 79,
                        "column": 69,
                        "index": 1954
                      },
                      "end": {
                        "line": 89,
                        "column": 3,
                        "index": 2196
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#159",
              "algo": "knn_knn",
              "label": "kNN should find the nearest neighbour in 3D space",
              "name": "kNN should find the nearest neighbour in 3D space@knn.test.js",
              "pdgs": [
                {
                  "pdgTitle": "kNN([[],[],[]], [1,3,3], [0,0,1])",
                  "uniqueTitle": "kNN([[],[],[]], [1,3,3], [0,0,1])#2",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/ml/knn/kNN.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 57,
                        "index": 633
                      },
                      "end": {
                        "line": 58,
                        "column": 1,
                        "index": 2073
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
                    "loc": {
                      "start": {
                        "line": 91,
                        "column": 60,
                        "index": 2262
                      },
                      "end": {
                        "line": 101,
                        "column": 3,
                        "index": 2516
                      }
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "search",
      "chapters": [
        {
          "name": "binary-search",
          "exercises": [
            {
              "id": "javascript-algorithms#160",
              "algo": "binary-search_binarySearch",
              "label": "binarySearch should search number in sorted array",
              "name": "binarySearch should search number in sorted array@binarySearch.test.js",
              "pdgs": [
                {
                  "pdgTitle": "binarySearch([], 1)",
                  "uniqueTitle": "binarySearch([], 1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/binary-search/binarySearch.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 2,
                        "index": 337
                      },
                      "end": {
                        "line": 48,
                        "column": 1,
                        "index": 1548
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 658
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "binarySearch([1], 1)",
                  "uniqueTitle": "binarySearch([1], 1)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/binary-search/binarySearch.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 2,
                        "index": 337
                      },
                      "end": {
                        "line": 48,
                        "column": 1,
                        "index": 1548
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 658
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "binarySearch([1,2], 1)",
                  "uniqueTitle": "binarySearch([1,2], 1)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/binary-search/binarySearch.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 2,
                        "index": 337
                      },
                      "end": {
                        "line": 48,
                        "column": 1,
                        "index": 1548
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 658
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "binarySearch([1,2], 2)",
                  "uniqueTitle": "binarySearch([1,2], 2)",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/binary-search/binarySearch.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 2,
                        "index": 337
                      },
                      "end": {
                        "line": 48,
                        "column": 1,
                        "index": 1548
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 658
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "binarySearch([1,5,10,12], 1)",
                  "uniqueTitle": "binarySearch([1,5,10,12], 1)",
                  "contextId": 24,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/binary-search/binarySearch.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 2,
                        "index": 337
                      },
                      "end": {
                        "line": 48,
                        "column": 1,
                        "index": 1548
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 658
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "binarySearch([1,5,10,12,14,17,22,100], 17)",
                  "uniqueTitle": "binarySearch([1,5,10,12,14,17,22,100], 17)",
                  "contextId": 32,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/binary-search/binarySearch.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 2,
                        "index": 337
                      },
                      "end": {
                        "line": 48,
                        "column": 1,
                        "index": 1548
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 658
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "binarySearch([1,5,10,12,14,17,22,100], 1)",
                  "uniqueTitle": "binarySearch([1,5,10,12,14,17,22,100], 1)",
                  "contextId": 40,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/binary-search/binarySearch.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 2,
                        "index": 337
                      },
                      "end": {
                        "line": 48,
                        "column": 1,
                        "index": 1548
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 658
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "binarySearch([1,5,10,12,14,17,22,100], 100)",
                  "uniqueTitle": "binarySearch([1,5,10,12,14,17,22,100], 100)",
                  "contextId": 52,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/binary-search/binarySearch.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 2,
                        "index": 337
                      },
                      "end": {
                        "line": 48,
                        "column": 1,
                        "index": 1548
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 658
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "binarySearch([1,5,10,12,14,17,22,100], 0)",
                  "uniqueTitle": "binarySearch([1,5,10,12,14,17,22,100], 0)",
                  "contextId": 68,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/binary-search/binarySearch.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 2,
                        "index": 337
                      },
                      "end": {
                        "line": 48,
                        "column": 1,
                        "index": 1548
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "index": 132
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 658
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#161",
              "algo": "binary-search_binarySearch",
              "label": "binarySearch should search object in sorted array",
              "name": "binarySearch should search object in sorted array@binarySearch.test.js",
              "pdgs": [
                {
                  "pdgTitle": "binarySearch([], {key}, ƒ (anonymous))",
                  "uniqueTitle": "binarySearch([], {key}, ƒ (anonymous))",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/binary-search/binarySearch.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 2,
                        "index": 337
                      },
                      "end": {
                        "line": 48,
                        "column": 1,
                        "index": 1548
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 51,
                        "index": 715
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1386
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "binarySearch([{},{},{}], {key}, ƒ (anonymous))",
                  "uniqueTitle": "binarySearch([{},{},{}], {key}, ƒ (anonymous))",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/binary-search/binarySearch.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 2,
                        "index": 337
                      },
                      "end": {
                        "line": 48,
                        "column": 1,
                        "index": 1548
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 51,
                        "index": 715
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1386
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "binarySearch([{},{},{}], {key}, ƒ (anonymous))",
                  "uniqueTitle": "binarySearch([{},{},{}], {key}, ƒ (anonymous))#2",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/binary-search/binarySearch.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 2,
                        "index": 337
                      },
                      "end": {
                        "line": 48,
                        "column": 1,
                        "index": 1548
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 51,
                        "index": 715
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1386
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "binarySearch([{},{},{}], {key}, ƒ (anonymous))",
                  "uniqueTitle": "binarySearch([{},{},{}], {key}, ƒ (anonymous))#3",
                  "contextId": 26,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/binary-search/binarySearch.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 2,
                        "index": 337
                      },
                      "end": {
                        "line": 48,
                        "column": 1,
                        "index": 1548
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 51,
                        "index": 715
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1386
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "binarySearch([{},{},{}], {key}, ƒ (anonymous))",
                  "uniqueTitle": "binarySearch([{},{},{}], {key}, ƒ (anonymous))#4",
                  "contextId": 30,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/binary-search/binarySearch.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 2,
                        "index": 337
                      },
                      "end": {
                        "line": 48,
                        "column": 1,
                        "index": 1548
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 51,
                        "index": 715
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1386
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "interpolation-search",
          "exercises": [
            {
              "id": "javascript-algorithms#162",
              "algo": "interpolation-search_interpolationSearch",
              "label": "interpolationSearch should search elements in sorted array of numbers",
              "name": "interpolationSearch should search elements in sorted array of numbers@interpolationSearch.test.js",
              "pdgs": [
                {
                  "pdgTitle": "interpolationSearch([], 1)",
                  "uniqueTitle": "interpolationSearch([], 1)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 70,
                        "index": 251
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1807
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 166
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1754
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "interpolationSearch([1], 1)",
                  "uniqueTitle": "interpolationSearch([1], 1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 70,
                        "index": 251
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1807
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 166
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1754
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "interpolationSearch([1], 0)",
                  "uniqueTitle": "interpolationSearch([1], 0)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 70,
                        "index": 251
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1807
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 166
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1754
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "interpolationSearch([1,1], 1)",
                  "uniqueTitle": "interpolationSearch([1,1], 1)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 70,
                        "index": 251
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1807
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 166
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1754
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "interpolationSearch([1,2], 1)",
                  "uniqueTitle": "interpolationSearch([1,2], 1)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 70,
                        "index": 251
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1807
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 166
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1754
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "interpolationSearch([1,2], 2)",
                  "uniqueTitle": "interpolationSearch([1,2], 2)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 70,
                        "index": 251
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1807
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 166
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1754
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "interpolationSearch([10,20,30,40,50], 40)",
                  "uniqueTitle": "interpolationSearch([10,20,30,40,50], 40)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 70,
                        "index": 251
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1807
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 166
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1754
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "interpolationSearch([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15], 14)",
                  "uniqueTitle": "interpolationSearch([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15], 14)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 70,
                        "index": 251
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1807
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 166
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1754
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "interpolationSearch([1,6,7,8,12,13,14,19,21,23,24,24,24,300], 24)",
                  "uniqueTitle": "interpolationSearch([1,6,7,8,12,13,14,19,21,23,24,24,24,300], 24)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 70,
                        "index": 251
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1807
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 166
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1754
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 600)",
                  "uniqueTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 600)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 70,
                        "index": 251
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1807
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 166
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1754
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 1)",
                  "uniqueTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 1)",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 70,
                        "index": 251
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1807
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 166
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1754
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 2)",
                  "uniqueTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 2)",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 70,
                        "index": 251
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1807
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 166
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1754
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 3)",
                  "uniqueTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 3)",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 70,
                        "index": 251
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1807
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 166
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1754
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 700)",
                  "uniqueTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 700)",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 70,
                        "index": 251
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1807
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 166
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1754
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 800)",
                  "uniqueTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 800)",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 70,
                        "index": 251
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1807
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 166
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1754
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "interpolationSearch([0,2,3,700,800,1200,1300,1400,1900], 1200)",
                  "uniqueTitle": "interpolationSearch([0,2,3,700,800,1200,1300,1400,1900], 1200)",
                  "contextId": 20,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 70,
                        "index": 251
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1807
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 166
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1754
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,19000], 800)",
                  "uniqueTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,19000], 800)",
                  "contextId": 21,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 70,
                        "index": 251
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1807
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 166
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1754
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "interpolationSearch([0,10,11,12,13,14,15], 10)",
                  "uniqueTitle": "interpolationSearch([0,10,11,12,13,14,15], 10)",
                  "contextId": 22,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 70,
                        "index": 251
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1807
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 166
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1754
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "jump-search",
          "exercises": [
            {
              "id": "javascript-algorithms#163",
              "algo": "jump-search_jumpSearch",
              "label": "jumpSearch should search for an element in sorted array",
              "name": "jumpSearch should search for an element in sorted array@jumpSearch.test.js",
              "pdgs": [
                {
                  "pdgTitle": "jumpSearch([], 1)",
                  "uniqueTitle": "jumpSearch([], 1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 2,
                        "index": 339
                      },
                      "end": {
                        "line": 60,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 134
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 973
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "jumpSearch([1], 2)",
                  "uniqueTitle": "jumpSearch([1], 2)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 2,
                        "index": 339
                      },
                      "end": {
                        "line": 60,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 134
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 973
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "jumpSearch([1], 1)",
                  "uniqueTitle": "jumpSearch([1], 1)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 2,
                        "index": 339
                      },
                      "end": {
                        "line": 60,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 134
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 973
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "jumpSearch([1,2], 1)",
                  "uniqueTitle": "jumpSearch([1,2], 1)",
                  "contextId": 20,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 2,
                        "index": 339
                      },
                      "end": {
                        "line": 60,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 134
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 973
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "jumpSearch([1,2], 1)",
                  "uniqueTitle": "jumpSearch([1,2], 1)#2",
                  "contextId": 26,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 2,
                        "index": 339
                      },
                      "end": {
                        "line": 60,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 134
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 973
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "jumpSearch([1,1,1], 1)",
                  "uniqueTitle": "jumpSearch([1,1,1], 1)",
                  "contextId": 32,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 2,
                        "index": 339
                      },
                      "end": {
                        "line": 60,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 134
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 973
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 2)",
                  "uniqueTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 2)",
                  "contextId": 38,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 2,
                        "index": 339
                      },
                      "end": {
                        "line": 60,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 134
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 973
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 0)",
                  "uniqueTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 0)",
                  "contextId": 46,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 2,
                        "index": 339
                      },
                      "end": {
                        "line": 60,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 134
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 973
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 0)",
                  "uniqueTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 0)#2",
                  "contextId": 56,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 2,
                        "index": 339
                      },
                      "end": {
                        "line": 60,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 134
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 973
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 7)",
                  "uniqueTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 7)",
                  "contextId": 66,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 2,
                        "index": 339
                      },
                      "end": {
                        "line": 60,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 134
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 973
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 5)",
                  "uniqueTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 5)",
                  "contextId": 78,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 2,
                        "index": 339
                      },
                      "end": {
                        "line": 60,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 134
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 973
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 20)",
                  "uniqueTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 20)",
                  "contextId": 88,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 2,
                        "index": 339
                      },
                      "end": {
                        "line": 60,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 134
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 973
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 30)",
                  "uniqueTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 30)",
                  "contextId": 98,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 2,
                        "index": 339
                      },
                      "end": {
                        "line": 60,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 134
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 973
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 48)",
                  "uniqueTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 48)",
                  "contextId": 110,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 2,
                        "index": 339
                      },
                      "end": {
                        "line": 60,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 134
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 973
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#164",
              "algo": "jump-search_jumpSearch",
              "label": "jumpSearch should search object in sorted array",
              "name": "jumpSearch should search object in sorted array@jumpSearch.test.js",
              "pdgs": [
                {
                  "pdgTitle": "jumpSearch([], {key}, ƒ (anonymous))",
                  "uniqueTitle": "jumpSearch([], {key}, ƒ (anonymous))",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 2,
                        "index": 339
                      },
                      "end": {
                        "line": 60,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 51,
                        "index": 1030
                      },
                      "end": {
                        "line": 38,
                        "column": 3,
                        "index": 1691
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "jumpSearch([{},{},{}], {key}, ƒ (anonymous))",
                  "uniqueTitle": "jumpSearch([{},{},{}], {key}, ƒ (anonymous))",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 2,
                        "index": 339
                      },
                      "end": {
                        "line": 60,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 51,
                        "index": 1030
                      },
                      "end": {
                        "line": 38,
                        "column": 3,
                        "index": 1691
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "jumpSearch([{},{},{}], {key}, ƒ (anonymous))",
                  "uniqueTitle": "jumpSearch([{},{},{}], {key}, ƒ (anonymous))#2",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 2,
                        "index": 339
                      },
                      "end": {
                        "line": 60,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 51,
                        "index": 1030
                      },
                      "end": {
                        "line": 38,
                        "column": 3,
                        "index": 1691
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "jumpSearch([{},{},{}], {key}, ƒ (anonymous))",
                  "uniqueTitle": "jumpSearch([{},{},{}], {key}, ƒ (anonymous))#3",
                  "contextId": 24,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 2,
                        "index": 339
                      },
                      "end": {
                        "line": 60,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 51,
                        "index": 1030
                      },
                      "end": {
                        "line": 38,
                        "column": 3,
                        "index": 1691
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "jumpSearch([{},{},{}], {key}, ƒ (anonymous))",
                  "uniqueTitle": "jumpSearch([{},{},{}], {key}, ƒ (anonymous))#4",
                  "contextId": 32,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 2,
                        "index": 339
                      },
                      "end": {
                        "line": 60,
                        "column": 1,
                        "index": 1635
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 51,
                        "index": 1030
                      },
                      "end": {
                        "line": 38,
                        "column": 3,
                        "index": 1691
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "linear-search",
          "exercises": [
            {
              "id": "javascript-algorithms#165",
              "algo": "linear-search_linearSearch",
              "label": "linearSearch should search all numbers in array",
              "name": "linearSearch should search all numbers in array@linearSearch.test.js",
              "pdgs": [
                {
                  "pdgTitle": "linearSearch([1,2,4,6,2], 10)",
                  "uniqueTitle": "linearSearch([1,2,4,6,2], 10)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/linear-search/linearSearch.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 77,
                        "index": 313
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 568
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/linear-search/__test__/linearSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 49,
                        "index": 130
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 327
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "linearSearch([1,2,4,6,2], 1)",
                  "uniqueTitle": "linearSearch([1,2,4,6,2], 1)",
                  "contextId": 23,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/linear-search/linearSearch.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 77,
                        "index": 313
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 568
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/linear-search/__test__/linearSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 49,
                        "index": 130
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 327
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "linearSearch([1,2,4,6,2], 2)",
                  "uniqueTitle": "linearSearch([1,2,4,6,2], 2)",
                  "contextId": 40,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/linear-search/linearSearch.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 77,
                        "index": 313
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 568
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/linear-search/__test__/linearSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 49,
                        "index": 130
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 327
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#166",
              "algo": "linear-search_linearSearch",
              "label": "linearSearch should search all strings in array",
              "name": "linearSearch should search all strings in array@linearSearch.test.js",
              "pdgs": [
                {
                  "pdgTitle": "linearSearch([\"a\",\"b\",\"a\"], c)",
                  "uniqueTitle": "linearSearch([\"a\",\"b\",\"a\"], c)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/linear-search/linearSearch.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 77,
                        "index": 313
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 568
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/linear-search/__test__/linearSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 49,
                        "index": 382
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 584
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "linearSearch([\"a\",\"b\",\"a\"], b)",
                  "uniqueTitle": "linearSearch([\"a\",\"b\",\"a\"], b)",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/linear-search/linearSearch.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 77,
                        "index": 313
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 568
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/linear-search/__test__/linearSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 49,
                        "index": 382
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 584
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "linearSearch([\"a\",\"b\",\"a\"], a)",
                  "uniqueTitle": "linearSearch([\"a\",\"b\",\"a\"], a)",
                  "contextId": 28,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/linear-search/linearSearch.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 77,
                        "index": 313
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 568
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/linear-search/__test__/linearSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 49,
                        "index": 382
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 584
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#167",
              "algo": "linear-search_linearSearch",
              "label": "linearSearch should search through objects as well",
              "name": "linearSearch should search through objects as well@linearSearch.test.js",
              "pdgs": [
                {
                  "pdgTitle": "linearSearch([{},{},{},{}], {key}, ƒ (anonymous))",
                  "uniqueTitle": "linearSearch([{},{},{},{}], {key}, ƒ (anonymous))",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/linear-search/linearSearch.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 77,
                        "index": 313
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 568
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/linear-search/__test__/linearSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 52,
                        "index": 642
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1112
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "linearSearch([{},{},{},{}], {key}, ƒ (anonymous))",
                  "uniqueTitle": "linearSearch([{},{},{},{}], {key}, ƒ (anonymous))#2",
                  "contextId": 20,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/linear-search/linearSearch.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 77,
                        "index": 313
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 568
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/linear-search/__test__/linearSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 52,
                        "index": 642
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1112
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "linearSearch([{},{},{},{}], {key}, ƒ (anonymous))",
                  "uniqueTitle": "linearSearch([{},{},{},{}], {key}, ƒ (anonymous))#3",
                  "contextId": 34,
                  "algoLoc": {
                    "filePath": "src/algorithms/search/linear-search/linearSearch.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 77,
                        "index": 313
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 568
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/search/linear-search/__test__/linearSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 52,
                        "index": 642
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1112
                      }
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "sets",
      "chapters": [
        {
          "name": "cartesian-product",
          "exercises": [
            {
              "id": "javascript-algorithms#168",
              "algo": "cartesian-product_cartesianProduct",
              "label": "cartesianProduct should return null if there is not enough info for calculation",
              "name": "cartesianProduct should return null if there is not enough info for calculation@cartesianProduct.test.js",
              "pdgs": [
                {
                  "pdgTitle": "cartesianProduct([1], null)",
                  "uniqueTitle": "cartesianProduct([1], null)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/cartesian-product/cartesianProduct.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 53,
                        "index": 170
                      },
                      "end": {
                        "line": 27,
                        "column": 1,
                        "index": 824
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/cartesian-product/__test__/cartesianProduct.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 77,
                        "index": 170
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 347
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "cartesianProduct([], null)",
                  "uniqueTitle": "cartesianProduct([], null)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/cartesian-product/cartesianProduct.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 53,
                        "index": 170
                      },
                      "end": {
                        "line": 27,
                        "column": 1,
                        "index": 824
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/cartesian-product/__test__/cartesianProduct.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 77,
                        "index": 170
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 347
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#169",
              "algo": "cartesian-product_cartesianProduct",
              "label": "cartesianProduct should calculate the product of two sets",
              "name": "cartesianProduct should calculate the product of two sets@cartesianProduct.test.js",
              "pdgs": [
                {
                  "pdgTitle": "cartesianProduct([1], [1])",
                  "uniqueTitle": "cartesianProduct([1], [1])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/cartesian-product/cartesianProduct.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 53,
                        "index": 170
                      },
                      "end": {
                        "line": 27,
                        "column": 1,
                        "index": 824
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/cartesian-product/__test__/cartesianProduct.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 55,
                        "index": 408
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 664
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "cartesianProduct([1,2], [3,5])",
                  "uniqueTitle": "cartesianProduct([1,2], [3,5])",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/cartesian-product/cartesianProduct.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 53,
                        "index": 170
                      },
                      "end": {
                        "line": 27,
                        "column": 1,
                        "index": 824
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/cartesian-product/__test__/cartesianProduct.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 55,
                        "index": 408
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 664
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "combination-sum",
          "exercises": [
            {
              "id": "javascript-algorithms#170",
              "algo": "combination-sum_combinationSum",
              "label": "combinationSum should find all combinations with specific sum",
              "name": "combinationSum should find all combinations with specific sum@combinationSum.test.js",
              "pdgs": [
                {
                  "pdgTitle": "combinationSum([1], 4)",
                  "uniqueTitle": "combinationSum([1], 4)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combination-sum/combinationSum.js",
                    "loc": {
                      "start": {
                        "line": 67,
                        "column": 59,
                        "index": 2342
                      },
                      "end": {
                        "line": 69,
                        "column": 1,
                        "index": 2401
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combination-sum/__test__/combinationSum.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 61,
                        "index": 148
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 510
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "combinationSum([2,3,6,7], 7)",
                  "uniqueTitle": "combinationSum([2,3,6,7], 7)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combination-sum/combinationSum.js",
                    "loc": {
                      "start": {
                        "line": 67,
                        "column": 59,
                        "index": 2342
                      },
                      "end": {
                        "line": 69,
                        "column": 1,
                        "index": 2401
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combination-sum/__test__/combinationSum.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 61,
                        "index": 148
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 510
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "combinationSum([2,3,5], 8)",
                  "uniqueTitle": "combinationSum([2,3,5], 8)",
                  "contextId": 40,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combination-sum/combinationSum.js",
                    "loc": {
                      "start": {
                        "line": 67,
                        "column": 59,
                        "index": 2342
                      },
                      "end": {
                        "line": 69,
                        "column": 1,
                        "index": 2401
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combination-sum/__test__/combinationSum.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 61,
                        "index": 148
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 510
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "combinationSum([2,5], 3)",
                  "uniqueTitle": "combinationSum([2,5], 3)",
                  "contextId": 64,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combination-sum/combinationSum.js",
                    "loc": {
                      "start": {
                        "line": 67,
                        "column": 59,
                        "index": 2342
                      },
                      "end": {
                        "line": 69,
                        "column": 1,
                        "index": 2401
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combination-sum/__test__/combinationSum.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 61,
                        "index": 148
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 510
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "combinationSum([], 3)",
                  "uniqueTitle": "combinationSum([], 3)",
                  "contextId": 70,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combination-sum/combinationSum.js",
                    "loc": {
                      "start": {
                        "line": 67,
                        "column": 59,
                        "index": 2342
                      },
                      "end": {
                        "line": 69,
                        "column": 1,
                        "index": 2401
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combination-sum/__test__/combinationSum.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 61,
                        "index": 148
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 510
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "combinations",
          "exercises": [
            {
              "id": "javascript-algorithms#171",
              "algo": "combinations_combineWithoutRepetitions",
              "label": "combineWithoutRepetitions should combine string without repetitions",
              "name": "combineWithoutRepetitions should combine string without repetitions@combineWithoutRepetitions.test.js",
              "pdgs": [
                {
                  "pdgTitle": "combineWithoutRepetitions([\"A\",\"B\"], 3)",
                  "uniqueTitle": "combineWithoutRepetitions([\"A\",\"B\"], 3)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combinations/combineWithoutRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 77,
                        "index": 167
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 1074
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 56,
                        "index": 312
                      },
                      "end": {
                        "line": 60,
                        "column": 3,
                        "index": 1994
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "combineWithoutRepetitions([\"A\",\"B\"], 1)",
                  "uniqueTitle": "combineWithoutRepetitions([\"A\",\"B\"], 1)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combinations/combineWithoutRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 77,
                        "index": 167
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 1074
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 56,
                        "index": 312
                      },
                      "end": {
                        "line": 60,
                        "column": 3,
                        "index": 1994
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "combineWithoutRepetitions([\"A\"], 1)",
                  "uniqueTitle": "combineWithoutRepetitions([\"A\"], 1)",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combinations/combineWithoutRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 77,
                        "index": 167
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 1074
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 56,
                        "index": 312
                      },
                      "end": {
                        "line": 60,
                        "column": 3,
                        "index": 1994
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "combineWithoutRepetitions([\"A\",\"B\"], 2)",
                  "uniqueTitle": "combineWithoutRepetitions([\"A\",\"B\"], 2)",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combinations/combineWithoutRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 77,
                        "index": 167
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 1074
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 56,
                        "index": 312
                      },
                      "end": {
                        "line": 60,
                        "column": 3,
                        "index": 1994
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\"], 2)",
                  "uniqueTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\"], 2)",
                  "contextId": 26,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combinations/combineWithoutRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 77,
                        "index": 167
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 1074
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 56,
                        "index": 312
                      },
                      "end": {
                        "line": 60,
                        "column": 3,
                        "index": 1994
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\"], 3)",
                  "uniqueTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\"], 3)",
                  "contextId": 39,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combinations/combineWithoutRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 77,
                        "index": 167
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 1074
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 56,
                        "index": 312
                      },
                      "end": {
                        "line": 60,
                        "column": 3,
                        "index": 1994
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\",\"D\"], 3)",
                  "uniqueTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\",\"D\"], 3)",
                  "contextId": 55,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combinations/combineWithoutRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 77,
                        "index": 167
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 1074
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 56,
                        "index": 312
                      },
                      "end": {
                        "line": 60,
                        "column": 3,
                        "index": 1994
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\",\"D\",\"E\"], 3)",
                  "uniqueTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\",\"D\",\"E\"], 3)",
                  "contextId": 88,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combinations/combineWithoutRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 77,
                        "index": 167
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 1074
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 56,
                        "index": 312
                      },
                      "end": {
                        "line": 60,
                        "column": 3,
                        "index": 1994
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\"], 4)",
                  "uniqueTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\"], 4)",
                  "contextId": 149,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combinations/combineWithoutRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 77,
                        "index": 167
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 1074
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 56,
                        "index": 312
                      },
                      "end": {
                        "line": 60,
                        "column": 3,
                        "index": 1994
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "factorial(8)",
                  "uniqueTitle": "factorial(8)#2",
                  "contextId": 614,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/factorial/factorial.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 42,
                        "index": 100
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 210
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 56,
                        "index": 312
                      },
                      "end": {
                        "line": 60,
                        "column": 3,
                        "index": 1994
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "factorial(4)",
                  "uniqueTitle": "factorial(4)",
                  "contextId": 615,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/factorial/factorial.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 42,
                        "index": 100
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 210
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 56,
                        "index": 312
                      },
                      "end": {
                        "line": 60,
                        "column": 3,
                        "index": 1994
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "factorial(4)",
                  "uniqueTitle": "factorial(4)#2",
                  "contextId": 616,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/factorial/factorial.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 42,
                        "index": 100
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 210
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 56,
                        "index": 312
                      },
                      "end": {
                        "line": 60,
                        "column": 3,
                        "index": 1994
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "pascalTriangle(8)",
                  "uniqueTitle": "pascalTriangle(8)",
                  "contextId": 617,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/pascal-triangle/pascalTriangle.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 129
                      },
                      "end": {
                        "line": 17,
                        "column": 1,
                        "index": 466
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 56,
                        "index": 312
                      },
                      "end": {
                        "line": 60,
                        "column": 3,
                        "index": 1994
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#172",
              "algo": "combinations_combineWithRepetitions",
              "label": "combineWithRepetitions should combine string with repetitions",
              "name": "combineWithRepetitions should combine string with repetitions@combineWithRepetitions.test.js",
              "pdgs": [
                {
                  "pdgTitle": "combineWithRepetitions([\"A\"], 1)",
                  "uniqueTitle": "combineWithRepetitions([\"A\"], 1)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combinations/combineWithRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 74,
                        "index": 164
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 224
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1666
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "combineWithRepetitions([\"A\",\"B\"], 1)",
                  "uniqueTitle": "combineWithRepetitions([\"A\",\"B\"], 1)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combinations/combineWithRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 74,
                        "index": 164
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 224
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1666
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "combineWithRepetitions([\"A\",\"B\"], 2)",
                  "uniqueTitle": "combineWithRepetitions([\"A\",\"B\"], 2)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combinations/combineWithRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 74,
                        "index": 164
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 224
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1666
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "combineWithRepetitions([\"A\",\"B\"], 3)",
                  "uniqueTitle": "combineWithRepetitions([\"A\",\"B\"], 3)",
                  "contextId": 22,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combinations/combineWithRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 74,
                        "index": 164
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 224
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1666
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "combineWithRepetitions([\"A\",\"B\",\"C\"], 2)",
                  "uniqueTitle": "combineWithRepetitions([\"A\",\"B\",\"C\"], 2)",
                  "contextId": 45,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combinations/combineWithRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 74,
                        "index": 164
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 224
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1666
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "combineWithRepetitions([\"A\",\"B\",\"C\"], 3)",
                  "uniqueTitle": "combineWithRepetitions([\"A\",\"B\",\"C\"], 3)",
                  "contextId": 64,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combinations/combineWithRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 74,
                        "index": 164
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 224
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1666
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "combineWithRepetitions([\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\"], 4)",
                  "uniqueTitle": "combineWithRepetitions([\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\"], 4)",
                  "contextId": 113,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/combinations/combineWithRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 74,
                        "index": 164
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 1046
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 224
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1666
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "factorial(11)",
                  "uniqueTitle": "factorial(11)",
                  "contextId": 1762,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/factorial/factorial.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 42,
                        "index": 100
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 210
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 224
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1666
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "factorial(4)",
                  "uniqueTitle": "factorial(4)#3",
                  "contextId": 1763,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/factorial/factorial.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 42,
                        "index": 100
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 210
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 224
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1666
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "factorial(7)",
                  "uniqueTitle": "factorial(7)",
                  "contextId": 1764,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/factorial/factorial.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 42,
                        "index": 100
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 210
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 53,
                        "index": 224
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1666
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "fisher-yates",
          "exercises": [
            {
              "id": "javascript-algorithms#173",
              "algo": "fisher-yates_fisherYates",
              "label": "fisherYates should shuffle small arrays",
              "name": "fisherYates should shuffle small arrays@fisherYates.test.js",
              "pdgs": [
                {
                  "pdgTitle": "fisherYates([])",
                  "uniqueTitle": "fisherYates([])",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/fisher-yates/fisherYates.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 110
                      },
                      "end": {
                        "line": 17,
                        "column": 1,
                        "index": 492
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/fisher-yates/__test__/fisherYates.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 42,
                        "index": 242
                      },
                      "end": {
                        "line": 9,
                        "column": 3,
                        "index": 334
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "fisherYates([1])",
                  "uniqueTitle": "fisherYates([1])",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/fisher-yates/fisherYates.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 110
                      },
                      "end": {
                        "line": 17,
                        "column": 1,
                        "index": 492
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/fisher-yates/__test__/fisherYates.test.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 42,
                        "index": 242
                      },
                      "end": {
                        "line": 9,
                        "column": 3,
                        "index": 334
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#174",
              "algo": "fisher-yates_fisherYates",
              "label": "fisherYates should shuffle array randomly",
              "name": "fisherYates should shuffle array randomly@fisherYates.test.js",
              "pdgs": [
                {
                  "pdgTitle": "fisherYates([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "fisherYates([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/fisher-yates/fisherYates.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 110
                      },
                      "end": {
                        "line": 17,
                        "column": 1,
                        "index": 492
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/fisher-yates/__test__/fisherYates.test.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 44,
                        "index": 384
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 649
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSort.sort([17,7,10,16,4,18,3,14,9,8,5,13,11,6,19,12,2,15,1,20])",
                  "uniqueTitle": "QuickSort.sort([17,7,10,16,4,18,3,14,9,8,5,13,11,6,19,12,2,15,1,20])",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/fisher-yates/__test__/fisherYates.test.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 44,
                        "index": 384
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 649
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "knapsack-problem",
          "exercises": [
            {
              "id": "javascript-algorithms#175",
              "algo": "knapsack-problem_Knapsack",
              "label": "Knapsack should solve 0/1 knapsack problem",
              "name": "Knapsack should solve 0/1 knapsack problem@Knapsack.test.js",
              "pdgs": [
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 48,
                        "index": 162
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 853
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#2",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 48,
                        "index": 162
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 853
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#3",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 48,
                        "index": 162
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 853
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#4",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 48,
                        "index": 162
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 853
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.constructor([{},{},{},{}], 7)",
                  "uniqueTitle": "Knapsack.constructor([{},{},{},{}], 7)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 42,
                        "index": 230
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 48,
                        "index": 162
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 853
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.solveZeroOneKnapsackProblem()",
                  "uniqueTitle": "Knapsack.solveZeroOneKnapsackProblem()",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 64,
                        "column": 32,
                        "index": 1691
                      },
                      "end": {
                        "line": 175,
                        "column": 3,
                        "index": 5939
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 48,
                        "index": 162
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 853
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "contextId": 110,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 48,
                        "index": 162
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 853
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#2",
                  "contextId": 112,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 48,
                        "index": 162
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 853
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#3",
                  "contextId": 115,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 48,
                        "index": 162
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 853
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#4",
                  "contextId": 117,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 48,
                        "index": 162
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 853
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()",
                  "contextId": 119,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 48,
                        "index": 162
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 853
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#2",
                  "contextId": 120,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 48,
                        "index": 162
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 853
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#5",
                  "contextId": 122,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#6",
                  "contextId": 123,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#7",
                  "contextId": 124,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#8",
                  "contextId": 125,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.constructor([{},{},{},{}], 7)",
                  "uniqueTitle": "Knapsack.constructor([{},{},{},{}], 7)#2",
                  "contextId": 126,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 42,
                        "index": 230
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.solveZeroOneKnapsackProblem()",
                  "uniqueTitle": "Knapsack.solveZeroOneKnapsackProblem()#2",
                  "contextId": 127,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 64,
                        "column": 32,
                        "index": 1691
                      },
                      "end": {
                        "line": 175,
                        "column": 3,
                        "index": 5939
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#5",
                  "contextId": 223,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#6",
                  "contextId": 225,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#7",
                  "contextId": 228,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#8",
                  "contextId": 230,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#3",
                  "contextId": 232,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#4",
                  "contextId": 233,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#9",
                  "contextId": 235,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 47,
                        "column": 74,
                        "index": 1704
                      },
                      "end": {
                        "line": 64,
                        "column": 3,
                        "index": 2261
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#10",
                  "contextId": 236,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 47,
                        "column": 74,
                        "index": 1704
                      },
                      "end": {
                        "line": 64,
                        "column": 3,
                        "index": 2261
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#11",
                  "contextId": 237,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 47,
                        "column": 74,
                        "index": 1704
                      },
                      "end": {
                        "line": 64,
                        "column": 3,
                        "index": 2261
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#12",
                  "contextId": 238,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 47,
                        "column": 74,
                        "index": 1704
                      },
                      "end": {
                        "line": 64,
                        "column": 3,
                        "index": 2261
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.constructor([{},{},{},{}], 7)",
                  "uniqueTitle": "Knapsack.constructor([{},{},{},{}], 7)#3",
                  "contextId": 239,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 42,
                        "index": 230
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 47,
                        "column": 74,
                        "index": 1704
                      },
                      "end": {
                        "line": 64,
                        "column": 3,
                        "index": 2261
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.solveZeroOneKnapsackProblem()",
                  "uniqueTitle": "Knapsack.solveZeroOneKnapsackProblem()#3",
                  "contextId": 240,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 64,
                        "column": 32,
                        "index": 1691
                      },
                      "end": {
                        "line": 175,
                        "column": 3,
                        "index": 5939
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 47,
                        "column": 74,
                        "index": 1704
                      },
                      "end": {
                        "line": 64,
                        "column": 3,
                        "index": 2261
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#13",
                  "contextId": 338,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#14",
                  "contextId": 339,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#15",
                  "contextId": 340,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#16",
                  "contextId": 341,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#17",
                  "contextId": 342,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#18",
                  "contextId": 343,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.constructor([{},{},{},{},{},{}], 3)",
                  "uniqueTitle": "Knapsack.constructor([{},{},{},{},{},{}], 3)",
                  "contextId": 344,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 42,
                        "index": 230
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.solveZeroOneKnapsackProblem()",
                  "uniqueTitle": "Knapsack.solveZeroOneKnapsackProblem()#4",
                  "contextId": 345,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 64,
                        "column": 32,
                        "index": 1691
                      },
                      "end": {
                        "line": 175,
                        "column": 3,
                        "index": 5939
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#9",
                  "contextId": 511,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#10",
                  "contextId": 513,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#11",
                  "contextId": 515,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#12",
                  "contextId": 518,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#13",
                  "contextId": 520,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#14",
                  "contextId": 522,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#5",
                  "contextId": 524,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#6",
                  "contextId": 525,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#7",
                  "contextId": 526,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#176",
              "algo": "knapsack-problem_Knapsack",
              "label": "Knapsack should solve 0/1 knapsack problem regardless of items order",
              "name": "Knapsack should solve 0/1 knapsack problem regardless of items order@Knapsack.test.js",
              "pdgs": [
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#19",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#20",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#21",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#22",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.constructor([{},{},{},{}], 7)",
                  "uniqueTitle": "Knapsack.constructor([{},{},{},{}], 7)#4",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 42,
                        "index": 230
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.solveZeroOneKnapsackProblem()",
                  "uniqueTitle": "Knapsack.solveZeroOneKnapsackProblem()#5",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 64,
                        "column": 32,
                        "index": 1691
                      },
                      "end": {
                        "line": 175,
                        "column": 3,
                        "index": 5939
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#15",
                  "contextId": 110,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#16",
                  "contextId": 112,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#17",
                  "contextId": 115,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#18",
                  "contextId": 117,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#8",
                  "contextId": 119,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#9",
                  "contextId": 120,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 74,
                        "index": 933
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1624
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#177",
              "algo": "knapsack-problem_Knapsack",
              "label": "Knapsack should solve 0/1 knapsack problem with impossible items set",
              "name": "Knapsack should solve 0/1 knapsack problem with impossible items set@Knapsack.test.js",
              "pdgs": [
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#23",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 47,
                        "column": 74,
                        "index": 1704
                      },
                      "end": {
                        "line": 64,
                        "column": 3,
                        "index": 2261
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#24",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 47,
                        "column": 74,
                        "index": 1704
                      },
                      "end": {
                        "line": 64,
                        "column": 3,
                        "index": 2261
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#25",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 47,
                        "column": 74,
                        "index": 1704
                      },
                      "end": {
                        "line": 64,
                        "column": 3,
                        "index": 2261
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#26",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 47,
                        "column": 74,
                        "index": 1704
                      },
                      "end": {
                        "line": 64,
                        "column": 3,
                        "index": 2261
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.constructor([{},{},{},{}], 7)",
                  "uniqueTitle": "Knapsack.constructor([{},{},{},{}], 7)#5",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 42,
                        "index": 230
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 47,
                        "column": 74,
                        "index": 1704
                      },
                      "end": {
                        "line": 64,
                        "column": 3,
                        "index": 2261
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.solveZeroOneKnapsackProblem()",
                  "uniqueTitle": "Knapsack.solveZeroOneKnapsackProblem()#6",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 64,
                        "column": 32,
                        "index": 1691
                      },
                      "end": {
                        "line": 175,
                        "column": 3,
                        "index": 5939
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 47,
                        "column": 74,
                        "index": 1704
                      },
                      "end": {
                        "line": 64,
                        "column": 3,
                        "index": 2261
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#178",
              "algo": "knapsack-problem_Knapsack",
              "label": "Knapsack should solve 0/1 knapsack problem with all equal weights",
              "name": "Knapsack should solve 0/1 knapsack problem with all equal weights@Knapsack.test.js",
              "pdgs": [
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#27",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#28",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#29",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#30",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#31",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#32",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.constructor([{},{},{},{},{},{}], 3)",
                  "uniqueTitle": "Knapsack.constructor([{},{},{},{},{},{}], 3)#2",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 42,
                        "index": 230
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.solveZeroOneKnapsackProblem()",
                  "uniqueTitle": "Knapsack.solveZeroOneKnapsackProblem()#7",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 64,
                        "column": 32,
                        "index": 1691
                      },
                      "end": {
                        "line": 175,
                        "column": 3,
                        "index": 5939
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#19",
                  "contextId": 182,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#20",
                  "contextId": 184,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#21",
                  "contextId": 186,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#22",
                  "contextId": 189,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#23",
                  "contextId": 191,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#24",
                  "contextId": 193,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#10",
                  "contextId": 195,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#11",
                  "contextId": 196,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#12",
                  "contextId": 197,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 71,
                        "index": 2338
                      },
                      "end": {
                        "line": 88,
                        "column": 3,
                        "index": 3199
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#179",
              "algo": "knapsack-problem_Knapsack",
              "label": "Knapsack should solve unbound knapsack problem",
              "name": "Knapsack should solve unbound knapsack problem@Knapsack.test.js",
              "pdgs": [
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#33",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#34",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#35",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#36",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#37",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.constructor([{},{},{},{},{}], 15)",
                  "uniqueTitle": "Knapsack.constructor([{},{},{},{},{}], 15)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 42,
                        "index": 230
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.solveUnboundedKnapsackProblem()",
                  "uniqueTitle": "Knapsack.solveUnboundedKnapsackProblem()",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 179,
                        "column": 34,
                        "index": 6040
                      },
                      "end": {
                        "line": 210,
                        "column": 3,
                        "index": 7178
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#25",
                  "contextId": 217,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#26",
                  "contextId": 219,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#27",
                  "contextId": 221,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#28",
                  "contextId": 223,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#29",
                  "contextId": 225,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#30",
                  "contextId": 228,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#31",
                  "contextId": 230,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#32",
                  "contextId": 232,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#33",
                  "contextId": 234,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#34",
                  "contextId": 236,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#13",
                  "contextId": 238,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#14",
                  "contextId": 239,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#15",
                  "contextId": 240,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#16",
                  "contextId": 241,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#17",
                  "contextId": 242,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 52,
                        "index": 3257
                      },
                      "end": {
                        "line": 113,
                        "column": 3,
                        "index": 4332
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "contextId": 244,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#2",
                  "contextId": 245,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#3",
                  "contextId": 246,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#4",
                  "contextId": 247,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#5",
                  "contextId": 248,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.constructor([{},{},{},{},{}], 17)",
                  "uniqueTitle": "Knapsack.constructor([{},{},{},{},{}], 17)",
                  "contextId": 249,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 42,
                        "index": 230
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.solveUnboundedKnapsackProblem()",
                  "uniqueTitle": "Knapsack.solveUnboundedKnapsackProblem()#2",
                  "contextId": 250,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 179,
                        "column": 34,
                        "index": 6040
                      },
                      "end": {
                        "line": 210,
                        "column": 3,
                        "index": 7178
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#35",
                  "contextId": 434,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#36",
                  "contextId": 436,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#37",
                  "contextId": 438,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#38",
                  "contextId": 441,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#39",
                  "contextId": 443,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#40",
                  "contextId": 445,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#18",
                  "contextId": 447,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#19",
                  "contextId": 448,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#20",
                  "contextId": 449,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#6",
                  "contextId": 451,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#7",
                  "contextId": 452,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#8",
                  "contextId": 453,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#9",
                  "contextId": 454,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#10",
                  "contextId": 455,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.constructor([{},{},{},{},{}], 60)",
                  "uniqueTitle": "Knapsack.constructor([{},{},{},{},{}], 60)",
                  "contextId": 456,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 42,
                        "index": 230
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.solveUnboundedKnapsackProblem()",
                  "uniqueTitle": "Knapsack.solveUnboundedKnapsackProblem()#3",
                  "contextId": 457,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 179,
                        "column": 34,
                        "index": 6040
                      },
                      "end": {
                        "line": 210,
                        "column": 3,
                        "index": 7178
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#41",
                  "contextId": 659,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#42",
                  "contextId": 661,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#43",
                  "contextId": 663,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#44",
                  "contextId": 665,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#45",
                  "contextId": 667,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#46",
                  "contextId": 670,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#47",
                  "contextId": 672,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#48",
                  "contextId": 674,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#49",
                  "contextId": 676,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#50",
                  "contextId": 678,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#21",
                  "contextId": 680,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#22",
                  "contextId": 681,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#23",
                  "contextId": 682,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#24",
                  "contextId": 683,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#25",
                  "contextId": 684,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#180",
              "algo": "knapsack-problem_Knapsack",
              "label": "Knapsack should solve unbound knapsack problem with items in stock",
              "name": "Knapsack should solve unbound knapsack problem with items in stock@Knapsack.test.js",
              "pdgs": [
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#11",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#12",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#13",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#14",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#15",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.constructor([{},{},{},{},{}], 17)",
                  "uniqueTitle": "Knapsack.constructor([{},{},{},{},{}], 17)#2",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 42,
                        "index": 230
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.solveUnboundedKnapsackProblem()",
                  "uniqueTitle": "Knapsack.solveUnboundedKnapsackProblem()#4",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 179,
                        "column": 34,
                        "index": 6040
                      },
                      "end": {
                        "line": 210,
                        "column": 3,
                        "index": 7178
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#51",
                  "contextId": 199,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#52",
                  "contextId": 201,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#53",
                  "contextId": 203,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#54",
                  "contextId": 206,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#55",
                  "contextId": 208,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#56",
                  "contextId": 210,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#26",
                  "contextId": 212,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#27",
                  "contextId": 213,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#28",
                  "contextId": 214,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 72,
                        "index": 4410
                      },
                      "end": {
                        "line": 136,
                        "column": 3,
                        "index": 5427
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#16",
                  "contextId": 216,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#17",
                  "contextId": 217,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#18",
                  "contextId": 218,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#19",
                  "contextId": 219,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#20",
                  "contextId": 220,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.constructor([{},{},{},{},{}], 60)",
                  "uniqueTitle": "Knapsack.constructor([{},{},{},{},{}], 60)#2",
                  "contextId": 221,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 42,
                        "index": 230
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.solveUnboundedKnapsackProblem()",
                  "uniqueTitle": "Knapsack.solveUnboundedKnapsackProblem()#5",
                  "contextId": 222,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 179,
                        "column": 34,
                        "index": 6040
                      },
                      "end": {
                        "line": 210,
                        "column": 3,
                        "index": 7178
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#57",
                  "contextId": 424,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#58",
                  "contextId": 426,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#59",
                  "contextId": 428,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#60",
                  "contextId": 430,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#61",
                  "contextId": 432,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#62",
                  "contextId": 435,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#63",
                  "contextId": 437,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#64",
                  "contextId": 439,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#65",
                  "contextId": 441,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#66",
                  "contextId": 443,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#29",
                  "contextId": 445,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#30",
                  "contextId": 446,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#31",
                  "contextId": 447,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#32",
                  "contextId": 448,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#33",
                  "contextId": 449,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#181",
              "algo": "knapsack-problem_Knapsack",
              "label": "Knapsack should solve unbound knapsack problem with items in stock and max weight more than sum of all items",
              "name": "Knapsack should solve unbound knapsack problem with items in stock and max weight more than sum of all items@Knapsack.test.js",
              "pdgs": [
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#21",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#22",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#23",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#24",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#25",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.constructor([{},{},{},{},{}], 60)",
                  "uniqueTitle": "Knapsack.constructor([{},{},{},{},{}], 60)#3",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 42,
                        "index": 230
                      },
                      "end": {
                        "line": 12,
                        "column": 3,
                        "index": 344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "Knapsack.solveUnboundedKnapsackProblem()",
                  "uniqueTitle": "Knapsack.solveUnboundedKnapsackProblem()#6",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 179,
                        "column": 34,
                        "index": 6040
                      },
                      "end": {
                        "line": 210,
                        "column": 3,
                        "index": 7178
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#67",
                  "contextId": 217,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#68",
                  "contextId": 219,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#69",
                  "contextId": 221,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#70",
                  "contextId": 223,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#71",
                  "contextId": 225,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 214,
                        "column": 60,
                        "index": 7301
                      },
                      "end": {
                        "line": 216,
                        "column": 5,
                        "index": 7354
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#72",
                  "contextId": 228,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#73",
                  "contextId": 230,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#74",
                  "contextId": 232,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#75",
                  "contextId": 234,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
                  "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#76",
                  "contextId": 236,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
                    "loc": {
                      "start": {
                        "line": 221,
                        "column": 60,
                        "index": 7488
                      },
                      "end": {
                        "line": 223,
                        "column": 5,
                        "index": 7542
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#34",
                  "contextId": 238,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#35",
                  "contextId": 239,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#36",
                  "contextId": 240,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#37",
                  "contextId": 241,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#38",
                  "contextId": 242,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 114,
                        "index": 5547
                      },
                      "end": {
                        "line": 161,
                        "column": 3,
                        "index": 6762
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#182",
              "algo": "knapsack-problem_KnapsackItem",
              "label": "KnapsackItem should create knapsack item and count its total weight and value",
              "name": "KnapsackItem should create knapsack item and count its total weight and value@KnapsackItem.test.js",
              "pdgs": [
                {
                  "pdgTitle": "KnapsackItem.constructor({value,weight})",
                  "uniqueTitle": "KnapsackItem.constructor({value,weight})#38",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 20,
                        "index": 350
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 721
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/KnapsackItem.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 79,
                        "index": 160
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1308
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#39",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/KnapsackItem.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 79,
                        "index": 160
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1308
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#40",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/KnapsackItem.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 79,
                        "index": 160
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1308
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "KnapsackItem.toString()",
                  "uniqueTitle": "KnapsackItem.toString()#41",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 13,
                        "index": 1044
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1115
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/knapsack-problem/__test__/KnapsackItem.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 79,
                        "index": 160
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1308
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "longest-common-subsequence",
          "exercises": [
            {
              "id": "javascript-algorithms#183",
              "algo": "longest-common-subsequence_longestCommonSubsequence",
              "label": "longestCommonSubsequence should find longest common subsequence for two strings",
              "name": "longestCommonSubsequence should find longest common subsequence for two strings@longestCommonSubsequence.test.js",
              "pdgs": [
                {
                  "pdgTitle": "longestCommonSubsequence([\"\"], [\"\"])",
                  "uniqueTitle": "longestCommonSubsequence([\"\"], [\"\"])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/longest-common-subsequence/longestCommonSubsequence.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 61,
                        "index": 148
                      },
                      "end": {
                        "line": 65,
                        "column": 1,
                        "index": 1948
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/longest-common-subsequence/__test__/longestCommonSubsequence.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 186
                      },
                      "end": {
                        "line": 35,
                        "column": 3,
                        "index": 1044
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "longestCommonSubsequence([\"\"], [\"A\",\"B\",\"C\"])",
                  "uniqueTitle": "longestCommonSubsequence([\"\"], [\"A\",\"B\",\"C\"])",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/longest-common-subsequence/longestCommonSubsequence.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 61,
                        "index": 148
                      },
                      "end": {
                        "line": 65,
                        "column": 1,
                        "index": 1948
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/longest-common-subsequence/__test__/longestCommonSubsequence.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 186
                      },
                      "end": {
                        "line": 35,
                        "column": 3,
                        "index": 1044
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "longestCommonSubsequence([\"A\",\"B\",\"C\"], [\"\"])",
                  "uniqueTitle": "longestCommonSubsequence([\"A\",\"B\",\"C\"], [\"\"])",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/longest-common-subsequence/longestCommonSubsequence.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 61,
                        "index": 148
                      },
                      "end": {
                        "line": 65,
                        "column": 1,
                        "index": 1948
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/longest-common-subsequence/__test__/longestCommonSubsequence.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 186
                      },
                      "end": {
                        "line": 35,
                        "column": 3,
                        "index": 1044
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "longestCommonSubsequence([\"A\",\"B\",\"C\"], [\"D\",\"E\",\"F\",\"G\"])",
                  "uniqueTitle": "longestCommonSubsequence([\"A\",\"B\",\"C\"], [\"D\",\"E\",\"F\",\"G\"])",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/longest-common-subsequence/longestCommonSubsequence.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 61,
                        "index": 148
                      },
                      "end": {
                        "line": 65,
                        "column": 1,
                        "index": 1948
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/longest-common-subsequence/__test__/longestCommonSubsequence.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 186
                      },
                      "end": {
                        "line": 35,
                        "column": 3,
                        "index": 1044
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "longestCommonSubsequence([\"A\",\"B\",\"C\",\"D\",\"G\",\"H\"], [\"A\",\"E\",\"D\",\"F\",\"H\",\"R\"])",
                  "uniqueTitle": "longestCommonSubsequence([\"A\",\"B\",\"C\",\"D\",\"G\",\"H\"], [\"A\",\"E\",\"D\",\"F\",\"H\",\"R\"])",
                  "contextId": 22,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/longest-common-subsequence/longestCommonSubsequence.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 61,
                        "index": 148
                      },
                      "end": {
                        "line": 65,
                        "column": 1,
                        "index": 1948
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/longest-common-subsequence/__test__/longestCommonSubsequence.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 186
                      },
                      "end": {
                        "line": 35,
                        "column": 3,
                        "index": 1044
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "longestCommonSubsequence([\"A\",\"G\",\"G\",\"T\",\"A\",\"B\"], [\"G\",\"X\",\"T\",\"X\",\"A\",\"Y\",\"B\"])",
                  "uniqueTitle": "longestCommonSubsequence([\"A\",\"G\",\"G\",\"T\",\"A\",\"B\"], [\"G\",\"X\",\"T\",\"X\",\"A\",\"Y\",\"B\"])",
                  "contextId": 30,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/longest-common-subsequence/longestCommonSubsequence.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 61,
                        "index": 148
                      },
                      "end": {
                        "line": 65,
                        "column": 1,
                        "index": 1948
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/longest-common-subsequence/__test__/longestCommonSubsequence.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 186
                      },
                      "end": {
                        "line": 35,
                        "column": 3,
                        "index": 1044
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "longestCommonSubsequence([\"A\",\"B\",\"C\",\"D\",\"A\",\"F\"], [\"A\",\"C\",\"B\",\"C\",\"F\"])",
                  "uniqueTitle": "longestCommonSubsequence([\"A\",\"B\",\"C\",\"D\",\"A\",\"F\"], [\"A\",\"C\",\"B\",\"C\",\"F\"])",
                  "contextId": 39,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/longest-common-subsequence/longestCommonSubsequence.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 61,
                        "index": 148
                      },
                      "end": {
                        "line": 65,
                        "column": 1,
                        "index": 1948
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/longest-common-subsequence/__test__/longestCommonSubsequence.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 69,
                        "index": 186
                      },
                      "end": {
                        "line": 35,
                        "column": 3,
                        "index": 1044
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "longest-increasing-subsequence",
          "exercises": [
            {
              "id": "javascript-algorithms#184",
              "algo": "longest-increasing-subsequence_dpLongestIncreasingSubsequence",
              "label": "dpLongestIncreasingSubsequence should find longest increasing subsequence length",
              "name": "dpLongestIncreasingSubsequence should find longest increasing subsequence length@dpLongestIncreasingSubsequence.test.js",
              "pdgs": [
                {
                  "pdgTitle": "dpLongestIncreasingSubsequence([9,8,7,6,5,4,3,2,1,0])",
                  "uniqueTitle": "dpLongestIncreasingSubsequence([9,8,7,6,5,4,3,2,1,0])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/longest-increasing-subsequence/dpLongestIncreasingSubsequence.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 65,
                        "index": 229
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1976
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/longest-increasing-subsequence/__test__/dpLongestIncreasingSubsequence.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 199
                      },
                      "end": {
                        "line": 35,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpLongestIncreasingSubsequence([0,1,2,3,4,5,6,7,8,9])",
                  "uniqueTitle": "dpLongestIncreasingSubsequence([0,1,2,3,4,5,6,7,8,9])",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/longest-increasing-subsequence/dpLongestIncreasingSubsequence.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 65,
                        "index": 229
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1976
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/longest-increasing-subsequence/__test__/dpLongestIncreasingSubsequence.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 199
                      },
                      "end": {
                        "line": 35,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpLongestIncreasingSubsequence([3,4,-1,0,6,2,3])",
                  "uniqueTitle": "dpLongestIncreasingSubsequence([3,4,-1,0,6,2,3])",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/longest-increasing-subsequence/dpLongestIncreasingSubsequence.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 65,
                        "index": 229
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1976
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/longest-increasing-subsequence/__test__/dpLongestIncreasingSubsequence.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 199
                      },
                      "end": {
                        "line": 35,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpLongestIncreasingSubsequence([0,8,4,12,2,10,6,14,1,9,5,13,3,11,7,15])",
                  "uniqueTitle": "dpLongestIncreasingSubsequence([0,8,4,12,2,10,6,14,1,9,5,13,3,11,7,15])",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/longest-increasing-subsequence/dpLongestIncreasingSubsequence.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 65,
                        "index": 229
                      },
                      "end": {
                        "line": 53,
                        "column": 1,
                        "index": 1976
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/longest-increasing-subsequence/__test__/dpLongestIncreasingSubsequence.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 64,
                        "index": 199
                      },
                      "end": {
                        "line": 35,
                        "column": 3,
                        "index": 943
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "maximum-subarray",
          "exercises": [
            {
              "id": "javascript-algorithms#185",
              "algo": "maximum-subarray_dpMaximumSubarray",
              "label": "dpMaximumSubarray should find maximum subarray using the dynamic programming algorithm",
              "name": "dpMaximumSubarray should find maximum subarray using the dynamic programming algorithm@dpMaximumSubarray.test.js",
              "pdgs": [
                {
                  "pdgTitle": "dpMaximumSubarray([])",
                  "uniqueTitle": "dpMaximumSubarray([])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 179
                      },
                      "end": {
                        "line": 45,
                        "column": 1,
                        "index": 1520
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 83,
                        "index": 179
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 965
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpMaximumSubarray([0,0])",
                  "uniqueTitle": "dpMaximumSubarray([0,0])",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 179
                      },
                      "end": {
                        "line": 45,
                        "column": 1,
                        "index": 1520
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 83,
                        "index": 179
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 965
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpMaximumSubarray([0,0,1])",
                  "uniqueTitle": "dpMaximumSubarray([0,0,1])",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 179
                      },
                      "end": {
                        "line": 45,
                        "column": 1,
                        "index": 1520
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 83,
                        "index": 179
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 965
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpMaximumSubarray([0,0,1,2])",
                  "uniqueTitle": "dpMaximumSubarray([0,0,1,2])",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 179
                      },
                      "end": {
                        "line": 45,
                        "column": 1,
                        "index": 1520
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 83,
                        "index": 179
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 965
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpMaximumSubarray([0,0,-1,2])",
                  "uniqueTitle": "dpMaximumSubarray([0,0,-1,2])",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 179
                      },
                      "end": {
                        "line": 45,
                        "column": 1,
                        "index": 1520
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 83,
                        "index": 179
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 965
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpMaximumSubarray([-1,-2,-3,-4,-5])",
                  "uniqueTitle": "dpMaximumSubarray([-1,-2,-3,-4,-5])",
                  "contextId": 23,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 179
                      },
                      "end": {
                        "line": 45,
                        "column": 1,
                        "index": 1520
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 83,
                        "index": 179
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 965
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpMaximumSubarray([1,2,3,2,3,4,5])",
                  "uniqueTitle": "dpMaximumSubarray([1,2,3,2,3,4,5])",
                  "contextId": 29,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 179
                      },
                      "end": {
                        "line": 45,
                        "column": 1,
                        "index": 1520
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 83,
                        "index": 179
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 965
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpMaximumSubarray([-2,1,-3,4,-1,2,1,-5,4])",
                  "uniqueTitle": "dpMaximumSubarray([-2,1,-3,4,-1,2,1,-5,4])",
                  "contextId": 37,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 179
                      },
                      "end": {
                        "line": 45,
                        "column": 1,
                        "index": 1520
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 83,
                        "index": 179
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 965
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpMaximumSubarray([-2,-3,4,-1,-2,1,5,-3])",
                  "uniqueTitle": "dpMaximumSubarray([-2,-3,4,-1,-2,1,5,-3])",
                  "contextId": 47,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 179
                      },
                      "end": {
                        "line": 45,
                        "column": 1,
                        "index": 1520
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 83,
                        "index": 179
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 965
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpMaximumSubarray([1,-3,2,-5,7,6,-1,4,11,-23])",
                  "uniqueTitle": "dpMaximumSubarray([1,-3,2,-5,7,6,-1,4,11,-23])",
                  "contextId": 56,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 179
                      },
                      "end": {
                        "line": 45,
                        "column": 1,
                        "index": 1520
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 83,
                        "index": 179
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 965
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#186",
              "algo": "maximum-subarray_bfMaximumSubarray",
              "label": "bfMaximumSubarray should find maximum subarray using the brute force algorithm",
              "name": "bfMaximumSubarray should find maximum subarray using the brute force algorithm@bfMaximumSubarray.test.js",
              "pdgs": [
                {
                  "pdgTitle": "bfMaximumSubarray([])",
                  "uniqueTitle": "bfMaximumSubarray([])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 173
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 888
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 75,
                        "index": 171
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 957
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bfMaximumSubarray([0,0])",
                  "uniqueTitle": "bfMaximumSubarray([0,0])",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 173
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 888
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 75,
                        "index": 171
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 957
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bfMaximumSubarray([0,0,1])",
                  "uniqueTitle": "bfMaximumSubarray([0,0,1])",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 173
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 888
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 75,
                        "index": 171
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 957
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bfMaximumSubarray([0,0,1,2])",
                  "uniqueTitle": "bfMaximumSubarray([0,0,1,2])",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 173
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 888
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 75,
                        "index": 171
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 957
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bfMaximumSubarray([0,0,-1,2])",
                  "uniqueTitle": "bfMaximumSubarray([0,0,-1,2])",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 173
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 888
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 75,
                        "index": 171
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 957
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bfMaximumSubarray([-1,-2,-3,-4,-5])",
                  "uniqueTitle": "bfMaximumSubarray([-1,-2,-3,-4,-5])",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 173
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 888
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 75,
                        "index": 171
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 957
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bfMaximumSubarray([1,2,3,2,3,4,5])",
                  "uniqueTitle": "bfMaximumSubarray([1,2,3,2,3,4,5])",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 173
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 888
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 75,
                        "index": 171
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 957
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bfMaximumSubarray([-2,1,-3,4,-1,2,1,-5,4])",
                  "uniqueTitle": "bfMaximumSubarray([-2,1,-3,4,-1,2,1,-5,4])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 173
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 888
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 75,
                        "index": 171
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 957
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bfMaximumSubarray([-2,-3,4,-1,-2,1,5,-3])",
                  "uniqueTitle": "bfMaximumSubarray([-2,-3,4,-1,-2,1,5,-3])",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 173
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 888
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 75,
                        "index": 171
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 957
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bfMaximumSubarray([1,-3,2,-5,7,6,-1,4,11,-23])",
                  "uniqueTitle": "bfMaximumSubarray([1,-3,2,-5,7,6,-1,4,11,-23])",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 54,
                        "index": 173
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 888
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 75,
                        "index": 171
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 957
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#187",
              "algo": "maximum-subarray_dcMaximumSubarraySum",
              "label": "dcMaximumSubarraySum should find maximum subarray sum using the divide and conquer algorithm",
              "name": "dcMaximumSubarraySum should find maximum subarray sum using the divide and conquer algorithm@dcMaximumSubarraySum.test.js",
              "pdgs": [
                {
                  "pdgTitle": "dcMaximumSubarraySum([])",
                  "uniqueTitle": "dcMaximumSubarraySum([])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 57,
                        "index": 217
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 1277
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 86,
                        "index": 188
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 834
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dcMaximumSubarraySum([0,0])",
                  "uniqueTitle": "dcMaximumSubarraySum([0,0])",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 57,
                        "index": 217
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 1277
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 86,
                        "index": 188
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 834
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dcMaximumSubarraySum([0,0,1])",
                  "uniqueTitle": "dcMaximumSubarraySum([0,0,1])",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 57,
                        "index": 217
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 1277
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 86,
                        "index": 188
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 834
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dcMaximumSubarraySum([0,0,1,2])",
                  "uniqueTitle": "dcMaximumSubarraySum([0,0,1,2])",
                  "contextId": 25,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 57,
                        "index": 217
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 1277
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 86,
                        "index": 188
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 834
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dcMaximumSubarraySum([0,0,-1,2])",
                  "uniqueTitle": "dcMaximumSubarraySum([0,0,-1,2])",
                  "contextId": 41,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 57,
                        "index": 217
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 1277
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 86,
                        "index": 188
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 834
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dcMaximumSubarraySum([-1,-2,-3,-4,-5])",
                  "uniqueTitle": "dcMaximumSubarraySum([-1,-2,-3,-4,-5])",
                  "contextId": 57,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 57,
                        "index": 217
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 1277
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 86,
                        "index": 188
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 834
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dcMaximumSubarraySum([1,2,3,2,3,4,5])",
                  "uniqueTitle": "dcMaximumSubarraySum([1,2,3,2,3,4,5])",
                  "contextId": 79,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 57,
                        "index": 217
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 1277
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 86,
                        "index": 188
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 834
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dcMaximumSubarraySum([-2,1,-3,4,-1,2,1,-5,4])",
                  "uniqueTitle": "dcMaximumSubarraySum([-2,1,-3,4,-1,2,1,-5,4])",
                  "contextId": 116,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 57,
                        "index": 217
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 1277
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 86,
                        "index": 188
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 834
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dcMaximumSubarraySum([-2,-3,4,-1,-2,1,5,-3])",
                  "uniqueTitle": "dcMaximumSubarraySum([-2,-3,4,-1,-2,1,5,-3])",
                  "contextId": 172,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 57,
                        "index": 217
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 1277
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 86,
                        "index": 188
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 834
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dcMaximumSubarraySum([1,-3,2,-5,7,6,-1,4,11,-23])",
                  "uniqueTitle": "dcMaximumSubarraySum([1,-3,2,-5,7,6,-1,4,11,-23])",
                  "contextId": 218,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 57,
                        "index": 217
                      },
                      "end": {
                        "line": 33,
                        "column": 1,
                        "index": 1277
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 86,
                        "index": 188
                      },
                      "end": {
                        "line": 15,
                        "column": 3,
                        "index": 834
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "permutations",
          "exercises": [
            {
              "id": "javascript-algorithms#188",
              "algo": "permutations_permutateWithoutRepetitions",
              "label": "permutateWithoutRepetitions should permutate string",
              "name": "permutateWithoutRepetitions should permutate string@permutateWithoutRepetitions.test.js",
              "pdgs": [
                {
                  "pdgTitle": "permutateWithoutRepetitions([\"A\"])",
                  "uniqueTitle": "permutateWithoutRepetitions([\"A\"])",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/permutations/permutateWithoutRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 72,
                        "index": 136
                      },
                      "end": {
                        "line": 43,
                        "column": 1,
                        "index": 1268
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/permutations/__test__/permutateWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 38,
                        "index": 224
                      },
                      "end": {
                        "line": 72,
                        "column": 3,
                        "index": 2121
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "permutateWithoutRepetitions([\"A\",\"B\"])",
                  "uniqueTitle": "permutateWithoutRepetitions([\"A\",\"B\"])",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/permutations/permutateWithoutRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 72,
                        "index": 136
                      },
                      "end": {
                        "line": 43,
                        "column": 1,
                        "index": 1268
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/permutations/__test__/permutateWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 38,
                        "index": 224
                      },
                      "end": {
                        "line": 72,
                        "column": 3,
                        "index": 2121
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "permutateWithoutRepetitions([\"A\",\"A\"])",
                  "uniqueTitle": "permutateWithoutRepetitions([\"A\",\"A\"])",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/permutations/permutateWithoutRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 72,
                        "index": 136
                      },
                      "end": {
                        "line": 43,
                        "column": 1,
                        "index": 1268
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/permutations/__test__/permutateWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 38,
                        "index": 224
                      },
                      "end": {
                        "line": 72,
                        "column": 3,
                        "index": 2121
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "permutateWithoutRepetitions([\"A\",\"B\",\"C\"])",
                  "uniqueTitle": "permutateWithoutRepetitions([\"A\",\"B\",\"C\"])",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/permutations/permutateWithoutRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 72,
                        "index": 136
                      },
                      "end": {
                        "line": 43,
                        "column": 1,
                        "index": 1268
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/permutations/__test__/permutateWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 38,
                        "index": 224
                      },
                      "end": {
                        "line": 72,
                        "column": 3,
                        "index": 2121
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "factorial(3)",
                  "uniqueTitle": "factorial(3)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/factorial/factorial.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 42,
                        "index": 100
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 210
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/permutations/__test__/permutateWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 38,
                        "index": 224
                      },
                      "end": {
                        "line": 72,
                        "column": 3,
                        "index": 2121
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "permutateWithoutRepetitions([\"A\",\"B\",\"C\",\"D\"])",
                  "uniqueTitle": "permutateWithoutRepetitions([\"A\",\"B\",\"C\",\"D\"])",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/permutations/permutateWithoutRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 72,
                        "index": 136
                      },
                      "end": {
                        "line": 43,
                        "column": 1,
                        "index": 1268
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/permutations/__test__/permutateWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 38,
                        "index": 224
                      },
                      "end": {
                        "line": 72,
                        "column": 3,
                        "index": 2121
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "factorial(4)",
                  "uniqueTitle": "factorial(4)#4",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/factorial/factorial.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 42,
                        "index": 100
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 210
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/permutations/__test__/permutateWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 38,
                        "index": 224
                      },
                      "end": {
                        "line": 72,
                        "column": 3,
                        "index": 2121
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "permutateWithoutRepetitions([\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"])",
                  "uniqueTitle": "permutateWithoutRepetitions([\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"])",
                  "contextId": 20,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/permutations/permutateWithoutRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 72,
                        "index": 136
                      },
                      "end": {
                        "line": 43,
                        "column": 1,
                        "index": 1268
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/permutations/__test__/permutateWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 38,
                        "index": 224
                      },
                      "end": {
                        "line": 72,
                        "column": 3,
                        "index": 2121
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "factorial(6)",
                  "uniqueTitle": "factorial(6)",
                  "contextId": 26,
                  "algoLoc": {
                    "filePath": "src/algorithms/math/factorial/factorial.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 42,
                        "index": 100
                      },
                      "end": {
                        "line": 13,
                        "column": 1,
                        "index": 210
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/permutations/__test__/permutateWithoutRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 38,
                        "index": 224
                      },
                      "end": {
                        "line": 72,
                        "column": 3,
                        "index": 2121
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#189",
              "algo": "permutations_permutateWithRepetitions",
              "label": "permutateWithRepetitions should permutate string with repetition",
              "name": "permutateWithRepetitions should permutate string with repetition@permutateWithRepetitions.test.js",
              "pdgs": [
                {
                  "pdgTitle": "permutateWithRepetitions([\"A\"])",
                  "uniqueTitle": "permutateWithRepetitions([\"A\"])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/permutations/permutateWithRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 939
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/permutations/__test__/permutateWithRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 54,
                        "index": 171
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1369
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "permutateWithRepetitions([\"A\",\"B\"])",
                  "uniqueTitle": "permutateWithRepetitions([\"A\",\"B\"])",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/permutations/permutateWithRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 939
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/permutations/__test__/permutateWithRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 54,
                        "index": 171
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1369
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "permutateWithRepetitions([\"A\",\"B\",\"C\"])",
                  "uniqueTitle": "permutateWithRepetitions([\"A\",\"B\",\"C\"])",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/permutations/permutateWithRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 939
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/permutations/__test__/permutateWithRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 54,
                        "index": 171
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1369
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "permutateWithRepetitions([\"A\",\"B\",\"C\",\"D\"])",
                  "uniqueTitle": "permutateWithRepetitions([\"A\",\"B\",\"C\",\"D\"])",
                  "contextId": 65,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/permutations/permutateWithRepetitions.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 69,
                        "index": 171
                      },
                      "end": {
                        "line": 32,
                        "column": 1,
                        "index": 939
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/permutations/__test__/permutateWithRepetitions.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 54,
                        "index": 171
                      },
                      "end": {
                        "line": 49,
                        "column": 3,
                        "index": 1369
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "power-set",
          "exercises": [
            {
              "id": "javascript-algorithms#190",
              "algo": "power-set_bwPowerSet",
              "label": "bwPowerSet should calculate power set of given set using bitwise approach",
              "name": "bwPowerSet should calculate power set of given set using bitwise approach@bwPowerSet.test.js",
              "pdgs": [
                {
                  "pdgTitle": "bwPowerSet([1])",
                  "uniqueTitle": "bwPowerSet([1])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/power-set/bwPowerSet.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 48,
                        "index": 163
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1387
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/power-set/__test__/bwPowerSet.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 77,
                        "index": 152
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 373
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "bwPowerSet([1,2,3])",
                  "uniqueTitle": "bwPowerSet([1,2,3])",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/power-set/bwPowerSet.js",
                    "loc": {
                      "start": {
                        "line": 7,
                        "column": 48,
                        "index": 163
                      },
                      "end": {
                        "line": 42,
                        "column": 1,
                        "index": 1387
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/power-set/__test__/bwPowerSet.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 77,
                        "index": 152
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 373
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#191",
              "algo": "power-set_btPowerSet",
              "label": "btPowerSet should calculate power set of given set using backtracking approach",
              "name": "btPowerSet should calculate power set of given set using backtracking approach@btPowerSet.test.js",
              "pdgs": [
                {
                  "pdgTitle": "btPowerSet([1])",
                  "uniqueTitle": "btPowerSet([1])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/power-set/btPowerSet.js",
                    "loc": {
                      "start": {
                        "line": 45,
                        "column": 48,
                        "index": 1966
                      },
                      "end": {
                        "line": 47,
                        "column": 1,
                        "index": 2014
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/power-set/__test__/btPowerSet.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 82,
                        "index": 157
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 378
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "btPowerSet([1,2,3])",
                  "uniqueTitle": "btPowerSet([1,2,3])",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/power-set/btPowerSet.js",
                    "loc": {
                      "start": {
                        "line": 45,
                        "column": 48,
                        "index": 1966
                      },
                      "end": {
                        "line": 47,
                        "column": 1,
                        "index": 2014
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/power-set/__test__/btPowerSet.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 82,
                        "index": 157
                      },
                      "end": {
                        "line": 17,
                        "column": 3,
                        "index": 378
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "shortest-common-supersequence",
          "exercises": [
            {
              "id": "javascript-algorithms#192",
              "algo": "shortest-common-supersequence_shortestCommonSupersequence",
              "label": "shortestCommonSupersequence should find shortest common supersequence of two sequences",
              "name": "shortestCommonSupersequence should find shortest common supersequence of two sequences@shortestCommonSupersequence.test.js",
              "pdgs": [
                {
                  "pdgTitle": "shortestCommonSupersequence([\"A\",\"B\",\"C\"], [\"D\",\"E\",\"F\"])",
                  "uniqueTitle": "shortestCommonSupersequence([\"A\",\"B\",\"C\"], [\"D\",\"E\",\"F\"])",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/shortest-common-supersequence/shortestCommonSupersequence.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 64,
                        "index": 251
                      },
                      "end": {
                        "line": 71,
                        "column": 1,
                        "index": 2027
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/shortest-common-supersequence/__test__/shortestCommonSupersequence.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 73,
                        "index": 199
                      },
                      "end": {
                        "line": 38,
                        "column": 3,
                        "index": 1364
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "shortestCommonSupersequence([\"G\",\"E\",\"E\",\"K\"], [\"E\",\"K\",\"E\"])",
                  "uniqueTitle": "shortestCommonSupersequence([\"G\",\"E\",\"E\",\"K\"], [\"E\",\"K\",\"E\"])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/shortest-common-supersequence/shortestCommonSupersequence.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 64,
                        "index": 251
                      },
                      "end": {
                        "line": 71,
                        "column": 1,
                        "index": 2027
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/shortest-common-supersequence/__test__/shortestCommonSupersequence.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 73,
                        "index": 199
                      },
                      "end": {
                        "line": 38,
                        "column": 3,
                        "index": 1364
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "shortestCommonSupersequence([\"A\",\"G\",\"G\",\"T\",\"A\",\"B\"], [\"G\",\"X\",\"T\",\"X\",\"A\",\"Y\",\"B\"])",
                  "uniqueTitle": "shortestCommonSupersequence([\"A\",\"G\",\"G\",\"T\",\"A\",\"B\"], [\"G\",\"X\",\"T\",\"X\",\"A\",\"Y\",\"B\"])",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/shortest-common-supersequence/shortestCommonSupersequence.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 64,
                        "index": 251
                      },
                      "end": {
                        "line": 71,
                        "column": 1,
                        "index": 2027
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/shortest-common-supersequence/__test__/shortestCommonSupersequence.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 73,
                        "index": 199
                      },
                      "end": {
                        "line": 38,
                        "column": 3,
                        "index": 1364
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "shortestCommonSupersequence([\"A\",\"B\",\"C\",\"B\",\"D\",\"A\",\"B\"], [\"B\",\"D\",\"C\",\"A\",\"B\",\"A\"])",
                  "uniqueTitle": "shortestCommonSupersequence([\"A\",\"B\",\"C\",\"B\",\"D\",\"A\",\"B\"], [\"B\",\"D\",\"C\",\"A\",\"B\",\"A\"])",
                  "contextId": 28,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/shortest-common-supersequence/shortestCommonSupersequence.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 64,
                        "index": 251
                      },
                      "end": {
                        "line": 71,
                        "column": 1,
                        "index": 2027
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/shortest-common-supersequence/__test__/shortestCommonSupersequence.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 73,
                        "index": 199
                      },
                      "end": {
                        "line": 38,
                        "column": 3,
                        "index": 1364
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "shortestCommonSupersequence([\"B\",\"D\",\"C\",\"A\",\"B\",\"A\"], [\"A\",\"B\",\"C\",\"B\",\"D\",\"A\",\"B\",\"A\",\"C\"])",
                  "uniqueTitle": "shortestCommonSupersequence([\"B\",\"D\",\"C\",\"A\",\"B\",\"A\"], [\"A\",\"B\",\"C\",\"B\",\"D\",\"A\",\"B\",\"A\",\"C\"])",
                  "contextId": 37,
                  "algoLoc": {
                    "filePath": "src/algorithms/sets/shortest-common-supersequence/shortestCommonSupersequence.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 64,
                        "index": 251
                      },
                      "end": {
                        "line": 71,
                        "column": 1,
                        "index": 2027
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sets/shortest-common-supersequence/__test__/shortestCommonSupersequence.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 73,
                        "index": 199
                      },
                      "end": {
                        "line": 38,
                        "column": 3,
                        "index": 1364
                      }
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "sorting",
      "chapters": [
        {
          "name": "bubble-sort",
          "exercises": [
            {
              "id": "javascript-algorithms#193",
              "algo": "bubble-sort_BubbleSort",
              "label": "BubbleSort should sort array",
              "name": "BubbleSort should sort array@BubbleSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "BubbleSort.sort([])",
                  "uniqueTitle": "BubbleSort.sort([])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 424
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 468
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "BubbleSort.sort([1])",
                  "uniqueTitle": "BubbleSort.sort([1])",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 424
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 468
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "BubbleSort.sort([1,2])",
                  "uniqueTitle": "BubbleSort.sort([1,2])",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 424
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 468
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "BubbleSort.sort([2,1])",
                  "uniqueTitle": "BubbleSort.sort([2,1])",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 424
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 468
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "BubbleSort.sort([3,4,2,1,0,0,4,3,4,2])",
                  "uniqueTitle": "BubbleSort.sort([3,4,2,1,0,0,4,3,4,2])",
                  "contextId": 24,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 424
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 468
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "BubbleSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "BubbleSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "contextId": 148,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 424
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 468
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "BubbleSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "uniqueTitle": "BubbleSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "contextId": 207,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 424
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 468
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "BubbleSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "uniqueTitle": "BubbleSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "contextId": 797,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 424
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 468
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "BubbleSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "uniqueTitle": "BubbleSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "contextId": 1337,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 424
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 468
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "BubbleSort.sort([\"\"])",
                  "uniqueTitle": "BubbleSort.sort([\"\"])",
                  "contextId": 1401,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 529
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "BubbleSort.sort([\"a\"])",
                  "uniqueTitle": "BubbleSort.sort([\"a\"])",
                  "contextId": 1402,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 529
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "BubbleSort.sort([\"aa\",\"a\"])",
                  "uniqueTitle": "BubbleSort.sort([\"aa\",\"a\"])",
                  "contextId": 1403,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 529
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "BubbleSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "BubbleSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "contextId": 1408,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 529
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "BubbleSort.sort([\"aa\",\"aa\"])",
                  "uniqueTitle": "BubbleSort.sort([\"aa\",\"aa\"])",
                  "contextId": 1426,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 529
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#194",
              "algo": "bubble-sort_BubbleSort",
              "label": "BubbleSort should sort array with custom comparator",
              "name": "BubbleSort should sort array with custom comparator@BubbleSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "BubbleSort.sort([\"\"])",
                  "uniqueTitle": "BubbleSort.sort([\"\"])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 529
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "BubbleSort.sort([\"a\"])",
                  "uniqueTitle": "BubbleSort.sort([\"a\"])#2",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 529
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "BubbleSort.sort([\"aa\",\"a\"])",
                  "uniqueTitle": "BubbleSort.sort([\"aa\",\"a\"])#2",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 529
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "BubbleSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "BubbleSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#2",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 529
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "BubbleSort.sort([\"aa\",\"aa\"])",
                  "uniqueTitle": "BubbleSort.sort([\"aa\",\"aa\"])#2",
                  "contextId": 37,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 529
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 593
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#195",
              "algo": "bubble-sort_BubbleSort",
              "label": "BubbleSort should do stable sorting",
              "name": "BubbleSort should do stable sorting@BubbleSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "BubbleSort.sort([\"bb\",\"aa\",\"c\"])",
                  "uniqueTitle": "BubbleSort.sort([\"bb\",\"aa\",\"c\"])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 25,
                        "column": 39,
                        "index": 638
                      },
                      "end": {
                        "line": 27,
                        "column": 3,
                        "index": 691
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "BubbleSort.sort([\"aa\",\"q\",\"a\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "BubbleSort.sort([\"aa\",\"q\",\"a\",\"bbbb\",\"ccc\"])",
                  "contextId": 24,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 25,
                        "column": 39,
                        "index": 638
                      },
                      "end": {
                        "line": 27,
                        "column": 3,
                        "index": 691
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#196",
              "algo": "bubble-sort_BubbleSort",
              "label": "BubbleSort should sort negative numbers",
              "name": "BubbleSort should sort negative numbers@BubbleSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "BubbleSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
                  "uniqueTitle": "BubbleSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 43,
                        "index": 740
                      },
                      "end": {
                        "line": 31,
                        "column": 3,
                        "index": 799
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#197",
              "algo": "bubble-sort_BubbleSort",
              "label": "BubbleSort should visit EQUAL array element specified number of times",
              "name": "BubbleSort should visit EQUAL array element specified number of times@BubbleSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "BubbleSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "uniqueTitle": "BubbleSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 73,
                        "index": 878
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1007
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#198",
              "algo": "bubble-sort_BubbleSort",
              "label": "BubbleSort should visit SORTED array element specified number of times",
              "name": "BubbleSort should visit SORTED array element specified number of times@BubbleSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "BubbleSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "BubbleSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 41,
                        "column": 74,
                        "index": 1087
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1218
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#199",
              "algo": "bubble-sort_BubbleSort",
              "label": "BubbleSort should visit NOT SORTED array element specified number of times",
              "name": "BubbleSort should visit NOT SORTED array element specified number of times@BubbleSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "BubbleSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "uniqueTitle": "BubbleSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 49,
                        "column": 78,
                        "index": 1302
                      },
                      "end": {
                        "line": 55,
                        "column": 3,
                        "index": 1440
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#200",
              "algo": "bubble-sort_BubbleSort",
              "label": "BubbleSort should visit REVERSE SORTED array element specified number of times",
              "name": "BubbleSort should visit REVERSE SORTED array element specified number of times@BubbleSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "BubbleSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "uniqueTitle": "BubbleSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 101
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1113
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
                    "loc": {
                      "start": {
                        "line": 57,
                        "column": 82,
                        "index": 1528
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 1668
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "counting-sort",
          "exercises": [
            {
              "id": "javascript-algorithms#201",
              "algo": "counting-sort_CountingSort",
              "label": "CountingSort should sort array",
              "name": "CountingSort should sort array@CountingSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "CountingSort.sort([])",
                  "uniqueTitle": "CountingSort.sort([])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 22,
                        "index": 234
                      },
                      "end": {
                        "line": 91,
                        "column": 3,
                        "index": 3289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 428
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 474
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "CountingSort.sort([1])",
                  "uniqueTitle": "CountingSort.sort([1])",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 22,
                        "index": 234
                      },
                      "end": {
                        "line": 91,
                        "column": 3,
                        "index": 3289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 428
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 474
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "CountingSort.sort([1,2])",
                  "uniqueTitle": "CountingSort.sort([1,2])",
                  "contextId": 23,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 22,
                        "index": 234
                      },
                      "end": {
                        "line": 91,
                        "column": 3,
                        "index": 3289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 428
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 474
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "CountingSort.sort([2,1])",
                  "uniqueTitle": "CountingSort.sort([2,1])",
                  "contextId": 42,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 22,
                        "index": 234
                      },
                      "end": {
                        "line": 91,
                        "column": 3,
                        "index": 3289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 428
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 474
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "CountingSort.sort([3,4,2,1,0,0,4,3,4,2])",
                  "uniqueTitle": "CountingSort.sort([3,4,2,1,0,0,4,3,4,2])",
                  "contextId": 61,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 22,
                        "index": 234
                      },
                      "end": {
                        "line": 91,
                        "column": 3,
                        "index": 3289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 428
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 474
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "CountingSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "CountingSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "contextId": 152,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 22,
                        "index": 234
                      },
                      "end": {
                        "line": 91,
                        "column": 3,
                        "index": 3289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 428
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 474
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "CountingSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "uniqueTitle": "CountingSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "contextId": 333,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 22,
                        "index": 234
                      },
                      "end": {
                        "line": 91,
                        "column": 3,
                        "index": 3289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 428
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 474
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "CountingSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "uniqueTitle": "CountingSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "contextId": 514,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 22,
                        "index": 234
                      },
                      "end": {
                        "line": 91,
                        "column": 3,
                        "index": 3289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 428
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 474
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "CountingSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "uniqueTitle": "CountingSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "contextId": 695,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 22,
                        "index": 234
                      },
                      "end": {
                        "line": 91,
                        "column": 3,
                        "index": 3289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 428
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 474
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#202",
              "algo": "counting-sort_CountingSort",
              "label": "CountingSort should sort negative numbers",
              "name": "CountingSort should sort negative numbers@CountingSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "CountingSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
                  "uniqueTitle": "CountingSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 22,
                        "index": 234
                      },
                      "end": {
                        "line": 91,
                        "column": 3,
                        "index": 3289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 43,
                        "index": 523
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 584
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#203",
              "algo": "counting-sort_CountingSort",
              "label": "CountingSort should allow to use specify max/min integer value in array to make sorting faster",
              "name": "CountingSort should allow to use specify max/min integer value in array to make sorting faster@CountingSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "CountingSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19], 1, 20)",
                  "uniqueTitle": "CountingSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19], 1, 20)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 22,
                        "index": 234
                      },
                      "end": {
                        "line": 91,
                        "column": 3,
                        "index": 3289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
                    "loc": {
                      "start": {
                        "line": 25,
                        "column": 96,
                        "index": 686
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1345
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#204",
              "algo": "counting-sort_CountingSort",
              "label": "CountingSort should visit EQUAL array element specified number of times",
              "name": "CountingSort should visit EQUAL array element specified number of times@CountingSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "CountingSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "uniqueTitle": "CountingSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 22,
                        "index": 234
                      },
                      "end": {
                        "line": 91,
                        "column": 3,
                        "index": 3289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
                    "loc": {
                      "start": {
                        "line": 47,
                        "column": 73,
                        "index": 1424
                      },
                      "end": {
                        "line": 53,
                        "column": 3,
                        "index": 1555
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#205",
              "algo": "counting-sort_CountingSort",
              "label": "CountingSort should visit SORTED array element specified number of times",
              "name": "CountingSort should visit SORTED array element specified number of times@CountingSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "CountingSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "CountingSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 22,
                        "index": 234
                      },
                      "end": {
                        "line": 91,
                        "column": 3,
                        "index": 3289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
                    "loc": {
                      "start": {
                        "line": 55,
                        "column": 74,
                        "index": 1635
                      },
                      "end": {
                        "line": 61,
                        "column": 3,
                        "index": 1768
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#206",
              "algo": "counting-sort_CountingSort",
              "label": "CountingSort should visit NOT SORTED array element specified number of times",
              "name": "CountingSort should visit NOT SORTED array element specified number of times@CountingSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "CountingSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "uniqueTitle": "CountingSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 22,
                        "index": 234
                      },
                      "end": {
                        "line": 91,
                        "column": 3,
                        "index": 3289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
                    "loc": {
                      "start": {
                        "line": 63,
                        "column": 78,
                        "index": 1852
                      },
                      "end": {
                        "line": 69,
                        "column": 3,
                        "index": 1992
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#207",
              "algo": "counting-sort_CountingSort",
              "label": "CountingSort should visit REVERSE SORTED array element specified number of times",
              "name": "CountingSort should visit REVERSE SORTED array element specified number of times@CountingSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "CountingSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "uniqueTitle": "CountingSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 22,
                        "index": 234
                      },
                      "end": {
                        "line": 91,
                        "column": 3,
                        "index": 3289
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
                    "loc": {
                      "start": {
                        "line": 71,
                        "column": 82,
                        "index": 2080
                      },
                      "end": {
                        "line": 77,
                        "column": 3,
                        "index": 2222
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "heap-sort",
          "exercises": [
            {
              "id": "javascript-algorithms#208",
              "algo": "heap-sort_HeapSort",
              "label": "HeapSort should sort array",
              "name": "HeapSort should sort array@HeapSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "HeapSort.sort([])",
                  "uniqueTitle": "HeapSort.sort([])",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 32,
                        "index": 535
                      },
                      "end": {
                        "line": 21,
                        "column": 3,
                        "index": 577
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "HeapSort.sort([1])",
                  "uniqueTitle": "HeapSort.sort([1])",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 32,
                        "index": 535
                      },
                      "end": {
                        "line": 21,
                        "column": 3,
                        "index": 577
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "HeapSort.sort([1,2])",
                  "uniqueTitle": "HeapSort.sort([1,2])",
                  "contextId": 31,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 32,
                        "index": 535
                      },
                      "end": {
                        "line": 21,
                        "column": 3,
                        "index": 577
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "HeapSort.sort([2,1])",
                  "uniqueTitle": "HeapSort.sort([2,1])",
                  "contextId": 62,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 32,
                        "index": 535
                      },
                      "end": {
                        "line": 21,
                        "column": 3,
                        "index": 577
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "HeapSort.sort([3,4,2,1,0,0,4,3,4,2])",
                  "uniqueTitle": "HeapSort.sort([3,4,2,1,0,0,4,3,4,2])",
                  "contextId": 100,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 32,
                        "index": 535
                      },
                      "end": {
                        "line": 21,
                        "column": 3,
                        "index": 577
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "HeapSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "HeapSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "contextId": 600,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 32,
                        "index": 535
                      },
                      "end": {
                        "line": 21,
                        "column": 3,
                        "index": 577
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "HeapSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "uniqueTitle": "HeapSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "contextId": 1860,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 32,
                        "index": 535
                      },
                      "end": {
                        "line": 21,
                        "column": 3,
                        "index": 577
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "HeapSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "uniqueTitle": "HeapSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "contextId": 3610,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 32,
                        "index": 535
                      },
                      "end": {
                        "line": 21,
                        "column": 3,
                        "index": 577
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "HeapSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "uniqueTitle": "HeapSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "contextId": 5084,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 32,
                        "index": 535
                      },
                      "end": {
                        "line": 21,
                        "column": 3,
                        "index": 577
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "HeapSort.sort([\"\"])",
                  "uniqueTitle": "HeapSort.sort([\"\"])",
                  "contextId": 5814,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 55,
                        "index": 638
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 700
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "HeapSort.sort([\"a\"])",
                  "uniqueTitle": "HeapSort.sort([\"a\"])",
                  "contextId": 5827,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 55,
                        "index": 638
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 700
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "HeapSort.sort([\"aa\",\"a\"])",
                  "uniqueTitle": "HeapSort.sort([\"aa\",\"a\"])",
                  "contextId": 5840,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 55,
                        "index": 638
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 700
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "HeapSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "HeapSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "contextId": 5878,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 55,
                        "index": 638
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 700
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "HeapSort.sort([\"aa\",\"aa\"])",
                  "uniqueTitle": "HeapSort.sort([\"aa\",\"aa\"])",
                  "contextId": 5986,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 55,
                        "index": 638
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 700
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#209",
              "algo": "heap-sort_HeapSort",
              "label": "HeapSort should sort array with custom comparator",
              "name": "HeapSort should sort array with custom comparator@HeapSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "HeapSort.sort([\"\"])",
                  "uniqueTitle": "HeapSort.sort([\"\"])#2",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 55,
                        "index": 638
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 700
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "HeapSort.sort([\"a\"])",
                  "uniqueTitle": "HeapSort.sort([\"a\"])#2",
                  "contextId": 27,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 55,
                        "index": 638
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 700
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "HeapSort.sort([\"aa\",\"a\"])",
                  "uniqueTitle": "HeapSort.sort([\"aa\",\"a\"])#2",
                  "contextId": 40,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 55,
                        "index": 638
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 700
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "HeapSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "HeapSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#2",
                  "contextId": 78,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 55,
                        "index": 638
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 700
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "HeapSort.sort([\"aa\",\"aa\"])",
                  "uniqueTitle": "HeapSort.sort([\"aa\",\"aa\"])#2",
                  "contextId": 186,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 55,
                        "index": 638
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 700
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#210",
              "algo": "heap-sort_HeapSort",
              "label": "HeapSort should sort negative numbers",
              "name": "HeapSort should sort negative numbers@HeapSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "HeapSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
                  "uniqueTitle": "HeapSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 27,
                        "column": 43,
                        "index": 749
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 806
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#211",
              "algo": "heap-sort_HeapSort",
              "label": "HeapSort should visit EQUAL array element specified number of times",
              "name": "HeapSort should visit EQUAL array element specified number of times@HeapSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "HeapSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "uniqueTitle": "HeapSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#2",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 31,
                        "column": 73,
                        "index": 885
                      },
                      "end": {
                        "line": 37,
                        "column": 3,
                        "index": 1012
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#212",
              "algo": "heap-sort_HeapSort",
              "label": "HeapSort should visit SORTED array element specified number of times",
              "name": "HeapSort should visit SORTED array element specified number of times@HeapSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "HeapSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "HeapSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#2",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 39,
                        "column": 74,
                        "index": 1092
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1221
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#213",
              "algo": "heap-sort_HeapSort",
              "label": "HeapSort should visit NOT SORTED array element specified number of times",
              "name": "HeapSort should visit NOT SORTED array element specified number of times@HeapSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "HeapSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "uniqueTitle": "HeapSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#2",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 47,
                        "column": 78,
                        "index": 1305
                      },
                      "end": {
                        "line": 53,
                        "column": 3,
                        "index": 1441
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#214",
              "algo": "heap-sort_HeapSort",
              "label": "HeapSort should visit REVERSE SORTED array element specified number of times",
              "name": "HeapSort should visit REVERSE SORTED array element specified number of times@HeapSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "HeapSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "uniqueTitle": "HeapSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#2",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 22,
                        "index": 161
                      },
                      "end": {
                        "line": 29,
                        "column": 3,
                        "index": 875
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
                    "loc": {
                      "start": {
                        "line": 55,
                        "column": 82,
                        "index": 1529
                      },
                      "end": {
                        "line": 61,
                        "column": 3,
                        "index": 1667
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "insertion-sort",
          "exercises": [
            {
              "id": "javascript-algorithms#215",
              "algo": "insertion-sort_InsertionSort",
              "label": "InsertionSort should sort array",
              "name": "InsertionSort should sort array@InsertionSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "InsertionSort.sort([])",
                  "uniqueTitle": "InsertionSort.sort([])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 433
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 480
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "InsertionSort.sort([1])",
                  "uniqueTitle": "InsertionSort.sort([1])",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 433
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 480
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "InsertionSort.sort([1,2])",
                  "uniqueTitle": "InsertionSort.sort([1,2])",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 433
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 480
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "InsertionSort.sort([2,1])",
                  "uniqueTitle": "InsertionSort.sort([2,1])",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 433
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 480
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "InsertionSort.sort([3,4,2,1,0,0,4,3,4,2])",
                  "uniqueTitle": "InsertionSort.sort([3,4,2,1,0,0,4,3,4,2])",
                  "contextId": 23,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 433
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 480
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "InsertionSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "InsertionSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "contextId": 105,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 433
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 480
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "InsertionSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "uniqueTitle": "InsertionSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "contextId": 163,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 433
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 480
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "InsertionSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "uniqueTitle": "InsertionSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "contextId": 753,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 433
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 480
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "InsertionSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "uniqueTitle": "InsertionSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "contextId": 1048,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 433
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 480
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "InsertionSort.sort([\"\"])",
                  "uniqueTitle": "InsertionSort.sort([\"\"])",
                  "contextId": 1111,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 541
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 608
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "InsertionSort.sort([\"a\"])",
                  "uniqueTitle": "InsertionSort.sort([\"a\"])",
                  "contextId": 1112,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 541
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 608
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "InsertionSort.sort([\"aa\",\"a\"])",
                  "uniqueTitle": "InsertionSort.sort([\"aa\",\"a\"])",
                  "contextId": 1113,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 541
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 608
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "InsertionSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "InsertionSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "contextId": 1118,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 541
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 608
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "InsertionSort.sort([\"aa\",\"aa\"])",
                  "uniqueTitle": "InsertionSort.sort([\"aa\",\"aa\"])",
                  "contextId": 1132,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 541
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 608
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#216",
              "algo": "insertion-sort_InsertionSort",
              "label": "InsertionSort should sort array with custom comparator",
              "name": "InsertionSort should sort array with custom comparator@InsertionSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "InsertionSort.sort([\"\"])",
                  "uniqueTitle": "InsertionSort.sort([\"\"])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 541
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 608
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "InsertionSort.sort([\"a\"])",
                  "uniqueTitle": "InsertionSort.sort([\"a\"])#2",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 541
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 608
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "InsertionSort.sort([\"aa\",\"a\"])",
                  "uniqueTitle": "InsertionSort.sort([\"aa\",\"a\"])#2",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 541
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 608
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "InsertionSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "InsertionSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#2",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 541
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 608
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "InsertionSort.sort([\"aa\",\"aa\"])",
                  "uniqueTitle": "InsertionSort.sort([\"aa\",\"aa\"])#2",
                  "contextId": 33,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 541
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 608
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#217",
              "algo": "insertion-sort_InsertionSort",
              "label": "InsertionSort should do stable sorting",
              "name": "InsertionSort should do stable sorting@InsertionSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "InsertionSort.sort([\"bb\",\"aa\",\"c\"])",
                  "uniqueTitle": "InsertionSort.sort([\"bb\",\"aa\",\"c\"])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 25,
                        "column": 39,
                        "index": 653
                      },
                      "end": {
                        "line": 27,
                        "column": 3,
                        "index": 709
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "InsertionSort.sort([\"aa\",\"q\",\"a\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "InsertionSort.sort([\"aa\",\"q\",\"a\",\"bbbb\",\"ccc\"])",
                  "contextId": 23,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 25,
                        "column": 39,
                        "index": 653
                      },
                      "end": {
                        "line": 27,
                        "column": 3,
                        "index": 709
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#218",
              "algo": "insertion-sort_InsertionSort",
              "label": "InsertionSort should sort negative numbers",
              "name": "InsertionSort should sort negative numbers@InsertionSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "InsertionSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
                  "uniqueTitle": "InsertionSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 43,
                        "index": 758
                      },
                      "end": {
                        "line": 31,
                        "column": 3,
                        "index": 820
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#219",
              "algo": "insertion-sort_InsertionSort",
              "label": "InsertionSort should visit EQUAL array element specified number of times",
              "name": "InsertionSort should visit EQUAL array element specified number of times@InsertionSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "InsertionSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "uniqueTitle": "InsertionSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 73,
                        "index": 899
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 1031
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#220",
              "algo": "insertion-sort_InsertionSort",
              "label": "InsertionSort should visit SORTED array element specified number of times",
              "name": "InsertionSort should visit SORTED array element specified number of times@InsertionSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "InsertionSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "InsertionSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 41,
                        "column": 74,
                        "index": 1111
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1245
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#221",
              "algo": "insertion-sort_InsertionSort",
              "label": "InsertionSort should visit NOT SORTED array element specified number of times",
              "name": "InsertionSort should visit NOT SORTED array element specified number of times@InsertionSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "InsertionSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "uniqueTitle": "InsertionSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 49,
                        "column": 78,
                        "index": 1329
                      },
                      "end": {
                        "line": 55,
                        "column": 3,
                        "index": 1470
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#222",
              "algo": "insertion-sort_InsertionSort",
              "label": "InsertionSort should visit REVERSE SORTED array element specified number of times",
              "name": "InsertionSort should visit REVERSE SORTED array element specified number of times@InsertionSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "InsertionSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "uniqueTitle": "InsertionSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 34,
                        "column": 3,
                        "index": 1016
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 57,
                        "column": 82,
                        "index": 1558
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 1701
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "merge-sort",
          "exercises": [
            {
              "id": "javascript-algorithms#223",
              "algo": "merge-sort_MergeSort",
              "label": "MergeSort should sort array",
              "name": "MergeSort should sort array@MergeSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "MergeSort.sort([])",
                  "uniqueTitle": "MergeSort.sort([])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 420
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 463
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "MergeSort.sort([1])",
                  "uniqueTitle": "MergeSort.sort([1])",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 420
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 463
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "MergeSort.sort([1,2])",
                  "uniqueTitle": "MergeSort.sort([1,2])",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 420
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 463
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "MergeSort.sort([2,1])",
                  "uniqueTitle": "MergeSort.sort([2,1])",
                  "contextId": 27,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 420
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 463
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "MergeSort.sort([3,4,2,1,0,0,4,3,4,2])",
                  "uniqueTitle": "MergeSort.sort([3,4,2,1,0,0,4,3,4,2])",
                  "contextId": 40,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 420
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 463
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "MergeSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "MergeSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "contextId": 215,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 420
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 463
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "MergeSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "uniqueTitle": "MergeSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "contextId": 472,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 420
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 463
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "MergeSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "uniqueTitle": "MergeSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "contextId": 857,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 420
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 463
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "MergeSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "uniqueTitle": "MergeSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "contextId": 1270,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 420
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 463
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "MergeSort.sort([\"\"])",
                  "uniqueTitle": "MergeSort.sort([\"\"])",
                  "contextId": 1612,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 524
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 587
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "MergeSort.sort([\"a\"])",
                  "uniqueTitle": "MergeSort.sort([\"a\"])",
                  "contextId": 1614,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 524
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 587
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "MergeSort.sort([\"aa\",\"a\"])",
                  "uniqueTitle": "MergeSort.sort([\"aa\",\"a\"])",
                  "contextId": 1616,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 524
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 587
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "MergeSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "MergeSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "contextId": 1629,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 524
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 587
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "MergeSort.sort([\"aa\",\"aa\"])",
                  "uniqueTitle": "MergeSort.sort([\"aa\",\"aa\"])",
                  "contextId": 1666,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 524
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 587
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#224",
              "algo": "merge-sort_MergeSort",
              "label": "MergeSort should sort array with custom comparator",
              "name": "MergeSort should sort array with custom comparator@MergeSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "MergeSort.sort([\"\"])",
                  "uniqueTitle": "MergeSort.sort([\"\"])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 524
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 587
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "MergeSort.sort([\"a\"])",
                  "uniqueTitle": "MergeSort.sort([\"a\"])#2",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 524
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 587
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "MergeSort.sort([\"aa\",\"a\"])",
                  "uniqueTitle": "MergeSort.sort([\"aa\",\"a\"])#2",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 524
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 587
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "MergeSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "MergeSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#2",
                  "contextId": 29,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 524
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 587
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "MergeSort.sort([\"aa\",\"aa\"])",
                  "uniqueTitle": "MergeSort.sort([\"aa\",\"aa\"])#2",
                  "contextId": 66,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 524
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 587
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#225",
              "algo": "merge-sort_MergeSort",
              "label": "MergeSort should do stable sorting",
              "name": "MergeSort should do stable sorting@MergeSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "MergeSort.sort([\"bb\",\"aa\",\"c\"])",
                  "uniqueTitle": "MergeSort.sort([\"bb\",\"aa\",\"c\"])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 25,
                        "column": 39,
                        "index": 632
                      },
                      "end": {
                        "line": 27,
                        "column": 3,
                        "index": 684
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "MergeSort.sort([\"aa\",\"q\",\"a\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "MergeSort.sort([\"aa\",\"q\",\"a\",\"bbbb\",\"ccc\"])",
                  "contextId": 42,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 25,
                        "column": 39,
                        "index": 632
                      },
                      "end": {
                        "line": 27,
                        "column": 3,
                        "index": 684
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#226",
              "algo": "merge-sort_MergeSort",
              "label": "MergeSort should sort negative numbers",
              "name": "MergeSort should sort negative numbers@MergeSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "MergeSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
                  "uniqueTitle": "MergeSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 43,
                        "index": 733
                      },
                      "end": {
                        "line": 31,
                        "column": 3,
                        "index": 791
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#227",
              "algo": "merge-sort_MergeSort",
              "label": "MergeSort should visit EQUAL array element specified number of times",
              "name": "MergeSort should visit EQUAL array element specified number of times@MergeSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "MergeSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "uniqueTitle": "MergeSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 73,
                        "index": 870
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 998
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#228",
              "algo": "merge-sort_MergeSort",
              "label": "MergeSort should visit SORTED array element specified number of times",
              "name": "MergeSort should visit SORTED array element specified number of times@MergeSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "MergeSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "MergeSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 41,
                        "column": 74,
                        "index": 1078
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1208
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#229",
              "algo": "merge-sort_MergeSort",
              "label": "MergeSort should visit NOT SORTED array element specified number of times",
              "name": "MergeSort should visit NOT SORTED array element specified number of times@MergeSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "MergeSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "uniqueTitle": "MergeSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 49,
                        "column": 78,
                        "index": 1292
                      },
                      "end": {
                        "line": 55,
                        "column": 3,
                        "index": 1429
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#230",
              "algo": "merge-sort_MergeSort",
              "label": "MergeSort should visit REVERSE SORTED array element specified number of times",
              "name": "MergeSort should visit REVERSE SORTED array element specified number of times@MergeSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "MergeSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "uniqueTitle": "MergeSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 24,
                        "column": 3,
                        "index": 854
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
                    "loc": {
                      "start": {
                        "line": 57,
                        "column": 82,
                        "index": 1517
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 1656
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "quick-sort",
          "exercises": [
            {
              "id": "javascript-algorithms#231",
              "algo": "quick-sort_QuickSort",
              "label": "QuickSort should sort array",
              "name": "QuickSort should sort array@QuickSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "QuickSort.sort([])",
                  "uniqueTitle": "QuickSort.sort([])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 421
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 464
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSort.sort([1])",
                  "uniqueTitle": "QuickSort.sort([1])",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 421
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 464
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSort.sort([1,2])",
                  "uniqueTitle": "QuickSort.sort([1,2])",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 421
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 464
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSort.sort([2,1])",
                  "uniqueTitle": "QuickSort.sort([2,1])",
                  "contextId": 22,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 421
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 464
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSort.sort([3,4,2,1,0,0,4,3,4,2])",
                  "uniqueTitle": "QuickSort.sort([3,4,2,1,0,0,4,3,4,2])",
                  "contextId": 30,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 421
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 464
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "QuickSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "contextId": 121,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 421
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 464
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "uniqueTitle": "QuickSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "contextId": 1110,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 421
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 464
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "uniqueTitle": "QuickSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "contextId": 2099,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 421
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 464
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "uniqueTitle": "QuickSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "contextId": 2436,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 421
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 464
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSort.sort([\"\"])",
                  "uniqueTitle": "QuickSort.sort([\"\"])",
                  "contextId": 2501,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 525
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 588
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSort.sort([\"a\"])",
                  "uniqueTitle": "QuickSort.sort([\"a\"])",
                  "contextId": 2502,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 525
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 588
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSort.sort([\"aa\",\"a\"])",
                  "uniqueTitle": "QuickSort.sort([\"aa\",\"a\"])",
                  "contextId": 2503,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 525
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 588
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "QuickSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "contextId": 2511,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 525
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 588
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSort.sort([\"aa\",\"aa\"])",
                  "uniqueTitle": "QuickSort.sort([\"aa\",\"aa\"])",
                  "contextId": 2536,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 525
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 588
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#232",
              "algo": "quick-sort_QuickSort",
              "label": "QuickSort should sort array with custom comparator",
              "name": "QuickSort should sort array with custom comparator@QuickSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "QuickSort.sort([\"\"])",
                  "uniqueTitle": "QuickSort.sort([\"\"])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 525
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 588
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSort.sort([\"a\"])",
                  "uniqueTitle": "QuickSort.sort([\"a\"])#2",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 525
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 588
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSort.sort([\"aa\",\"a\"])",
                  "uniqueTitle": "QuickSort.sort([\"aa\",\"a\"])#2",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 525
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 588
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "QuickSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#2",
                  "contextId": 22,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 525
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 588
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSort.sort([\"aa\",\"aa\"])",
                  "uniqueTitle": "QuickSort.sort([\"aa\",\"aa\"])#2",
                  "contextId": 47,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 525
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 588
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#233",
              "algo": "quick-sort_QuickSort",
              "label": "QuickSort should do stable sorting",
              "name": "QuickSort should do stable sorting@QuickSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "QuickSort.sort([\"bb\",\"aa\",\"c\"])",
                  "uniqueTitle": "QuickSort.sort([\"bb\",\"aa\",\"c\"])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 25,
                        "column": 39,
                        "index": 633
                      },
                      "end": {
                        "line": 27,
                        "column": 3,
                        "index": 685
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSort.sort([\"aa\",\"q\",\"a\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "QuickSort.sort([\"aa\",\"q\",\"a\",\"bbbb\",\"ccc\"])",
                  "contextId": 23,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 25,
                        "column": 39,
                        "index": 633
                      },
                      "end": {
                        "line": 27,
                        "column": 3,
                        "index": 685
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#234",
              "algo": "quick-sort_QuickSort",
              "label": "QuickSort should sort negative numbers",
              "name": "QuickSort should sort negative numbers@QuickSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "QuickSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
                  "uniqueTitle": "QuickSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 43,
                        "index": 734
                      },
                      "end": {
                        "line": 31,
                        "column": 3,
                        "index": 792
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#235",
              "algo": "quick-sort_QuickSort",
              "label": "QuickSort should visit EQUAL array element specified number of times",
              "name": "QuickSort should visit EQUAL array element specified number of times@QuickSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "QuickSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "uniqueTitle": "QuickSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 73,
                        "index": 871
                      },
                      "end": {
                        "line": 39,
                        "column": 3,
                        "index": 999
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#236",
              "algo": "quick-sort_QuickSort",
              "label": "QuickSort should visit SORTED array element specified number of times",
              "name": "QuickSort should visit SORTED array element specified number of times@QuickSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "QuickSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "QuickSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 41,
                        "column": 74,
                        "index": 1079
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1209
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#237",
              "algo": "quick-sort_QuickSort",
              "label": "QuickSort should visit NOT SORTED array element specified number of times",
              "name": "QuickSort should visit NOT SORTED array element specified number of times@QuickSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "QuickSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "uniqueTitle": "QuickSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 49,
                        "column": 78,
                        "index": 1293
                      },
                      "end": {
                        "line": 55,
                        "column": 3,
                        "index": 1430
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#238",
              "algo": "quick-sort_QuickSort",
              "label": "QuickSort should visit REVERSE SORTED array element specified number of times",
              "name": "QuickSort should visit REVERSE SORTED array element specified number of times@QuickSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "QuickSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "uniqueTitle": "QuickSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 22,
                        "index": 167
                      },
                      "end": {
                        "line": 47,
                        "column": 3,
                        "index": 1486
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
                    "loc": {
                      "start": {
                        "line": 57,
                        "column": 82,
                        "index": 1518
                      },
                      "end": {
                        "line": 63,
                        "column": 3,
                        "index": 1657
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#239",
              "algo": "quick-sort_QuickSortInPlace",
              "label": "QuickSortInPlace should sort array",
              "name": "QuickSortInPlace should sort array@QuickSortInPlace.test.js",
              "pdgs": [
                {
                  "pdgTitle": "QuickSortInPlace.sort([])",
                  "uniqueTitle": "QuickSortInPlace.sort([])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 440
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSortInPlace.sort([1])",
                  "uniqueTitle": "QuickSortInPlace.sort([1])",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 440
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSortInPlace.sort([1,2])",
                  "uniqueTitle": "QuickSortInPlace.sort([1,2])",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 440
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSortInPlace.sort([2,1])",
                  "uniqueTitle": "QuickSortInPlace.sort([2,1])",
                  "contextId": 23,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 440
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSortInPlace.sort([3,4,2,1,0,0,4,3,4,2])",
                  "uniqueTitle": "QuickSortInPlace.sort([3,4,2,1,0,0,4,3,4,2])",
                  "contextId": 31,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 440
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSortInPlace.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "QuickSortInPlace.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "contextId": 110,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 440
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSortInPlace.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "uniqueTitle": "QuickSortInPlace.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "contextId": 776,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 440
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSortInPlace.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "uniqueTitle": "QuickSortInPlace.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "contextId": 1342,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 440
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSortInPlace.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "uniqueTitle": "QuickSortInPlace.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "contextId": 1623,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 440
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 490
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSortInPlace.sort([\"\"])",
                  "uniqueTitle": "QuickSortInPlace.sort([\"\"])",
                  "contextId": 2104,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 551
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 621
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSortInPlace.sort([\"a\"])",
                  "uniqueTitle": "QuickSortInPlace.sort([\"a\"])",
                  "contextId": 2105,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 551
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 621
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSortInPlace.sort([\"aa\",\"a\"])",
                  "uniqueTitle": "QuickSortInPlace.sort([\"aa\",\"a\"])",
                  "contextId": 2106,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 551
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 621
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSortInPlace.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "QuickSortInPlace.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "contextId": 2114,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 551
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 621
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSortInPlace.sort([\"aa\",\"aa\"])",
                  "uniqueTitle": "QuickSortInPlace.sort([\"aa\",\"aa\"])",
                  "contextId": 2135,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 551
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 621
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#240",
              "algo": "quick-sort_QuickSortInPlace",
              "label": "QuickSortInPlace should sort array with custom comparator",
              "name": "QuickSortInPlace should sort array with custom comparator@QuickSortInPlace.test.js",
              "pdgs": [
                {
                  "pdgTitle": "QuickSortInPlace.sort([\"\"])",
                  "uniqueTitle": "QuickSortInPlace.sort([\"\"])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 551
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 621
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSortInPlace.sort([\"a\"])",
                  "uniqueTitle": "QuickSortInPlace.sort([\"a\"])#2",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 551
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 621
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSortInPlace.sort([\"aa\",\"a\"])",
                  "uniqueTitle": "QuickSortInPlace.sort([\"aa\",\"a\"])#2",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 551
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 621
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSortInPlace.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "QuickSortInPlace.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#2",
                  "contextId": 22,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 551
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 621
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "QuickSortInPlace.sort([\"aa\",\"aa\"])",
                  "uniqueTitle": "QuickSortInPlace.sort([\"aa\",\"aa\"])#2",
                  "contextId": 43,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 551
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 621
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#241",
              "algo": "quick-sort_QuickSortInPlace",
              "label": "QuickSortInPlace should sort negative numbers",
              "name": "QuickSortInPlace should sort negative numbers@QuickSortInPlace.test.js",
              "pdgs": [
                {
                  "pdgTitle": "QuickSortInPlace.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
                  "uniqueTitle": "QuickSortInPlace.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 25,
                        "column": 43,
                        "index": 670
                      },
                      "end": {
                        "line": 27,
                        "column": 3,
                        "index": 735
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#242",
              "algo": "quick-sort_QuickSortInPlace",
              "label": "QuickSortInPlace should visit EQUAL array element specified number of times",
              "name": "QuickSortInPlace should visit EQUAL array element specified number of times@QuickSortInPlace.test.js",
              "pdgs": [
                {
                  "pdgTitle": "QuickSortInPlace.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "uniqueTitle": "QuickSortInPlace.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 73,
                        "index": 814
                      },
                      "end": {
                        "line": 35,
                        "column": 3,
                        "index": 949
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#243",
              "algo": "quick-sort_QuickSortInPlace",
              "label": "QuickSortInPlace should visit SORTED array element specified number of times",
              "name": "QuickSortInPlace should visit SORTED array element specified number of times@QuickSortInPlace.test.js",
              "pdgs": [
                {
                  "pdgTitle": "QuickSortInPlace.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "QuickSortInPlace.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 74,
                        "index": 1029
                      },
                      "end": {
                        "line": 43,
                        "column": 3,
                        "index": 1166
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#244",
              "algo": "quick-sort_QuickSortInPlace",
              "label": "QuickSortInPlace should visit NOT SORTED array element specified number of times",
              "name": "QuickSortInPlace should visit NOT SORTED array element specified number of times@QuickSortInPlace.test.js",
              "pdgs": [
                {
                  "pdgTitle": "QuickSortInPlace.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "uniqueTitle": "QuickSortInPlace.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 45,
                        "column": 78,
                        "index": 1250
                      },
                      "end": {
                        "line": 51,
                        "column": 3,
                        "index": 1394
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#245",
              "algo": "quick-sort_QuickSortInPlace",
              "label": "QuickSortInPlace should visit REVERSE SORTED array element specified number of times",
              "name": "QuickSortInPlace should visit REVERSE SORTED array element specified number of times@QuickSortInPlace.test.js",
              "pdgs": [
                {
                  "pdgTitle": "QuickSortInPlace.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "uniqueTitle": "QuickSortInPlace.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 22,
                        "index": 577
                      },
                      "end": {
                        "line": 84,
                        "column": 3,
                        "index": 3254
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
                    "loc": {
                      "start": {
                        "line": 53,
                        "column": 82,
                        "index": 1482
                      },
                      "end": {
                        "line": 59,
                        "column": 3,
                        "index": 1628
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "radix-sort",
          "exercises": [
            {
              "id": "javascript-algorithms#246",
              "algo": "radix-sort_RadixSort",
              "label": "RadixSort should sort array",
              "name": "RadixSort should sort array@RadixSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "RadixSort.sort([])",
                  "uniqueTitle": "RadixSort.sort([])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 22,
                        "index": 360
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1137
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 32,
                        "index": 263
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 306
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "RadixSort.sort([1])",
                  "uniqueTitle": "RadixSort.sort([1])",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 22,
                        "index": 360
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1137
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 32,
                        "index": 263
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 306
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "RadixSort.sort([1,2])",
                  "uniqueTitle": "RadixSort.sort([1,2])",
                  "contextId": 50,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 22,
                        "index": 360
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1137
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 32,
                        "index": 263
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 306
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "RadixSort.sort([2,1])",
                  "uniqueTitle": "RadixSort.sort([2,1])",
                  "contextId": 83,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 22,
                        "index": 360
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1137
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 32,
                        "index": 263
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 306
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "RadixSort.sort([3,4,2,1,0,0,4,3,4,2])",
                  "uniqueTitle": "RadixSort.sort([3,4,2,1,0,0,4,3,4,2])",
                  "contextId": 116,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 22,
                        "index": 360
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1137
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 32,
                        "index": 263
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 306
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "RadixSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "RadixSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "contextId": 165,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 22,
                        "index": 360
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1137
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 32,
                        "index": 263
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 306
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "RadixSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "uniqueTitle": "RadixSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "contextId": 296,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 22,
                        "index": 360
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1137
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 32,
                        "index": 263
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 306
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "RadixSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "uniqueTitle": "RadixSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "contextId": 427,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 22,
                        "index": 360
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1137
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 32,
                        "index": 263
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 306
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "RadixSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "uniqueTitle": "RadixSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "contextId": 558,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 22,
                        "index": 360
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1137
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 32,
                        "index": 263
                      },
                      "end": {
                        "line": 10,
                        "column": 3,
                        "index": 306
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#247",
              "algo": "radix-sort_RadixSort",
              "label": "RadixSort should visit array of strings n (number of strings) x m (length of longest element) times",
              "name": "RadixSort should visit array of strings n (number of strings) x m (length of longest element) times@RadixSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "RadixSort.sort([\"zzz\",\"bb\",\"a\",\"rr\",\"rrb\",\"rrba\"])",
                  "uniqueTitle": "RadixSort.sort([\"zzz\",\"bb\",\"a\",\"rr\",\"rrb\",\"rrba\"])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 22,
                        "index": 360
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1137
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 104,
                        "index": 416
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 577
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#248",
              "algo": "radix-sort_RadixSort",
              "label": "RadixSort should visit array of integers n (number of elements) x m (length of longest integer) times",
              "name": "RadixSort should visit array of integers n (number of elements) x m (length of longest integer) times@RadixSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "RadixSort.sort([3,1,75,32,884,523,4343456,232,123,656,343])",
                  "uniqueTitle": "RadixSort.sort([3,1,75,32,884,523,4343456,232,123,656,343])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 22,
                        "index": 360
                      },
                      "end": {
                        "line": 36,
                        "column": 3,
                        "index": 1137
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 106,
                        "index": 689
                      },
                      "end": {
                        "line": 26,
                        "column": 3,
                        "index": 865
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "selection-sort",
          "exercises": [
            {
              "id": "javascript-algorithms#249",
              "algo": "selection-sort_SelectionSort",
              "label": "SelectionSort should sort array",
              "name": "SelectionSort should sort array@SelectionSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "SelectionSort.sort([])",
                  "uniqueTitle": "SelectionSort.sort([])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 435
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 482
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "SelectionSort.sort([1])",
                  "uniqueTitle": "SelectionSort.sort([1])",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 435
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 482
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "SelectionSort.sort([1,2])",
                  "uniqueTitle": "SelectionSort.sort([1,2])",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 435
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 482
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "SelectionSort.sort([2,1])",
                  "uniqueTitle": "SelectionSort.sort([2,1])",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 435
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 482
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "SelectionSort.sort([3,4,2,1,0,0,4,3,4,2])",
                  "uniqueTitle": "SelectionSort.sort([3,4,2,1,0,0,4,3,4,2])",
                  "contextId": 24,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 435
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 482
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "SelectionSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "SelectionSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "contextId": 169,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 435
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 482
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "SelectionSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "uniqueTitle": "SelectionSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "contextId": 759,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 435
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 482
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "SelectionSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "uniqueTitle": "SelectionSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "contextId": 1349,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 435
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 482
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "SelectionSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "uniqueTitle": "SelectionSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "contextId": 1939,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 435
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 482
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "SelectionSort.sort([\"\"])",
                  "uniqueTitle": "SelectionSort.sort([\"\"])",
                  "contextId": 2534,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 543
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 610
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "SelectionSort.sort([\"a\"])",
                  "uniqueTitle": "SelectionSort.sort([\"a\"])",
                  "contextId": 2535,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 543
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 610
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "SelectionSort.sort([\"aa\",\"a\"])",
                  "uniqueTitle": "SelectionSort.sort([\"aa\",\"a\"])",
                  "contextId": 2536,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 543
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 610
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "SelectionSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "SelectionSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "contextId": 2541,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 543
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 610
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "SelectionSort.sort([\"aa\",\"aa\"])",
                  "uniqueTitle": "SelectionSort.sort([\"aa\",\"aa\"])",
                  "contextId": 2563,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 543
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 610
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#250",
              "algo": "selection-sort_SelectionSort",
              "label": "SelectionSort should sort array with custom comparator",
              "name": "SelectionSort should sort array with custom comparator@SelectionSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "SelectionSort.sort([\"\"])",
                  "uniqueTitle": "SelectionSort.sort([\"\"])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 543
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 610
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "SelectionSort.sort([\"a\"])",
                  "uniqueTitle": "SelectionSort.sort([\"a\"])#2",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 543
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 610
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "SelectionSort.sort([\"aa\",\"a\"])",
                  "uniqueTitle": "SelectionSort.sort([\"aa\",\"a\"])#2",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 543
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 610
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "SelectionSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "SelectionSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#2",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 543
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 610
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "SelectionSort.sort([\"aa\",\"aa\"])",
                  "uniqueTitle": "SelectionSort.sort([\"aa\",\"aa\"])#2",
                  "contextId": 41,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 543
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 610
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#251",
              "algo": "selection-sort_SelectionSort",
              "label": "SelectionSort should sort negative numbers",
              "name": "SelectionSort should sort negative numbers@SelectionSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "SelectionSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
                  "uniqueTitle": "SelectionSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 25,
                        "column": 43,
                        "index": 659
                      },
                      "end": {
                        "line": 27,
                        "column": 3,
                        "index": 721
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#252",
              "algo": "selection-sort_SelectionSort",
              "label": "SelectionSort should visit EQUAL array element specified number of times",
              "name": "SelectionSort should visit EQUAL array element specified number of times@SelectionSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "SelectionSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "uniqueTitle": "SelectionSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 73,
                        "index": 800
                      },
                      "end": {
                        "line": 35,
                        "column": 3,
                        "index": 932
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#253",
              "algo": "selection-sort_SelectionSort",
              "label": "SelectionSort should visit SORTED array element specified number of times",
              "name": "SelectionSort should visit SORTED array element specified number of times@SelectionSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "SelectionSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "SelectionSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 74,
                        "index": 1012
                      },
                      "end": {
                        "line": 43,
                        "column": 3,
                        "index": 1146
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#254",
              "algo": "selection-sort_SelectionSort",
              "label": "SelectionSort should visit NOT SORTED array element specified number of times",
              "name": "SelectionSort should visit NOT SORTED array element specified number of times@SelectionSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "SelectionSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "uniqueTitle": "SelectionSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 45,
                        "column": 78,
                        "index": 1230
                      },
                      "end": {
                        "line": 51,
                        "column": 3,
                        "index": 1371
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#255",
              "algo": "selection-sort_SelectionSort",
              "label": "SelectionSort should visit REVERSE SORTED array element specified number of times",
              "name": "SelectionSort should visit REVERSE SORTED array element specified number of times@SelectionSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "SelectionSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "uniqueTitle": "SelectionSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 104
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 956
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
                    "loc": {
                      "start": {
                        "line": 53,
                        "column": 82,
                        "index": 1459
                      },
                      "end": {
                        "line": 59,
                        "column": 3,
                        "index": 1602
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "shell-sort",
          "exercises": [
            {
              "id": "javascript-algorithms#256",
              "algo": "shell-sort_ShellSort",
              "label": "ShellSort should sort array",
              "name": "ShellSort should sort array@ShellSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ShellSort.sort([])",
                  "uniqueTitle": "ShellSort.sort([])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 423
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 466
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ShellSort.sort([1])",
                  "uniqueTitle": "ShellSort.sort([1])",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 423
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 466
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ShellSort.sort([1,2])",
                  "uniqueTitle": "ShellSort.sort([1,2])",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 423
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 466
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ShellSort.sort([2,1])",
                  "uniqueTitle": "ShellSort.sort([2,1])",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 423
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 466
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ShellSort.sort([3,4,2,1,0,0,4,3,4,2])",
                  "uniqueTitle": "ShellSort.sort([3,4,2,1,0,0,4,3,4,2])",
                  "contextId": 22,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 423
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 466
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ShellSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "ShellSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "contextId": 233,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 423
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 466
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ShellSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "uniqueTitle": "ShellSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "contextId": 1194,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 423
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 466
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ShellSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "uniqueTitle": "ShellSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "contextId": 2155,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 423
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 466
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ShellSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "uniqueTitle": "ShellSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "contextId": 3116,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "index": 423
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 466
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ShellSort.sort([\"\"])",
                  "uniqueTitle": "ShellSort.sort([\"\"])",
                  "contextId": 4082,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 527
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ShellSort.sort([\"a\"])",
                  "uniqueTitle": "ShellSort.sort([\"a\"])",
                  "contextId": 4083,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 527
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ShellSort.sort([\"aa\",\"a\"])",
                  "uniqueTitle": "ShellSort.sort([\"aa\",\"a\"])",
                  "contextId": 4084,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 527
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ShellSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "ShellSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "contextId": 4088,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 527
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ShellSort.sort([\"aa\",\"aa\"])",
                  "uniqueTitle": "ShellSort.sort([\"aa\",\"aa\"])",
                  "contextId": 4113,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 527
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#257",
              "algo": "shell-sort_ShellSort",
              "label": "ShellSort should sort array with custom comparator",
              "name": "ShellSort should sort array with custom comparator@ShellSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ShellSort.sort([\"\"])",
                  "uniqueTitle": "ShellSort.sort([\"\"])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 527
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ShellSort.sort([\"a\"])",
                  "uniqueTitle": "ShellSort.sort([\"a\"])#2",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 527
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ShellSort.sort([\"aa\",\"a\"])",
                  "uniqueTitle": "ShellSort.sort([\"aa\",\"a\"])#2",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 527
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ShellSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
                  "uniqueTitle": "ShellSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#2",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 527
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "ShellSort.sort([\"aa\",\"aa\"])",
                  "uniqueTitle": "ShellSort.sort([\"aa\",\"aa\"])#2",
                  "contextId": 43,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 55,
                        "index": 527
                      },
                      "end": {
                        "line": 23,
                        "column": 3,
                        "index": 590
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#258",
              "algo": "shell-sort_ShellSort",
              "label": "ShellSort should sort negative numbers",
              "name": "ShellSort should sort negative numbers@ShellSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ShellSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
                  "uniqueTitle": "ShellSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 25,
                        "column": 43,
                        "index": 639
                      },
                      "end": {
                        "line": 27,
                        "column": 3,
                        "index": 697
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#259",
              "algo": "shell-sort_ShellSort",
              "label": "ShellSort should visit EQUAL array element specified number of times",
              "name": "ShellSort should visit EQUAL array element specified number of times@ShellSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ShellSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
                  "uniqueTitle": "ShellSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 73,
                        "index": 776
                      },
                      "end": {
                        "line": 35,
                        "column": 3,
                        "index": 904
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#260",
              "algo": "shell-sort_ShellSort",
              "label": "ShellSort should visit SORTED array element specified number of times",
              "name": "ShellSort should visit SORTED array element specified number of times@ShellSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ShellSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
                  "uniqueTitle": "ShellSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 74,
                        "index": 984
                      },
                      "end": {
                        "line": 43,
                        "column": 3,
                        "index": 1114
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#261",
              "algo": "shell-sort_ShellSort",
              "label": "ShellSort should visit NOT SORTED array element specified number of times",
              "name": "ShellSort should visit NOT SORTED array element specified number of times@ShellSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ShellSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
                  "uniqueTitle": "ShellSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 45,
                        "column": 78,
                        "index": 1198
                      },
                      "end": {
                        "line": 51,
                        "column": 3,
                        "index": 1335
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#262",
              "algo": "shell-sort_ShellSort",
              "label": "ShellSort should visit REVERSE SORTED array element specified number of times",
              "name": "ShellSort should visit REVERSE SORTED array element specified number of times@ShellSort.test.js",
              "pdgs": [
                {
                  "pdgTitle": "ShellSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
                  "uniqueTitle": "ShellSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#2",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 22,
                        "index": 100
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 1305
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
                    "loc": {
                      "start": {
                        "line": 53,
                        "column": 82,
                        "index": 1423
                      },
                      "end": {
                        "line": 59,
                        "column": 3,
                        "index": 1562
                      }
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "string",
      "chapters": [
        {
          "name": "hamming-distance",
          "exercises": [
            {
              "id": "javascript-algorithms#267",
              "algo": "hamming-distance_hammingDistance",
              "label": "hammingDistance should throw an error when trying to compare the strings of different lengths",
              "name": "hammingDistance should throw an error when trying to compare the strings of different lengths@hammingDistance.test.js",
              "pdgs": [
                {
                  "pdgTitle": "hammingDistance(a, aa)",
                  "uniqueTitle": "hammingDistance(a, aa)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/hamming-distance/hammingDistance.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 46,
                        "index": 121
                      },
                      "end": {
                        "line": 20,
                        "column": 1,
                        "index": 372
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/hamming-distance/__test__/hammingDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 50,
                        "index": 235
                      },
                      "end": {
                        "line": 7,
                        "column": 5,
                        "index": 278
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#268",
              "algo": "hamming-distance_hammingDistance",
              "label": "hammingDistance should calculate difference between two strings",
              "name": "hammingDistance should calculate difference between two strings@hammingDistance.test.js",
              "pdgs": [
                {
                  "pdgTitle": "hammingDistance(a, a)",
                  "uniqueTitle": "hammingDistance(a, a)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/hamming-distance/hammingDistance.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 46,
                        "index": 121
                      },
                      "end": {
                        "line": 20,
                        "column": 1,
                        "index": 372
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/hamming-distance/__test__/hammingDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 62,
                        "index": 415
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 809
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hammingDistance(a, b)",
                  "uniqueTitle": "hammingDistance(a, b)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/hamming-distance/hammingDistance.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 46,
                        "index": 121
                      },
                      "end": {
                        "line": 20,
                        "column": 1,
                        "index": 372
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/hamming-distance/__test__/hammingDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 62,
                        "index": 415
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 809
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hammingDistance(abc, add)",
                  "uniqueTitle": "hammingDistance(abc, add)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/hamming-distance/hammingDistance.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 46,
                        "index": 121
                      },
                      "end": {
                        "line": 20,
                        "column": 1,
                        "index": 372
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/hamming-distance/__test__/hammingDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 62,
                        "index": 415
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 809
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hammingDistance(karolin, kathrin)",
                  "uniqueTitle": "hammingDistance(karolin, kathrin)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/hamming-distance/hammingDistance.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 46,
                        "index": 121
                      },
                      "end": {
                        "line": 20,
                        "column": 1,
                        "index": 372
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/hamming-distance/__test__/hammingDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 62,
                        "index": 415
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 809
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hammingDistance(karolin, kerstin)",
                  "uniqueTitle": "hammingDistance(karolin, kerstin)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/hamming-distance/hammingDistance.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 46,
                        "index": 121
                      },
                      "end": {
                        "line": 20,
                        "column": 1,
                        "index": 372
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/hamming-distance/__test__/hammingDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 62,
                        "index": 415
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 809
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hammingDistance(1011101, 1001001)",
                  "uniqueTitle": "hammingDistance(1011101, 1001001)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/hamming-distance/hammingDistance.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 46,
                        "index": 121
                      },
                      "end": {
                        "line": 20,
                        "column": 1,
                        "index": 372
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/hamming-distance/__test__/hammingDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 62,
                        "index": 415
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 809
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "hammingDistance(2173896, 2233796)",
                  "uniqueTitle": "hammingDistance(2173896, 2233796)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/hamming-distance/hammingDistance.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 46,
                        "index": 121
                      },
                      "end": {
                        "line": 20,
                        "column": 1,
                        "index": 372
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/hamming-distance/__test__/hammingDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 12,
                        "column": 62,
                        "index": 415
                      },
                      "end": {
                        "line": 20,
                        "column": 3,
                        "index": 809
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "knuth-morris-pratt",
          "exercises": [
            {
              "id": "javascript-algorithms#269",
              "algo": "knuth-morris-pratt_knuthMorrisPratt",
              "label": "knuthMorrisPratt should find word position in given text",
              "name": "knuthMorrisPratt should find word position in given text@knuthMorrisPratt.test.js",
              "pdgs": [
                {
                  "pdgTitle": "knuthMorrisPratt(, )",
                  "uniqueTitle": "knuthMorrisPratt(, )",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/knuth-morris-pratt/knuthMorrisPratt.js",
                    "loc": {
                      "start": {
                        "line": 32,
                        "column": 53,
                        "index": 762
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/knuth-morris-pratt/__test__/knuthMorrisPratt.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 54,
                        "index": 147
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 778
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "knuthMorrisPratt(a, )",
                  "uniqueTitle": "knuthMorrisPratt(a, )",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/knuth-morris-pratt/knuthMorrisPratt.js",
                    "loc": {
                      "start": {
                        "line": 32,
                        "column": 53,
                        "index": 762
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/knuth-morris-pratt/__test__/knuthMorrisPratt.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 54,
                        "index": 147
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 778
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "knuthMorrisPratt(a, a)",
                  "uniqueTitle": "knuthMorrisPratt(a, a)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/knuth-morris-pratt/knuthMorrisPratt.js",
                    "loc": {
                      "start": {
                        "line": 32,
                        "column": 53,
                        "index": 762
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/knuth-morris-pratt/__test__/knuthMorrisPratt.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 54,
                        "index": 147
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 778
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "knuthMorrisPratt(abcbcglx, abca)",
                  "uniqueTitle": "knuthMorrisPratt(abcbcglx, abca)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/knuth-morris-pratt/knuthMorrisPratt.js",
                    "loc": {
                      "start": {
                        "line": 32,
                        "column": 53,
                        "index": 762
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/knuth-morris-pratt/__test__/knuthMorrisPratt.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 54,
                        "index": 147
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 778
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "knuthMorrisPratt(abcbcglx, bcgl)",
                  "uniqueTitle": "knuthMorrisPratt(abcbcglx, bcgl)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/knuth-morris-pratt/knuthMorrisPratt.js",
                    "loc": {
                      "start": {
                        "line": 32,
                        "column": 53,
                        "index": 762
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/knuth-morris-pratt/__test__/knuthMorrisPratt.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 54,
                        "index": 147
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 778
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "knuthMorrisPratt(abcxabcdabxabcdabcdabcy, abcdabcy)",
                  "uniqueTitle": "knuthMorrisPratt(abcxabcdabxabcdabcdabcy, abcdabcy)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/knuth-morris-pratt/knuthMorrisPratt.js",
                    "loc": {
                      "start": {
                        "line": 32,
                        "column": 53,
                        "index": 762
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/knuth-morris-pratt/__test__/knuthMorrisPratt.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 54,
                        "index": 147
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 778
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "knuthMorrisPratt(abcxabcdabxabcdabcdabcy, abcdabca)",
                  "uniqueTitle": "knuthMorrisPratt(abcxabcdabxabcdabcdabcy, abcdabca)",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/knuth-morris-pratt/knuthMorrisPratt.js",
                    "loc": {
                      "start": {
                        "line": 32,
                        "column": 53,
                        "index": 762
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/knuth-morris-pratt/__test__/knuthMorrisPratt.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 54,
                        "index": 147
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 778
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "knuthMorrisPratt(abcxabcdabxaabcdabcabcdabcdabcy, abcdabca)",
                  "uniqueTitle": "knuthMorrisPratt(abcxabcdabxaabcdabcabcdabcdabcy, abcdabca)",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/knuth-morris-pratt/knuthMorrisPratt.js",
                    "loc": {
                      "start": {
                        "line": 32,
                        "column": 53,
                        "index": 762
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/knuth-morris-pratt/__test__/knuthMorrisPratt.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 54,
                        "index": 147
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 778
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "knuthMorrisPratt(abcxabcdabxaabaabaaaabcdabcdabcy, aabaabaaa)",
                  "uniqueTitle": "knuthMorrisPratt(abcxabcdabxaabaabaaaabcdabcdabcy, aabaabaaa)",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/knuth-morris-pratt/knuthMorrisPratt.js",
                    "loc": {
                      "start": {
                        "line": 32,
                        "column": 53,
                        "index": 762
                      },
                      "end": {
                        "line": 59,
                        "column": 1,
                        "index": 1344
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/knuth-morris-pratt/__test__/knuthMorrisPratt.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 54,
                        "index": 147
                      },
                      "end": {
                        "line": 18,
                        "column": 3,
                        "index": 778
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "levenshtein-distance",
          "exercises": [
            {
              "id": "javascript-algorithms#270",
              "algo": "levenshtein-distance_levenshteinDistance",
              "label": "levenshteinDistance should calculate edit distance between two strings",
              "name": "levenshteinDistance should calculate edit distance between two strings@levenshteinDistance.test.js",
              "pdgs": [
                {
                  "pdgTitle": "levenshteinDistance(, )",
                  "uniqueTitle": "levenshteinDistance(, )",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 50,
                        "index": 125
                      },
                      "end": {
                        "line": 39,
                        "column": 1,
                        "index": 1334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 65,
                        "index": 167
                      },
                      "end": {
                        "line": 28,
                        "column": 3,
                        "index": 1161
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "levenshteinDistance(a, )",
                  "uniqueTitle": "levenshteinDistance(a, )",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 50,
                        "index": 125
                      },
                      "end": {
                        "line": 39,
                        "column": 1,
                        "index": 1334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 65,
                        "index": 167
                      },
                      "end": {
                        "line": 28,
                        "column": 3,
                        "index": 1161
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "levenshteinDistance(, a)",
                  "uniqueTitle": "levenshteinDistance(, a)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 50,
                        "index": 125
                      },
                      "end": {
                        "line": 39,
                        "column": 1,
                        "index": 1334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 65,
                        "index": 167
                      },
                      "end": {
                        "line": 28,
                        "column": 3,
                        "index": 1161
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "levenshteinDistance(abc, )",
                  "uniqueTitle": "levenshteinDistance(abc, )",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 50,
                        "index": 125
                      },
                      "end": {
                        "line": 39,
                        "column": 1,
                        "index": 1334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 65,
                        "index": 167
                      },
                      "end": {
                        "line": 28,
                        "column": 3,
                        "index": 1161
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "levenshteinDistance(, abc)",
                  "uniqueTitle": "levenshteinDistance(, abc)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 50,
                        "index": 125
                      },
                      "end": {
                        "line": 39,
                        "column": 1,
                        "index": 1334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 65,
                        "index": 167
                      },
                      "end": {
                        "line": 28,
                        "column": 3,
                        "index": 1161
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "levenshteinDistance(islander, slander)",
                  "uniqueTitle": "levenshteinDistance(islander, slander)",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 50,
                        "index": 125
                      },
                      "end": {
                        "line": 39,
                        "column": 1,
                        "index": 1334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 65,
                        "index": 167
                      },
                      "end": {
                        "line": 28,
                        "column": 3,
                        "index": 1161
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "levenshteinDistance(mart, karma)",
                  "uniqueTitle": "levenshteinDistance(mart, karma)",
                  "contextId": 28,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 50,
                        "index": 125
                      },
                      "end": {
                        "line": 39,
                        "column": 1,
                        "index": 1334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 65,
                        "index": 167
                      },
                      "end": {
                        "line": 28,
                        "column": 3,
                        "index": 1161
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "levenshteinDistance(kitten, sitting)",
                  "uniqueTitle": "levenshteinDistance(kitten, sitting)",
                  "contextId": 35,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 50,
                        "index": 125
                      },
                      "end": {
                        "line": 39,
                        "column": 1,
                        "index": 1334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 65,
                        "index": 167
                      },
                      "end": {
                        "line": 28,
                        "column": 3,
                        "index": 1161
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "levenshteinDistance(ball, football)",
                  "uniqueTitle": "levenshteinDistance(ball, football)",
                  "contextId": 44,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 50,
                        "index": 125
                      },
                      "end": {
                        "line": 39,
                        "column": 1,
                        "index": 1334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 65,
                        "index": 167
                      },
                      "end": {
                        "line": 28,
                        "column": 3,
                        "index": 1161
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "levenshteinDistance(football, foot)",
                  "uniqueTitle": "levenshteinDistance(football, foot)",
                  "contextId": 54,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 50,
                        "index": 125
                      },
                      "end": {
                        "line": 39,
                        "column": 1,
                        "index": 1334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 65,
                        "index": 167
                      },
                      "end": {
                        "line": 28,
                        "column": 3,
                        "index": 1161
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "levenshteinDistance(intention, execution)",
                  "uniqueTitle": "levenshteinDistance(intention, execution)",
                  "contextId": 60,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 50,
                        "index": 125
                      },
                      "end": {
                        "line": 39,
                        "column": 1,
                        "index": 1334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 65,
                        "index": 167
                      },
                      "end": {
                        "line": 28,
                        "column": 3,
                        "index": 1161
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "longest-common-substring",
          "exercises": [
            {
              "id": "javascript-algorithms#271",
              "algo": "longest-common-substring_longestCommonSubstring",
              "label": "longestCommonSubstring should find longest common substring between two strings",
              "name": "longestCommonSubstring should find longest common substring between two strings@longestCommonSubstring.test.js",
              "pdgs": [
                {
                  "pdgTitle": "longestCommonSubstring(, )",
                  "uniqueTitle": "longestCommonSubstring(, )",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 65,
                        "index": 152
                      },
                      "end": {
                        "line": 69,
                        "column": 1,
                        "index": 2334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 71,
                        "index": 182
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 756
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "longestCommonSubstring(ABC, )",
                  "uniqueTitle": "longestCommonSubstring(ABC, )",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 65,
                        "index": 152
                      },
                      "end": {
                        "line": 69,
                        "column": 1,
                        "index": 2334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 71,
                        "index": 182
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 756
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "longestCommonSubstring(, ABC)",
                  "uniqueTitle": "longestCommonSubstring(, ABC)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 65,
                        "index": 152
                      },
                      "end": {
                        "line": 69,
                        "column": 1,
                        "index": 2334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 71,
                        "index": 182
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 756
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "longestCommonSubstring(ABABC, BABCA)",
                  "uniqueTitle": "longestCommonSubstring(ABABC, BABCA)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 65,
                        "index": 152
                      },
                      "end": {
                        "line": 69,
                        "column": 1,
                        "index": 2334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 71,
                        "index": 182
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 756
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "longestCommonSubstring(BABCA, ABCBA)",
                  "uniqueTitle": "longestCommonSubstring(BABCA, ABCBA)",
                  "contextId": 21,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 65,
                        "index": 152
                      },
                      "end": {
                        "line": 69,
                        "column": 1,
                        "index": 2334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 71,
                        "index": 182
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 756
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "longestCommonSubstring(Algorithms and data structures implemented in JavaScript, Here you may find Algorithms and data structures that are implemented in JavaScript)",
                  "uniqueTitle": "longestCommonSubstring(Algorithms and data structures implemented in JavaScript, Here you may find Algorithms and data structures that are implemented in JavaScript)",
                  "contextId": 28,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 65,
                        "index": 152
                      },
                      "end": {
                        "line": 69,
                        "column": 1,
                        "index": 2334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 71,
                        "index": 182
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 756
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#272",
              "algo": "longest-common-substring_longestCommonSubstring",
              "label": "longestCommonSubstring should handle unicode correctly",
              "name": "longestCommonSubstring should handle unicode correctly@longestCommonSubstring.test.js",
              "pdgs": [
                {
                  "pdgTitle": "longestCommonSubstring(𐌵𐌵**ABC, 𐌵𐌵--ABC)",
                  "uniqueTitle": "longestCommonSubstring(𐌵𐌵**ABC, 𐌵𐌵--ABC)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 65,
                        "index": 152
                      },
                      "end": {
                        "line": 69,
                        "column": 1,
                        "index": 2334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
                    "loc": {
                      "start": {
                        "line": 18,
                        "column": 46,
                        "index": 808
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1132
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "longestCommonSubstring(𐌵𐌵**A, 𐌵𐌵--A)",
                  "uniqueTitle": "longestCommonSubstring(𐌵𐌵**A, 𐌵𐌵--A)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 65,
                        "index": 152
                      },
                      "end": {
                        "line": 69,
                        "column": 1,
                        "index": 2334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
                    "loc": {
                      "start": {
                        "line": 18,
                        "column": 46,
                        "index": 808
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1132
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "longestCommonSubstring(A买B时, 买B时GD)",
                  "uniqueTitle": "longestCommonSubstring(A买B时, 买B时GD)",
                  "contextId": 21,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 65,
                        "index": 152
                      },
                      "end": {
                        "line": 69,
                        "column": 1,
                        "index": 2334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
                    "loc": {
                      "start": {
                        "line": 18,
                        "column": 46,
                        "index": 808
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1132
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "longestCommonSubstring(After test买时 case, another_test买时)",
                  "uniqueTitle": "longestCommonSubstring(After test买时 case, another_test买时)",
                  "contextId": 28,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 65,
                        "index": 152
                      },
                      "end": {
                        "line": 69,
                        "column": 1,
                        "index": 2334
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
                    "loc": {
                      "start": {
                        "line": 18,
                        "column": 46,
                        "index": 808
                      },
                      "end": {
                        "line": 25,
                        "column": 3,
                        "index": 1132
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "palindrome",
          "exercises": [
            {
              "id": "javascript-algorithms#273",
              "algo": "palindrome_isPalindrome",
              "label": "palindromeCheck should return whether or not the string is a palindrome",
              "name": "palindromeCheck should return whether or not the string is a palindrome@isPalindrome.test.js",
              "pdgs": [
                {
                  "pdgTitle": "isPalindrome(a)",
                  "uniqueTitle": "isPalindrome(a)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/palindrome/isPalindrome.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 45,
                        "index": 106
                      },
                      "end": {
                        "line": 19,
                        "column": 1,
                        "index": 316
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/palindrome/__test__/isPalindrome.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 70,
                        "index": 154
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 532
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPalindrome(pop)",
                  "uniqueTitle": "isPalindrome(pop)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/palindrome/isPalindrome.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 45,
                        "index": 106
                      },
                      "end": {
                        "line": 19,
                        "column": 1,
                        "index": 316
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/palindrome/__test__/isPalindrome.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 70,
                        "index": 154
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 532
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPalindrome(deed)",
                  "uniqueTitle": "isPalindrome(deed)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/palindrome/isPalindrome.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 45,
                        "index": 106
                      },
                      "end": {
                        "line": 19,
                        "column": 1,
                        "index": 316
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/palindrome/__test__/isPalindrome.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 70,
                        "index": 154
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 532
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPalindrome(kayak)",
                  "uniqueTitle": "isPalindrome(kayak)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/palindrome/isPalindrome.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 45,
                        "index": 106
                      },
                      "end": {
                        "line": 19,
                        "column": 1,
                        "index": 316
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/palindrome/__test__/isPalindrome.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 70,
                        "index": 154
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 532
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPalindrome(racecar)",
                  "uniqueTitle": "isPalindrome(racecar)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/palindrome/isPalindrome.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 45,
                        "index": 106
                      },
                      "end": {
                        "line": 19,
                        "column": 1,
                        "index": 316
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/palindrome/__test__/isPalindrome.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 70,
                        "index": 154
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 532
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPalindrome(rad)",
                  "uniqueTitle": "isPalindrome(rad)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/palindrome/isPalindrome.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 45,
                        "index": 106
                      },
                      "end": {
                        "line": 19,
                        "column": 1,
                        "index": 316
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/palindrome/__test__/isPalindrome.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 70,
                        "index": 154
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 532
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPalindrome(dodo)",
                  "uniqueTitle": "isPalindrome(dodo)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/palindrome/isPalindrome.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 45,
                        "index": 106
                      },
                      "end": {
                        "line": 19,
                        "column": 1,
                        "index": 316
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/palindrome/__test__/isPalindrome.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 70,
                        "index": 154
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 532
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "isPalindrome(polo)",
                  "uniqueTitle": "isPalindrome(polo)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/palindrome/isPalindrome.js",
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 45,
                        "index": 106
                      },
                      "end": {
                        "line": 19,
                        "column": 1,
                        "index": 316
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/palindrome/__test__/isPalindrome.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 70,
                        "index": 154
                      },
                      "end": {
                        "line": 14,
                        "column": 3,
                        "index": 532
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "rabin-karp",
          "exercises": [
            {
              "id": "javascript-algorithms#274",
              "algo": "rabin-karp_rabinKarp",
              "label": "rabinKarp should find substring in a string",
              "name": "rabinKarp should find substring in a string@rabinKarp.test.js",
              "pdgs": [
                {
                  "pdgTitle": "rabinKarp(, )",
                  "uniqueTitle": "rabinKarp(, )",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 46,
                        "index": 326
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1450
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 120
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 760
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "rabinKarp(a, )",
                  "uniqueTitle": "rabinKarp(a, )",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 46,
                        "index": 326
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1450
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 120
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 760
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "rabinKarp(a, a)",
                  "uniqueTitle": "rabinKarp(a, a)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 46,
                        "index": 326
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1450
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 120
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 760
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "rabinKarp(ab, b)",
                  "uniqueTitle": "rabinKarp(ab, b)",
                  "contextId": 22,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 46,
                        "index": 326
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1450
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 120
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 760
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "rabinKarp(abcbcglx, abca)",
                  "uniqueTitle": "rabinKarp(abcbcglx, abca)",
                  "contextId": 33,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 46,
                        "index": 326
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1450
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 120
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 760
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "rabinKarp(abcbcglx, bcgl)",
                  "uniqueTitle": "rabinKarp(abcbcglx, bcgl)",
                  "contextId": 65,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 46,
                        "index": 326
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1450
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 120
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 760
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "rabinKarp(abcxabcdabxabcdabcdabcy, abcdabcy)",
                  "uniqueTitle": "rabinKarp(abcxabcdabxabcdabcdabcy, abcdabcy)",
                  "contextId": 94,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 46,
                        "index": 326
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1450
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 120
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 760
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "rabinKarp(abcxabcdabxabcdabcdabcy, abcdabca)",
                  "uniqueTitle": "rabinKarp(abcxabcdabxabcdabcdabcy, abcdabca)",
                  "contextId": 175,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 46,
                        "index": 326
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1450
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 120
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 760
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "rabinKarp(abcxabcdabxaabcdabcabcdabcdabcy, abcdabca)",
                  "uniqueTitle": "rabinKarp(abcxabcdabxaabcdabcabcdabcdabcy, abcdabca)",
                  "contextId": 256,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 46,
                        "index": 326
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1450
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 120
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 760
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "rabinKarp(abcxabcdabxaabaabaaaabcdabcdabcy, aabaabaaa)",
                  "uniqueTitle": "rabinKarp(abcxabcdabxaabaabaaaabcdabcdabcy, aabaabaaa)",
                  "contextId": 328,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 46,
                        "index": 326
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1450
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 120
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 760
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "rabinKarp(^ !/'#'pp,  !/'#'pp)",
                  "uniqueTitle": "rabinKarp(^ !/'#'pp,  !/'#'pp)",
                  "contextId": 401,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 46,
                        "index": 326
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1450
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 48,
                        "index": 120
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 760
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#275",
              "algo": "rabin-karp_rabinKarp",
              "label": "rabinKarp should work with bigger texts",
              "name": "rabinKarp should work with bigger texts@rabinKarp.test.js",
              "pdgs": [
                {
                  "pdgTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., Lorem)",
                  "uniqueTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., Lorem)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 46,
                        "index": 326
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1450
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
                    "loc": {
                      "start": {
                        "line": 18,
                        "column": 44,
                        "index": 810
                      },
                      "end": {
                        "line": 38,
                        "column": 3,
                        "index": 1864
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., versions)",
                  "uniqueTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., versions)",
                  "contextId": 30,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 46,
                        "index": 326
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1450
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
                    "loc": {
                      "start": {
                        "line": 18,
                        "column": 44,
                        "index": 810
                      },
                      "end": {
                        "line": 38,
                        "column": 3,
                        "index": 1864
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., versions of Lorem Ipsum.)",
                  "uniqueTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., versions of Lorem Ipsum.)",
                  "contextId": 1713,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 46,
                        "index": 326
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1450
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
                    "loc": {
                      "start": {
                        "line": 18,
                        "column": 44,
                        "index": 810
                      },
                      "end": {
                        "line": 38,
                        "column": 3,
                        "index": 1864
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., versions of Lorem Ipsum:)",
                  "uniqueTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., versions of Lorem Ipsum:)",
                  "contextId": 3460,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 46,
                        "index": 326
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1450
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
                    "loc": {
                      "start": {
                        "line": 18,
                        "column": 44,
                        "index": 810
                      },
                      "end": {
                        "line": 38,
                        "column": 3,
                        "index": 1864
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., Lorem Ipsum passages, and more recently with)",
                  "uniqueTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., Lorem Ipsum passages, and more recently with)",
                  "contextId": 5207,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 46,
                        "index": 326
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1450
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
                    "loc": {
                      "start": {
                        "line": 18,
                        "column": 44,
                        "index": 810
                      },
                      "end": {
                        "line": 38,
                        "column": 3,
                        "index": 1864
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#276",
              "algo": "rabin-karp_rabinKarp",
              "label": "rabinKarp should work with UTF symbols",
              "name": "rabinKarp should work with UTF symbols@rabinKarp.test.js",
              "pdgs": [
                {
                  "pdgTitle": "rabinKarp(a￿, ￿)",
                  "uniqueTitle": "rabinKarp(a￿, ￿)",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 46,
                        "index": 326
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1450
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 43,
                        "index": 1913
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 2138
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "rabinKarp(\u0000耀\u0000, 耀\u0000)",
                  "uniqueTitle": "rabinKarp(\u0000耀\u0000, 耀\u0000)",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 46,
                        "index": 326
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1450
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 43,
                        "index": 1913
                      },
                      "end": {
                        "line": 45,
                        "column": 3,
                        "index": 2138
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "regular-expression-matching",
          "exercises": [
            {
              "id": "javascript-algorithms#277",
              "algo": "regular-expression-matching_regularExpressionMatching",
              "label": "regularExpressionMatching should match regular expressions in a string",
              "name": "regularExpressionMatching should match regular expressions in a string@regularExpressionMatching.test.js",
              "pdgs": [
                {
                  "pdgTitle": "regularExpressionMatching(, )",
                  "uniqueTitle": "regularExpressionMatching(, )",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(a, a)",
                  "uniqueTitle": "regularExpressionMatching(a, a)",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(aa, aa)",
                  "uniqueTitle": "regularExpressionMatching(aa, aa)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(aab, aab)",
                  "uniqueTitle": "regularExpressionMatching(aab, aab)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(aab, aa.)",
                  "uniqueTitle": "regularExpressionMatching(aab, aa.)",
                  "contextId": 19,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(aab, .a.)",
                  "uniqueTitle": "regularExpressionMatching(aab, .a.)",
                  "contextId": 24,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(aab, ...)",
                  "uniqueTitle": "regularExpressionMatching(aab, ...)",
                  "contextId": 29,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(a, a*)",
                  "uniqueTitle": "regularExpressionMatching(a, a*)",
                  "contextId": 34,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(aaa, a*)",
                  "uniqueTitle": "regularExpressionMatching(aaa, a*)",
                  "contextId": 37,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(aaab, a*b)",
                  "uniqueTitle": "regularExpressionMatching(aaab, a*b)",
                  "contextId": 42,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(aaabb, a*b*)",
                  "uniqueTitle": "regularExpressionMatching(aaabb, a*b*)",
                  "contextId": 48,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(aaabb, a*b*c*)",
                  "uniqueTitle": "regularExpressionMatching(aaabb, a*b*c*)",
                  "contextId": 55,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(, a*)",
                  "uniqueTitle": "regularExpressionMatching(, a*)",
                  "contextId": 62,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(xaabyc, xa*b.c)",
                  "uniqueTitle": "regularExpressionMatching(xaabyc, xa*b.c)",
                  "contextId": 64,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(aab, c*a*b*)",
                  "uniqueTitle": "regularExpressionMatching(aab, c*a*b*)",
                  "contextId": 72,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(mississippi, mis*is*.p*.)",
                  "uniqueTitle": "regularExpressionMatching(mississippi, mis*is*.p*.)",
                  "contextId": 77,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(ab, .*)",
                  "uniqueTitle": "regularExpressionMatching(ab, .*)",
                  "contextId": 90,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(, a)",
                  "uniqueTitle": "regularExpressionMatching(, a)",
                  "contextId": 94,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(a, )",
                  "uniqueTitle": "regularExpressionMatching(a, )",
                  "contextId": 96,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(aab, aa)",
                  "uniqueTitle": "regularExpressionMatching(aab, aa)",
                  "contextId": 99,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(aab, baa)",
                  "uniqueTitle": "regularExpressionMatching(aab, baa)",
                  "contextId": 104,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(aabc, ...)",
                  "uniqueTitle": "regularExpressionMatching(aabc, ...)",
                  "contextId": 109,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(aaabbdd, a*b*c*)",
                  "uniqueTitle": "regularExpressionMatching(aaabbdd, a*b*c*)",
                  "contextId": 115,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(mississippi, mis*is*p*.)",
                  "uniqueTitle": "regularExpressionMatching(mississippi, mis*is*p*.)",
                  "contextId": 124,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(ab, a*)",
                  "uniqueTitle": "regularExpressionMatching(ab, a*)",
                  "contextId": 137,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(abba, a*b*.c)",
                  "uniqueTitle": "regularExpressionMatching(abba, a*b*.c)",
                  "contextId": 141,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "regularExpressionMatching(abba, .*c)",
                  "uniqueTitle": "regularExpressionMatching(abba, .*c)",
                  "contextId": 147,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 67,
                        "index": 250
                      },
                      "end": {
                        "line": 136,
                        "column": 1,
                        "index": 4766
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 59,
                        "index": 179
                      },
                      "end": {
                        "line": 33,
                        "column": 3,
                        "index": 1979
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "z-algorithm",
          "exercises": [
            {
              "id": "javascript-algorithms#278",
              "algo": "z-algorithm_zAlgorithm",
              "label": "zAlgorithm should find word positions in given text",
              "name": "zAlgorithm should find word positions in given text@zAlgorithm.test.js",
              "pdgs": [
                {
                  "pdgTitle": "zAlgorithm(abcbcglx, abca)",
                  "uniqueTitle": "zAlgorithm(abcbcglx, abca)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 106,
                        "column": 47,
                        "index": 4034
                      },
                      "end": {
                        "line": 132,
                        "column": 1,
                        "index": 5183
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 55,
                        "index": 130
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 839
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "zAlgorithm(abca, abca)",
                  "uniqueTitle": "zAlgorithm(abca, abca)",
                  "contextId": 20,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 106,
                        "column": 47,
                        "index": 4034
                      },
                      "end": {
                        "line": 132,
                        "column": 1,
                        "index": 5183
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 55,
                        "index": 130
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 839
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "zAlgorithm(abca, abcadfd)",
                  "uniqueTitle": "zAlgorithm(abca, abcadfd)",
                  "contextId": 31,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 106,
                        "column": 47,
                        "index": 4034
                      },
                      "end": {
                        "line": 132,
                        "column": 1,
                        "index": 5183
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 55,
                        "index": 130
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 839
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "zAlgorithm(abcbcglabcx, abc)",
                  "uniqueTitle": "zAlgorithm(abcbcglabcx, abc)",
                  "contextId": 45,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 106,
                        "column": 47,
                        "index": 4034
                      },
                      "end": {
                        "line": 132,
                        "column": 1,
                        "index": 5183
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 55,
                        "index": 130
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 839
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "zAlgorithm(abcbcglx, bcgl)",
                  "uniqueTitle": "zAlgorithm(abcbcglx, bcgl)",
                  "contextId": 62,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 106,
                        "column": 47,
                        "index": 4034
                      },
                      "end": {
                        "line": 132,
                        "column": 1,
                        "index": 5183
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 55,
                        "index": 130
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 839
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "zAlgorithm(abcbcglx, cglx)",
                  "uniqueTitle": "zAlgorithm(abcbcglx, cglx)",
                  "contextId": 77,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 106,
                        "column": 47,
                        "index": 4034
                      },
                      "end": {
                        "line": 132,
                        "column": 1,
                        "index": 5183
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 55,
                        "index": 130
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 839
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "zAlgorithm(abcxabcdabxabcdabcdabcy, abcdabcy)",
                  "uniqueTitle": "zAlgorithm(abcxabcdabxabcdabcdabcy, abcdabcy)",
                  "contextId": 92,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 106,
                        "column": 47,
                        "index": 4034
                      },
                      "end": {
                        "line": 132,
                        "column": 1,
                        "index": 5183
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 55,
                        "index": 130
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 839
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "zAlgorithm(abcxabcdabxabcdabcdabcy, abcdabca)",
                  "uniqueTitle": "zAlgorithm(abcxabcdabxabcdabcdabcy, abcdabca)",
                  "contextId": 126,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 106,
                        "column": 47,
                        "index": 4034
                      },
                      "end": {
                        "line": 132,
                        "column": 1,
                        "index": 5183
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 55,
                        "index": 130
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 839
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "zAlgorithm(abcxabcdabxaabcdabcabcdabcdabcy, abcdabca)",
                  "uniqueTitle": "zAlgorithm(abcxabcdabxaabcdabcabcdabcdabcy, abcdabca)",
                  "contextId": 160,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 106,
                        "column": 47,
                        "index": 4034
                      },
                      "end": {
                        "line": 132,
                        "column": 1,
                        "index": 5183
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 55,
                        "index": 130
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 839
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "zAlgorithm(abcxabcdabxaabaabaaaabcdabcdabcy, aabaabaaa)",
                  "uniqueTitle": "zAlgorithm(abcxabcdabxaabaabaaaabcdabcdabcy, aabaabaaa)",
                  "contextId": 202,
                  "algoLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
                    "loc": {
                      "start": {
                        "line": 106,
                        "column": 47,
                        "index": 4034
                      },
                      "end": {
                        "line": 132,
                        "column": 1,
                        "index": 5183
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 55,
                        "index": 130
                      },
                      "end": {
                        "line": 19,
                        "column": 3,
                        "index": 839
                      }
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "tree",
      "chapters": [
        {
          "name": "breadth-first-search",
          "exercises": [
            {
              "id": "javascript-algorithms#279",
              "algo": "breadth-first-search_breadthFirstSearch",
              "label": "breadthFirstSearch should perform BFS operation on tree",
              "name": "breadthFirstSearch should perform BFS operation on tree@breadthFirstSearch.test.js",
              "pdgs": [
                {
                  "pdgTitle": "breadthFirstSearch({left,right,parent,value,meta,nodeComparator})",
                  "uniqueTitle": "breadthFirstSearch({left,right,parent,value,meta,nodeComparator})",
                  "contextId": 718,
                  "algoLoc": {
                    "filePath": "src/algorithms/tree/breadth-first-search/breadthFirstSearch.js",
                    "loc": {
                      "start": {
                        "line": 35,
                        "column": 72,
                        "index": 1207
                      },
                      "end": {
                        "line": 67,
                        "column": 1,
                        "index": 1984
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/tree/breadth-first-search/__test__/breadthFirstSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 229
                      },
                      "end": {
                        "line": 53,
                        "column": 3,
                        "index": 2232
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "breadthFirstSearch({left,right,parent,value,meta,nodeComparator}, {enterNode,leaveNode})",
                  "uniqueTitle": "breadthFirstSearch({left,right,parent,value,meta,nodeComparator}, {enterNode,leaveNode})",
                  "contextId": 786,
                  "algoLoc": {
                    "filePath": "src/algorithms/tree/breadth-first-search/breadthFirstSearch.js",
                    "loc": {
                      "start": {
                        "line": 35,
                        "column": 72,
                        "index": 1207
                      },
                      "end": {
                        "line": 67,
                        "column": 1,
                        "index": 1984
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/tree/breadth-first-search/__test__/breadthFirstSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 229
                      },
                      "end": {
                        "line": 53,
                        "column": 3,
                        "index": 2232
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#280",
              "algo": "breadth-first-search_breadthFirstSearch",
              "label": "breadthFirstSearch allow users to redefine node visiting logic",
              "name": "breadthFirstSearch allow users to redefine node visiting logic@breadthFirstSearch.test.js",
              "pdgs": [
                {
                  "pdgTitle": "breadthFirstSearch({left,right,parent,value,meta,nodeComparator})",
                  "uniqueTitle": "breadthFirstSearch({left,right,parent,value,meta,nodeComparator})#2",
                  "contextId": 718,
                  "algoLoc": {
                    "filePath": "src/algorithms/tree/breadth-first-search/breadthFirstSearch.js",
                    "loc": {
                      "start": {
                        "line": 35,
                        "column": 72,
                        "index": 1207
                      },
                      "end": {
                        "line": 67,
                        "column": 1,
                        "index": 1984
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/tree/breadth-first-search/__test__/breadthFirstSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 55,
                        "column": 58,
                        "index": 2296
                      },
                      "end": {
                        "line": 101,
                        "column": 3,
                        "index": 4033
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "breadthFirstSearch({left,right,parent,value,meta,nodeComparator}, {allowTraversal,enterNode,leaveNode})",
                  "uniqueTitle": "breadthFirstSearch({left,right,parent,value,meta,nodeComparator}, {allowTraversal,enterNode,leaveNode})",
                  "contextId": 786,
                  "algoLoc": {
                    "filePath": "src/algorithms/tree/breadth-first-search/breadthFirstSearch.js",
                    "loc": {
                      "start": {
                        "line": 35,
                        "column": 72,
                        "index": 1207
                      },
                      "end": {
                        "line": 67,
                        "column": 1,
                        "index": 1984
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/tree/breadth-first-search/__test__/breadthFirstSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 55,
                        "column": 58,
                        "index": 2296
                      },
                      "end": {
                        "line": 101,
                        "column": 3,
                        "index": 4033
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "depth-first-search",
          "exercises": [
            {
              "id": "javascript-algorithms#281",
              "algo": "depth-first-search_depthFirstSearch",
              "label": "depthFirstSearch should perform DFS operation on tree",
              "name": "depthFirstSearch should perform DFS operation on tree@depthFirstSearch.test.js",
              "pdgs": [
                {
                  "pdgTitle": "depthFirstSearch({left,right,parent,value,meta,nodeComparator})",
                  "uniqueTitle": "depthFirstSearch({left,right,parent,value,meta,nodeComparator})",
                  "contextId": 717,
                  "algoLoc": {
                    "filePath": "src/algorithms/tree/depth-first-search/depthFirstSearch.js",
                    "loc": {
                      "start": {
                        "line": 73,
                        "column": 62,
                        "index": 3054
                      },
                      "end": {
                        "line": 79,
                        "column": 1,
                        "index": 3357
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/tree/depth-first-search/__test__/depthFirstSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 223
                      },
                      "end": {
                        "line": 53,
                        "column": 3,
                        "index": 2222
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "depthFirstSearch({left,right,parent,value,meta,nodeComparator}, {enterNode,leaveNode})",
                  "uniqueTitle": "depthFirstSearch({left,right,parent,value,meta,nodeComparator}, {enterNode,leaveNode})",
                  "contextId": 746,
                  "algoLoc": {
                    "filePath": "src/algorithms/tree/depth-first-search/depthFirstSearch.js",
                    "loc": {
                      "start": {
                        "line": 73,
                        "column": 62,
                        "index": 3054
                      },
                      "end": {
                        "line": 79,
                        "column": 1,
                        "index": 3357
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/tree/depth-first-search/__test__/depthFirstSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 51,
                        "index": 223
                      },
                      "end": {
                        "line": 53,
                        "column": 3,
                        "index": 2222
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#282",
              "algo": "depth-first-search_depthFirstSearch",
              "label": "depthFirstSearch allow users to redefine node visiting logic",
              "name": "depthFirstSearch allow users to redefine node visiting logic@depthFirstSearch.test.js",
              "pdgs": [
                {
                  "pdgTitle": "depthFirstSearch({left,right,parent,value,meta,nodeComparator})",
                  "uniqueTitle": "depthFirstSearch({left,right,parent,value,meta,nodeComparator})#2",
                  "contextId": 717,
                  "algoLoc": {
                    "filePath": "src/algorithms/tree/depth-first-search/depthFirstSearch.js",
                    "loc": {
                      "start": {
                        "line": 73,
                        "column": 62,
                        "index": 3054
                      },
                      "end": {
                        "line": 79,
                        "column": 1,
                        "index": 3357
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/tree/depth-first-search/__test__/depthFirstSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 55,
                        "column": 58,
                        "index": 2286
                      },
                      "end": {
                        "line": 101,
                        "column": 3,
                        "index": 4019
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "depthFirstSearch({left,right,parent,value,meta,nodeComparator}, {allowTraversal,enterNode,leaveNode})",
                  "uniqueTitle": "depthFirstSearch({left,right,parent,value,meta,nodeComparator}, {allowTraversal,enterNode,leaveNode})",
                  "contextId": 746,
                  "algoLoc": {
                    "filePath": "src/algorithms/tree/depth-first-search/depthFirstSearch.js",
                    "loc": {
                      "start": {
                        "line": 73,
                        "column": 62,
                        "index": 3054
                      },
                      "end": {
                        "line": 79,
                        "column": 1,
                        "index": 3357
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/tree/depth-first-search/__test__/depthFirstSearch.test.js",
                    "loc": {
                      "start": {
                        "line": 55,
                        "column": 58,
                        "index": 2286
                      },
                      "end": {
                        "line": 101,
                        "column": 3,
                        "index": 4019
                      }
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "uncategorized",
      "chapters": [
        {
          "name": "best-time-to-buy-sell-stocks",
          "exercises": [
            {
              "id": "javascript-algorithms#283",
              "algo": "best-time-to-buy-sell-stocks_accumulatorBestTimeToBuySellStocks",
              "label": "accumulatorBestTimeToBuySellStocks should find the best time to buy and sell stocks",
              "name": "accumulatorBestTimeToBuySellStocks should find the best time to buy and sell stocks@accumulatorBestTimeToBuySellStocks.test.js",
              "pdgs": [
                {
                  "pdgTitle": "accumulatorBestTimeToBuySellStocks([1,5])",
                  "uniqueTitle": "accumulatorBestTimeToBuySellStocks([1,5])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 61,
                        "index": 378
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 773
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 210
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1828
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "accumulatorBestTimeToBuySellStocks([1], ƒ mockConstructor)",
                  "uniqueTitle": "accumulatorBestTimeToBuySellStocks([1], ƒ mockConstructor)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 61,
                        "index": 378
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 773
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 210
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1828
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "accumulatorBestTimeToBuySellStocks([1,5], ƒ mockConstructor)",
                  "uniqueTitle": "accumulatorBestTimeToBuySellStocks([1,5], ƒ mockConstructor)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 61,
                        "index": 378
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 773
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 210
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1828
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "accumulatorBestTimeToBuySellStocks([5,1], ƒ mockConstructor)",
                  "uniqueTitle": "accumulatorBestTimeToBuySellStocks([5,1], ƒ mockConstructor)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 61,
                        "index": 378
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 773
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 210
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1828
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "accumulatorBestTimeToBuySellStocks([1,5,10], ƒ mockConstructor)",
                  "uniqueTitle": "accumulatorBestTimeToBuySellStocks([1,5,10], ƒ mockConstructor)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 61,
                        "index": 378
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 773
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 210
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1828
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "accumulatorBestTimeToBuySellStocks([10,1,5,20,15,21], ƒ mockConstructor)",
                  "uniqueTitle": "accumulatorBestTimeToBuySellStocks([10,1,5,20,15,21], ƒ mockConstructor)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 61,
                        "index": 378
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 773
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 210
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1828
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "accumulatorBestTimeToBuySellStocks([7,1,5,3,6,4], ƒ mockConstructor)",
                  "uniqueTitle": "accumulatorBestTimeToBuySellStocks([7,1,5,3,6,4], ƒ mockConstructor)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 61,
                        "index": 378
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 773
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 210
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1828
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "accumulatorBestTimeToBuySellStocks([1,2,3,4,5], ƒ mockConstructor)",
                  "uniqueTitle": "accumulatorBestTimeToBuySellStocks([1,2,3,4,5], ƒ mockConstructor)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 61,
                        "index": 378
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 773
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 210
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1828
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "accumulatorBestTimeToBuySellStocks([7,6,4,3,1], ƒ mockConstructor)",
                  "uniqueTitle": "accumulatorBestTimeToBuySellStocks([7,6,4,3,1], ƒ mockConstructor)",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 61,
                        "index": 378
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 773
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 210
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1828
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "accumulatorBestTimeToBuySellStocks([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], ƒ mockConstructor)",
                  "uniqueTitle": "accumulatorBestTimeToBuySellStocks([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], ƒ mockConstructor)",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 61,
                        "index": 378
                      },
                      "end": {
                        "line": 22,
                        "column": 1,
                        "index": 773
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 210
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1828
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#284",
              "algo": "best-time-to-buy-sell-stocks_peakvalleyBestTimeToBuySellStocks",
              "label": "peakvalleyBestTimeToBuySellStocks should find the best time to buy and sell stocks",
              "name": "peakvalleyBestTimeToBuySellStocks should find the best time to buy and sell stocks@peakvalleyBestTimeToBuySellStocks.test.js",
              "pdgs": [
                {
                  "pdgTitle": "peakvalleyBestTimeToBuySellStocks([1,5])",
                  "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([1,5])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 377
                      },
                      "end": {
                        "line": 37,
                        "column": 1,
                        "index": 1103
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 207
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1815
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "peakvalleyBestTimeToBuySellStocks([1], ƒ mockConstructor)",
                  "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([1], ƒ mockConstructor)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 377
                      },
                      "end": {
                        "line": 37,
                        "column": 1,
                        "index": 1103
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 207
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1815
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "peakvalleyBestTimeToBuySellStocks([1,5], ƒ mockConstructor)",
                  "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([1,5], ƒ mockConstructor)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 377
                      },
                      "end": {
                        "line": 37,
                        "column": 1,
                        "index": 1103
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 207
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1815
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "peakvalleyBestTimeToBuySellStocks([5,1], ƒ mockConstructor)",
                  "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([5,1], ƒ mockConstructor)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 377
                      },
                      "end": {
                        "line": 37,
                        "column": 1,
                        "index": 1103
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 207
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1815
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "peakvalleyBestTimeToBuySellStocks([1,5,10], ƒ mockConstructor)",
                  "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([1,5,10], ƒ mockConstructor)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 377
                      },
                      "end": {
                        "line": 37,
                        "column": 1,
                        "index": 1103
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 207
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1815
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "peakvalleyBestTimeToBuySellStocks([10,1,5,20,15,21], ƒ mockConstructor)",
                  "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([10,1,5,20,15,21], ƒ mockConstructor)",
                  "contextId": 17,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 377
                      },
                      "end": {
                        "line": 37,
                        "column": 1,
                        "index": 1103
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 207
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1815
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "peakvalleyBestTimeToBuySellStocks([7,1,5,3,6,4], ƒ mockConstructor)",
                  "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([7,1,5,3,6,4], ƒ mockConstructor)",
                  "contextId": 23,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 377
                      },
                      "end": {
                        "line": 37,
                        "column": 1,
                        "index": 1103
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 207
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1815
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "peakvalleyBestTimeToBuySellStocks([1,2,3,4,5], ƒ mockConstructor)",
                  "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([1,2,3,4,5], ƒ mockConstructor)",
                  "contextId": 29,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 377
                      },
                      "end": {
                        "line": 37,
                        "column": 1,
                        "index": 1103
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 207
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1815
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "peakvalleyBestTimeToBuySellStocks([7,6,4,3,1], ƒ mockConstructor)",
                  "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([7,6,4,3,1], ƒ mockConstructor)",
                  "contextId": 34,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 377
                      },
                      "end": {
                        "line": 37,
                        "column": 1,
                        "index": 1103
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 207
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1815
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "peakvalleyBestTimeToBuySellStocks([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], ƒ mockConstructor)",
                  "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], ƒ mockConstructor)",
                  "contextId": 39,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 60,
                        "index": 377
                      },
                      "end": {
                        "line": 37,
                        "column": 1,
                        "index": 1103
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 207
                      },
                      "end": {
                        "line": 57,
                        "column": 3,
                        "index": 1815
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#285",
              "algo": "best-time-to-buy-sell-stocks_dqBestTimeToBuySellStocks",
              "label": "dqBestTimeToBuySellStocks should find the best time to buy and sell stocks",
              "name": "dqBestTimeToBuySellStocks should find the best time to buy and sell stocks@dqBestTimeToBuySellStocks.test.js"
            },
            {
              "id": "javascript-algorithms#286",
              "algo": "best-time-to-buy-sell-stocks_dpBestTimeToBuySellStocks",
              "label": "dpBestTimeToBuySellStocks should find the best time to buy and sell stocks",
              "name": "dpBestTimeToBuySellStocks should find the best time to buy and sell stocks@dpBestTimeToBuySellStocks.test.js",
              "pdgs": [
                {
                  "pdgTitle": "dpBestTimeToBuySellStocks([1,5])",
                  "uniqueTitle": "dpBestTimeToBuySellStocks([1,5])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 52,
                        "index": 377
                      },
                      "end": {
                        "line": 27,
                        "column": 1,
                        "index": 827
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 183
                      },
                      "end": {
                        "line": 51,
                        "column": 3,
                        "index": 1669
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpBestTimeToBuySellStocks([1], ƒ mockConstructor)",
                  "uniqueTitle": "dpBestTimeToBuySellStocks([1], ƒ mockConstructor)",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 52,
                        "index": 377
                      },
                      "end": {
                        "line": 27,
                        "column": 1,
                        "index": 827
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 183
                      },
                      "end": {
                        "line": 51,
                        "column": 3,
                        "index": 1669
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpBestTimeToBuySellStocks([1,5], ƒ mockConstructor)",
                  "uniqueTitle": "dpBestTimeToBuySellStocks([1,5], ƒ mockConstructor)",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 52,
                        "index": 377
                      },
                      "end": {
                        "line": 27,
                        "column": 1,
                        "index": 827
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 183
                      },
                      "end": {
                        "line": 51,
                        "column": 3,
                        "index": 1669
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpBestTimeToBuySellStocks([5,1], ƒ mockConstructor)",
                  "uniqueTitle": "dpBestTimeToBuySellStocks([5,1], ƒ mockConstructor)",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 52,
                        "index": 377
                      },
                      "end": {
                        "line": 27,
                        "column": 1,
                        "index": 827
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 183
                      },
                      "end": {
                        "line": 51,
                        "column": 3,
                        "index": 1669
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpBestTimeToBuySellStocks([1,5,10], ƒ mockConstructor)",
                  "uniqueTitle": "dpBestTimeToBuySellStocks([1,5,10], ƒ mockConstructor)",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 52,
                        "index": 377
                      },
                      "end": {
                        "line": 27,
                        "column": 1,
                        "index": 827
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 183
                      },
                      "end": {
                        "line": 51,
                        "column": 3,
                        "index": 1669
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpBestTimeToBuySellStocks([10,1,5,20,15,21], ƒ mockConstructor)",
                  "uniqueTitle": "dpBestTimeToBuySellStocks([10,1,5,20,15,21], ƒ mockConstructor)",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 52,
                        "index": 377
                      },
                      "end": {
                        "line": 27,
                        "column": 1,
                        "index": 827
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 183
                      },
                      "end": {
                        "line": 51,
                        "column": 3,
                        "index": 1669
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpBestTimeToBuySellStocks([7,1,5,3,6,4], ƒ mockConstructor)",
                  "uniqueTitle": "dpBestTimeToBuySellStocks([7,1,5,3,6,4], ƒ mockConstructor)",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 52,
                        "index": 377
                      },
                      "end": {
                        "line": 27,
                        "column": 1,
                        "index": 827
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 183
                      },
                      "end": {
                        "line": 51,
                        "column": 3,
                        "index": 1669
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpBestTimeToBuySellStocks([1,2,3,4,5], ƒ mockConstructor)",
                  "uniqueTitle": "dpBestTimeToBuySellStocks([1,2,3,4,5], ƒ mockConstructor)",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 52,
                        "index": 377
                      },
                      "end": {
                        "line": 27,
                        "column": 1,
                        "index": 827
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 183
                      },
                      "end": {
                        "line": 51,
                        "column": 3,
                        "index": 1669
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpBestTimeToBuySellStocks([7,6,4,3,1], ƒ mockConstructor)",
                  "uniqueTitle": "dpBestTimeToBuySellStocks([7,6,4,3,1], ƒ mockConstructor)",
                  "contextId": 15,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 52,
                        "index": 377
                      },
                      "end": {
                        "line": 27,
                        "column": 1,
                        "index": 827
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 183
                      },
                      "end": {
                        "line": 51,
                        "column": 3,
                        "index": 1669
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpBestTimeToBuySellStocks([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], ƒ mockConstructor)",
                  "uniqueTitle": "dpBestTimeToBuySellStocks([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], ƒ mockConstructor)",
                  "contextId": 16,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 52,
                        "index": 377
                      },
                      "end": {
                        "line": 27,
                        "column": 1,
                        "index": 827
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 63,
                        "index": 183
                      },
                      "end": {
                        "line": 51,
                        "column": 3,
                        "index": 1669
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "hanoi-tower",
          "exercises": [
            {
              "id": "javascript-algorithms#287",
              "algo": "hanoi-tower_hanoiTower",
              "label": "hanoiTower should solve tower of hanoi puzzle with 2 discs",
              "name": "hanoiTower should solve tower of hanoi puzzle with 2 discs@hanoiTower.test.js",
              "pdgs": [
                {
                  "pdgTitle": "hanoiTower({numberOfDiscs,moveCallback,fromPole,withPole,toPole})",
                  "uniqueTitle": "hanoiTower({numberOfDiscs,moveCallback,fromPole,withPole,toPole})",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/hanoi-tower/hanoiTower.js",
                    "loc": {
                      "start": {
                        "line": 60,
                        "column": 42,
                        "index": 1693
                      },
                      "end": {
                        "line": 87,
                        "column": 1,
                        "index": 2616
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/hanoi-tower/__test__/hanoiTower.test.js",
                    "loc": {
                      "start": {
                        "line": 5,
                        "column": 62,
                        "index": 199
                      },
                      "end": {
                        "line": 37,
                        "column": 3,
                        "index": 1172
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#288",
              "algo": "hanoi-tower_hanoiTower",
              "label": "hanoiTower should solve tower of hanoi puzzle with 3 discs",
              "name": "hanoiTower should solve tower of hanoi puzzle with 3 discs@hanoiTower.test.js",
              "pdgs": [
                {
                  "pdgTitle": "hanoiTower({numberOfDiscs,moveCallback,fromPole,withPole,toPole})",
                  "uniqueTitle": "hanoiTower({numberOfDiscs,moveCallback,fromPole,withPole,toPole})#2",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/hanoi-tower/hanoiTower.js",
                    "loc": {
                      "start": {
                        "line": 60,
                        "column": 42,
                        "index": 1693
                      },
                      "end": {
                        "line": 87,
                        "column": 1,
                        "index": 2616
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/hanoi-tower/__test__/hanoiTower.test.js",
                    "loc": {
                      "start": {
                        "line": 39,
                        "column": 62,
                        "index": 1240
                      },
                      "end": {
                        "line": 56,
                        "column": 3,
                        "index": 1614
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#289",
              "algo": "hanoi-tower_hanoiTower",
              "label": "hanoiTower should solve tower of hanoi puzzle with 6 discs",
              "name": "hanoiTower should solve tower of hanoi puzzle with 6 discs@hanoiTower.test.js",
              "pdgs": [
                {
                  "pdgTitle": "hanoiTower({numberOfDiscs,moveCallback,fromPole,withPole,toPole})",
                  "uniqueTitle": "hanoiTower({numberOfDiscs,moveCallback,fromPole,withPole,toPole})#3",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/hanoi-tower/hanoiTower.js",
                    "loc": {
                      "start": {
                        "line": 60,
                        "column": 42,
                        "index": 1693
                      },
                      "end": {
                        "line": 87,
                        "column": 1,
                        "index": 2616
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/hanoi-tower/__test__/hanoiTower.test.js",
                    "loc": {
                      "start": {
                        "line": 58,
                        "column": 62,
                        "index": 1682
                      },
                      "end": {
                        "line": 75,
                        "column": 3,
                        "index": 2056
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "jump-game",
          "exercises": [
            {
              "id": "javascript-algorithms#290",
              "algo": "jump-game_backtrackingJumpGame",
              "label": "backtrackingJumpGame should solve Jump Game problem in backtracking manner",
              "name": "backtrackingJumpGame should solve Jump Game problem in backtracking manner@backtrackingJumpGame.test.js",
              "pdgs": [
                {
                  "pdgTitle": "backtrackingJumpGame([1,0])",
                  "uniqueTitle": "backtrackingJumpGame([1,0])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 54,
                        "index": 623
                      },
                      "end": {
                        "line": 56,
                        "column": 1,
                        "index": 1917
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 68,
                        "index": 173
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 806
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "backtrackingJumpGame([100,0])",
                  "uniqueTitle": "backtrackingJumpGame([100,0])",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 54,
                        "index": 623
                      },
                      "end": {
                        "line": 56,
                        "column": 1,
                        "index": 1917
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 68,
                        "index": 173
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 806
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "backtrackingJumpGame([2,3,1,1,4])",
                  "uniqueTitle": "backtrackingJumpGame([2,3,1,1,4])",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 54,
                        "index": 623
                      },
                      "end": {
                        "line": 56,
                        "column": 1,
                        "index": 1917
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 68,
                        "index": 173
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 806
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "backtrackingJumpGame([1,1,1,1,1])",
                  "uniqueTitle": "backtrackingJumpGame([1,1,1,1,1])",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 54,
                        "index": 623
                      },
                      "end": {
                        "line": 56,
                        "column": 1,
                        "index": 1917
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 68,
                        "index": 173
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 806
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "backtrackingJumpGame([1,1,1,10,1])",
                  "uniqueTitle": "backtrackingJumpGame([1,1,1,10,1])",
                  "contextId": 18,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 54,
                        "index": 623
                      },
                      "end": {
                        "line": 56,
                        "column": 1,
                        "index": 1917
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 68,
                        "index": 173
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 806
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "backtrackingJumpGame([1,5,2,1,0,2,0])",
                  "uniqueTitle": "backtrackingJumpGame([1,5,2,1,0,2,0])",
                  "contextId": 23,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 54,
                        "index": 623
                      },
                      "end": {
                        "line": 56,
                        "column": 1,
                        "index": 1917
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 68,
                        "index": 173
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 806
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "backtrackingJumpGame([1,0,1])",
                  "uniqueTitle": "backtrackingJumpGame([1,0,1])",
                  "contextId": 26,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 54,
                        "index": 623
                      },
                      "end": {
                        "line": 56,
                        "column": 1,
                        "index": 1917
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 68,
                        "index": 173
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 806
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "backtrackingJumpGame([3,2,1,0,4])",
                  "uniqueTitle": "backtrackingJumpGame([3,2,1,0,4])",
                  "contextId": 28,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 54,
                        "index": 623
                      },
                      "end": {
                        "line": 56,
                        "column": 1,
                        "index": 1917
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 68,
                        "index": 173
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 806
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "backtrackingJumpGame([0,0,0,0,0])",
                  "uniqueTitle": "backtrackingJumpGame([0,0,0,0,0])",
                  "contextId": 36,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 54,
                        "index": 623
                      },
                      "end": {
                        "line": 56,
                        "column": 1,
                        "index": 1917
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 68,
                        "index": 173
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 806
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "backtrackingJumpGame([5,4,3,2,1,0,0])",
                  "uniqueTitle": "backtrackingJumpGame([5,4,3,2,1,0,0])",
                  "contextId": 37,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 54,
                        "index": 623
                      },
                      "end": {
                        "line": 56,
                        "column": 1,
                        "index": 1917
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 68,
                        "index": 173
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 806
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#291",
              "algo": "jump-game_dpBottomUpJumpGame",
              "label": "dpBottomUpJumpGame should solve Jump Game problem in bottom-up dynamic programming manner",
              "name": "dpBottomUpJumpGame should solve Jump Game problem in bottom-up dynamic programming manner@dpBottomUpJumpGame.test.js",
              "pdgs": [
                {
                  "pdgTitle": "dpBottomUpJumpGame([1,0])",
                  "uniqueTitle": "dpBottomUpJumpGame([1,0])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 52,
                        "index": 810
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1879
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 184
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 797
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpBottomUpJumpGame([100,0])",
                  "uniqueTitle": "dpBottomUpJumpGame([100,0])",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 52,
                        "index": 810
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1879
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 184
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 797
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpBottomUpJumpGame([2,3,1,1,4])",
                  "uniqueTitle": "dpBottomUpJumpGame([2,3,1,1,4])",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 52,
                        "index": 810
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1879
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 184
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 797
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpBottomUpJumpGame([1,1,1,1,1])",
                  "uniqueTitle": "dpBottomUpJumpGame([1,1,1,1,1])",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 52,
                        "index": 810
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1879
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 184
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 797
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpBottomUpJumpGame([1,1,1,10,1])",
                  "uniqueTitle": "dpBottomUpJumpGame([1,1,1,10,1])",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 52,
                        "index": 810
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1879
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 184
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 797
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpBottomUpJumpGame([1,5,2,1,0,2,0])",
                  "uniqueTitle": "dpBottomUpJumpGame([1,5,2,1,0,2,0])",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 52,
                        "index": 810
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1879
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 184
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 797
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpBottomUpJumpGame([1,0,1])",
                  "uniqueTitle": "dpBottomUpJumpGame([1,0,1])",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 52,
                        "index": 810
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1879
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 184
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 797
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpBottomUpJumpGame([3,2,1,0,4])",
                  "uniqueTitle": "dpBottomUpJumpGame([3,2,1,0,4])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 52,
                        "index": 810
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1879
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 184
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 797
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpBottomUpJumpGame([0,0,0,0,0])",
                  "uniqueTitle": "dpBottomUpJumpGame([0,0,0,0,0])",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 52,
                        "index": 810
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1879
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 184
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 797
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpBottomUpJumpGame([5,4,3,2,1,0,0])",
                  "uniqueTitle": "dpBottomUpJumpGame([5,4,3,2,1,0,0])",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 52,
                        "index": 810
                      },
                      "end": {
                        "line": 46,
                        "column": 1,
                        "index": 1879
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "index": 184
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 797
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#292",
              "algo": "jump-game_dpTopDownJumpGame",
              "label": "dpTopDownJumpGame should solve Jump Game problem in top-down dynamic programming manner",
              "name": "dpTopDownJumpGame should solve Jump Game problem in top-down dynamic programming manner@dpTopDownJumpGame.test.js",
              "pdgs": [
                {
                  "pdgTitle": "dpTopDownJumpGame([1,0])",
                  "uniqueTitle": "dpTopDownJumpGame([1,0])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 51,
                        "index": 883
                      },
                      "end": {
                        "line": 81,
                        "column": 1,
                        "index": 3050
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 84,
                        "index": 180
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 783
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpTopDownJumpGame([100,0])",
                  "uniqueTitle": "dpTopDownJumpGame([100,0])",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 51,
                        "index": 883
                      },
                      "end": {
                        "line": 81,
                        "column": 1,
                        "index": 3050
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 84,
                        "index": 180
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 783
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpTopDownJumpGame([2,3,1,1,4])",
                  "uniqueTitle": "dpTopDownJumpGame([2,3,1,1,4])",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 51,
                        "index": 883
                      },
                      "end": {
                        "line": 81,
                        "column": 1,
                        "index": 3050
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 84,
                        "index": 180
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 783
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpTopDownJumpGame([1,1,1,1,1])",
                  "uniqueTitle": "dpTopDownJumpGame([1,1,1,1,1])",
                  "contextId": 22,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 51,
                        "index": 883
                      },
                      "end": {
                        "line": 81,
                        "column": 1,
                        "index": 3050
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 84,
                        "index": 180
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 783
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpTopDownJumpGame([1,1,1,10,1])",
                  "uniqueTitle": "dpTopDownJumpGame([1,1,1,10,1])",
                  "contextId": 32,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 51,
                        "index": 883
                      },
                      "end": {
                        "line": 81,
                        "column": 1,
                        "index": 3050
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 84,
                        "index": 180
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 783
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpTopDownJumpGame([1,5,2,1,0,2,0])",
                  "uniqueTitle": "dpTopDownJumpGame([1,5,2,1,0,2,0])",
                  "contextId": 42,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 51,
                        "index": 883
                      },
                      "end": {
                        "line": 81,
                        "column": 1,
                        "index": 3050
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 84,
                        "index": 180
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 783
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpTopDownJumpGame([1,0,1])",
                  "uniqueTitle": "dpTopDownJumpGame([1,0,1])",
                  "contextId": 52,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 51,
                        "index": 883
                      },
                      "end": {
                        "line": 81,
                        "column": 1,
                        "index": 3050
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 84,
                        "index": 180
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 783
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpTopDownJumpGame([3,2,1,0,4])",
                  "uniqueTitle": "dpTopDownJumpGame([3,2,1,0,4])",
                  "contextId": 57,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 51,
                        "index": 883
                      },
                      "end": {
                        "line": 81,
                        "column": 1,
                        "index": 3050
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 84,
                        "index": 180
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 783
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpTopDownJumpGame([0,0,0,0,0])",
                  "uniqueTitle": "dpTopDownJumpGame([0,0,0,0,0])",
                  "contextId": 66,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 51,
                        "index": 883
                      },
                      "end": {
                        "line": 81,
                        "column": 1,
                        "index": 3050
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 84,
                        "index": 180
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 783
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "dpTopDownJumpGame([5,4,3,2,1,0,0])",
                  "uniqueTitle": "dpTopDownJumpGame([5,4,3,2,1,0,0])",
                  "contextId": 72,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 51,
                        "index": 883
                      },
                      "end": {
                        "line": 81,
                        "column": 1,
                        "index": 3050
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 84,
                        "index": 180
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 783
                      }
                    }
                  }
                }
              ]
            },
            {
              "id": "javascript-algorithms#293",
              "algo": "jump-game_greedyJumpGame",
              "label": "greedyJumpGame should solve Jump Game problem in greedy manner",
              "name": "greedyJumpGame should solve Jump Game problem in greedy manner@greedyJumpGame.test.js",
              "pdgs": [
                {
                  "pdgTitle": "greedyJumpGame([1,0])",
                  "uniqueTitle": "greedyJumpGame([1,0])",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 48,
                        "index": 885
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1832
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 62,
                        "index": 149
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 722
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "greedyJumpGame([100,0])",
                  "uniqueTitle": "greedyJumpGame([100,0])",
                  "contextId": 6,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 48,
                        "index": 885
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1832
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 62,
                        "index": 149
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 722
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "greedyJumpGame([2,3,1,1,4])",
                  "uniqueTitle": "greedyJumpGame([2,3,1,1,4])",
                  "contextId": 7,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 48,
                        "index": 885
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1832
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 62,
                        "index": 149
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 722
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "greedyJumpGame([1,1,1,1,1])",
                  "uniqueTitle": "greedyJumpGame([1,1,1,1,1])",
                  "contextId": 8,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 48,
                        "index": 885
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1832
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 62,
                        "index": 149
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 722
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "greedyJumpGame([1,1,1,10,1])",
                  "uniqueTitle": "greedyJumpGame([1,1,1,10,1])",
                  "contextId": 9,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 48,
                        "index": 885
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1832
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 62,
                        "index": 149
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 722
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "greedyJumpGame([1,5,2,1,0,2,0])",
                  "uniqueTitle": "greedyJumpGame([1,5,2,1,0,2,0])",
                  "contextId": 10,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 48,
                        "index": 885
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1832
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 62,
                        "index": 149
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 722
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "greedyJumpGame([1,0,1])",
                  "uniqueTitle": "greedyJumpGame([1,0,1])",
                  "contextId": 11,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 48,
                        "index": 885
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1832
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 62,
                        "index": 149
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 722
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "greedyJumpGame([3,2,1,0,4])",
                  "uniqueTitle": "greedyJumpGame([3,2,1,0,4])",
                  "contextId": 12,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 48,
                        "index": 885
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1832
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 62,
                        "index": 149
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 722
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "greedyJumpGame([0,0,0,0,0])",
                  "uniqueTitle": "greedyJumpGame([0,0,0,0,0])",
                  "contextId": 13,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 48,
                        "index": 885
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1832
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 62,
                        "index": 149
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 722
                      }
                    }
                  }
                },
                {
                  "pdgTitle": "greedyJumpGame([5,4,3,2,1,0,0])",
                  "uniqueTitle": "greedyJumpGame([5,4,3,2,1,0,0])",
                  "contextId": 14,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 48,
                        "index": 885
                      },
                      "end": {
                        "line": 44,
                        "column": 1,
                        "index": 1832
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 62,
                        "index": 149
                      },
                      "end": {
                        "line": 16,
                        "column": 3,
                        "index": 722
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "knight-tour",
          "exercises": [
            {
              "id": "javascript-algorithms#294",
              "algo": "knight-tour_knightTour",
              "label": "knightTour should not find solution on 3x3 board",
              "name": "knightTour should not find solution on 3x3 board@knightTour.test.js",
              "pdgs": [
                {
                  "pdgTitle": "knightTour(3)",
                  "uniqueTitle": "knightTour(3)",
                  "contextId": 5,
                  "algoLoc": {
                    "filePath": "src/algorithms/uncategorized/knight-tour/knightTour.js",
                    "loc": {
                      "start": {
                        "line": 98,
                        "column": 51,
                        "index": 2923
                      },
                      "end": {
                        "line": 116,
                        "column": 1,
                        "index": 3424
                      }
                    }
                  },
                  "testLoc": {
                    "filePath": "src/algorithms/uncategorized/knight-tour/__test__/knightTour.test.js",
                    "loc": {
                      "start": {
                        "line": 4,
                        "column": 52,
                        "index": 127
                      },
                      "end": {
                        "line": 8,
                        "column": 3,
                        "index": 204
                      }
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}